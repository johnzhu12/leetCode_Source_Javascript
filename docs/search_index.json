{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["1","3","cd","clone","code","delet","dp","es6map","excel","fizzbuzz","g","getrandom","git","gitbook","https://github.com/johnzhu12/leetcode_source_javascript.git","ii","iii","insert","instal","interview","introduct","ip","js。源码在每个对应目录的","k","leetcode_source_javascript","li","n","npm","o(1)","pow(x,n).md>)","problem","serv","strstr","tag","url","x","一次编辑","三合一","三数之和","三步问题","下一个数","不同路径","两个数组的交集","两数之和","两数相加","两数相除","两整数之和","个最大元素","个节点","个高频元素","中序遍历二叉树","中级算法","买卖股票的最佳时机","买股票最佳时机","二叉搜索树中的众树","二叉搜索树中第","二叉搜索树序列","二叉搜索树最小绝对差","二叉树的坡度","二叉树的层序遍历","二叉树的序列化与反序列化","二叉树的所有路径","二叉树的最大深度","二叉树的最小深度","二叉树的直径","二叉树的锯齿形层次遍历","二进制数转字符串","介绍","从前序与中序遍历序列构造二叉树","从叶结点开始的最小字符串","任务调度器","位","位操作","全排列","八皇后","其他","其他相关算法和数据结构","分割链表","分数到小数","初级算法","删除排序数组中的重复项","删除链表中的节点","删除链表的倒数第","判定是否互为字符重排","刷，后面按公司其他","刷，题目有重复的地方","前","加一","动态规划","动物收容所","化","化栈为队","十大排序","单词搜索","反转字符串","反转链表","只出现一次的数字","合并两个有序数组","合并两个有序链表","合并区间","合法二叉搜索树","后继者","回文排列","回文数","回文链表","回溯算法","困难","在排序数组中查找元素的第一个和最后一个位置","在线地址：https://johnzhu12.github.io/leetcode_source_javascript/","地址","堆盘子","填充每个节点的下一个右侧节点指针","复原","外观数列","多数元素","奇偶链表","子集","字母异位词分组","字符串","字符串中的第一个唯一字符","字符串压缩","字符串的排列","字符串相乘","字符串转换整数","字符串轮转","字符是否唯一","字节跳动","存在重复","实现","对称二叉树","寻找峰值","将有序数组转换为二叉搜索树","小的元素","岛屿数量","岛屿的最大面积","左叶子之和","帕斯卡三角形","幂集","开始按简单，中级","快乐数","戳气球","打乱数组","打家劫舍","括号","括号生成","排序和搜索","插入","搜索二维矩阵","搜索旋转排序数组","数学","数据结构","数据结构底层原理模拟","数组","数组与字符串","数组中的第","数组和字符串","数组和排序","整数反转","整数转换","文件夹下","旋转图像","旋转数组","旋转矩阵","无重复字符串的排列组合","无重复字符的最长子串","最大子序和","最小栈","最小覆盖子串","最小高度树","最短编辑距离","最长公共前缀","最长回文子串","有效的字母异位词","有效的括号","有效的数独","有重复字符串的排列组合","栈与队列","栈排序","栈的最小值","树","树与图","树和图","根据二叉树创建字符串","检查子树","检查平衡性","求和路径","汉明距离","汉诺塔问题","爬楼梯","特定节点深度链表","环形链表","环路检测","电话号码的字母组合","的个数","的幂","的平方根","相交链表","矩阵中的路径","矩阵置零","硬币","移动零","移除重复节点","程序员面试金典","第一个错误的版本","简化路径","算法","绘制直线","缺失数字","罗马数字转整数","翻转二叉树","翻转字符串里的单词","翻转数位","腾讯","自己的刷题记录，理一下思路。语言是","节点间通路","表列名称","表列序号","计数质数","设计问题","路径总和","跳跃游戏","返回倒数第","迷路的机器人","逆波兰表达式求值","递增的三元子序列","递归与动态规划","递归乘法","配对交换","链表","链表求和","链表相交","阶乘后的零","阿里","零矩阵","零钱兑换","面试题","题集","颜色分类","颜色填充","颠倒二进制位","首个共同祖先","验证二叉搜索树","验证回文字符串","魔术索引"],"easy/Array/存在重复.html":["!=","(nums.length","=","containsdupl","function(nums)","if(nums.length","new","nums.length;","return","set","set(nums);","set.siz","var","{","};","利用set","存在重复","思路","排序后再看","暴力检查","这题比较简单，3种方案"],"easy/Array/加一.html":["(++rev[i]","(digits)","(i","//","//超出一位","0","0,","10)","9]","=","==","[9,","break;","console.log(a)","console.log(rev)","digit","digits.length;","digits.reverse();","function","i++;","len","len)","pluson","plusone(digits)","re","res;","return","rev","rev.push(1);","rev.reverse()","rev[i]","var","{","}","};","加一","只有是10的情况下才要处理，个位置0，然后依次+1，但最高位的时候(i==len)，表示进位到最高位了，push进数组一个1。这个时候一定要break,不然走到while，就又多加了一个1。","思路","自己写的","遍历数组从0开始，所以把数组翻转下，这样先加的就是个位数。首先判断个位++rev[i](i这时候i是0)，"],"easy/Array/两个数组的交集.html":["&&","*","*/","/**","1)","=","=>","@param","@return","[];","arr","arr.push(item);","arr;","for(var","function(nums1,","i=0,len=nums1.length;i=0){","intersect","nums1","nums1.filter((el)","nums2","nums2)","nums2.includes(el)","nums2.splice(nums2.indexof(el),","nums2.splice(nums2.indexof(item),1)","return","var","{","{number[]}","}","})","};","两个数组的交集","便利数组1，如果数组2里面有，则push进结果数组，关键就是判断之后要nums2.splice,把遍历过了，且同时存在于两个数组中的元素给去掉","思路","自己开始写的","这个原理差不多，只不过使用了es6的filter,includes等方法"],"easy/Array/两数之和.html":["*","*/",",a[4]是0，就是之前的存储的值，所以返回[a[temp],i]","/**","0)","0。","4","5","9","=","=0;i","=5,a[5]是undefined。所以存储a[4]","==","=[];","@param","@return","[];","for(var","function","function(nums,","i,这里把对应值位置存储当前的index。","i=0,len=","if(nums.length","num","nums.length;i","nums[i];,a[temp]肯定是undefined，a[nums[i]]","return","target","target)","temp","twosum","twosum(nums,target){","var","{","{number[]}","{number}","两数之和","举个例子：","到i=6的时候,temp","思路","数组第一个元素是4，第7个元素是5，然后和是9。","暴力遍历","然后后面temp找到的时候，就是之前a[temp]就是之前存储的位置","第一种是暴力遍历。","第二种比较巧的方式，就是使用hashtable。js里没有hashtable，所以可以用数组来达到同样作用。","遍历开始,i=0,temp","首先遍历一开始，var"],"easy/Array/买股票最佳时机.html":["(let","(price","*","*/","+=","/**","0","1，2，3，第二天同时卖出并且买入2的价格。但这样等价于第二天可以没有交易，只是计算了下可得利润。","=",">","@param","@return","buy","buy)","function(prices)","maxprofit","money","price","prices)","prices[0]","return","var","{","{number[]}","{number}","}","};","买股票最佳时期","买股票最佳时机","可以第一天买入，第3天卖出。得出利润一致","唯一比较绕的一点是，可能会觉得同一天进行卖出和买入操作不符合(首先题目没有规定这样不可以)。","思路","比如","这题比较简单，使用贪心算法解决。只要后面一天比前面一天价格高，就进行买卖操作。"],"easy/Array/旋转数组.html":["(nums,","(nums.length","(var","0)","0;","=","==","[];","function","k)","return","rotat","var","{","思路","旋转数组","然后k次循环，从数组最后面pop出元素，塞到数组前面就可以了","熟悉pop和unshift用法","首先空数组判断"],"easy/Array/旋转图像.html":["!","(matrix)","(var","//[[1],[2],[3]]","//循环几层","0;","=","=>","[[3],[2],[1]]","[]","for(var","function","function(matrix)","i=0;i","len","matrix.length;","matrix.reverse()","n","rotat","temp_arr","var","{","了，直接写个方法遍历操作数组就行了。","借用局部对象，不符合题目要求","利用原数组，本地测可以。","发现把每个原数组的第一个元素出来，形成一个新的数组，作为结果数组的第一项，每个原数组的第二个元素取出来，变成结果数组的第二项...那就比较简单","后面方案3和4，转置再翻转，或者翻转再转置一致，就是元素交换位置。[i][j]和[j][i]交换,然后发现再reverse一下就好了。","如下第一个方案，但是用了局部变量，没有原地，不符合题目。方案二类似，我是打算在原数组后面再加两个空数组，其实也不符合题意的原地旋转","思路","所以对于二维数组，转置一下有奇效！","把矩阵看为一层一层的，由外层到内层，这是外循环。每一层看成四个小的块交换位置，这是内循环。","整个翻转，再转置var","方法5，答案里的方案。稍微难理解一些","方法三","旋转图像","转置，然后再翻转一下","首先看到题目一开始我是懵逼的，只能像做逻辑题，试试找一下规律。"],"easy/Array/移动零.html":["!=","(nums)","(var","0","0))","0).concat(nums.filter(a","0;","=","==","=>","count","function","function(nums)","movezero","nums.filter(a","return","var","{","};","开始写的，没通过，可能不支持filter吧","思路","比较简单，就是把0取出来，然后放到数组后面","然后重写一个，加个变量计数通过了","移动零"],"easy/Array/有效的数独.html":["!=","!==","&&","'.')","(board)","(board.length","(containsduplicate(element))","(element.length","(error)","(nums.length","(reg.test(item)","(var","*","*/","+","/","/**","//","//先去掉点","//检查每一列是否重复","//检查每一行是否重复","//检验长度和字符是否正确","/[^1","0;","3","3)","3),计算每个小cube的index。","9)","9]/","=","=>","@param","@return","[]","[]//9宫格","[]//行","board","board.foreach(el","catch","col","colum","cube","element.foreach(item","error;","false;","function","isvalidsudoku","isvalidsudoku(board)","item","math.trunc(i","math.trunc(j","new","reg","return","row","throw","tri","var","{","{boolean}","{character[][]}","}","});","列","另外和之前的计算两树之和技巧类似，保存之前的值为true(hashtable的思路),如果后面再一次出现，就是重复了，返回fals","司徒大大的解，很优雅，关键就是index","开始的思路很简单，照着规则验证","思路","我开始写的","有效数独","有效的数独","检查每一行，每一列，每个小九宫格是否重复。"],"easy/Array/只出现一次的数字.html":["(nums)","(nums.length","(var","0)","0;","1,0^1^1","=","=0","==","false;","function","function(nums)","num","nums.join(\",\");","return","singlenumb","str","var","{","利用set，然后set元素的和乘以2减去当前数组元素的和就得出那个唯一的数字","只出现一次的数字","异或简单","异或，答案里看到的，很神奇。0^1","思路","正则，match的字符，如果len是1就可以","还有一种是排序后，两两对比","这题相对比较简单，有很多方法实现"],"easy/Array/删除排序数组中的重复项.html":["!=","(nums.length","(var","*","*/","/**","0)","0;","1;","=","==","@param","@return","for(var","function","function(nums)","j","num","nums[i],nums[++i]","nums[j]。关键是题目给出是排序数组！","removedupl","removeduplicates(nums)","return","var","{","{number[]}","{number}","删除排序数组中的重复项","官方答案里的，很优雅，两个游标，i和j,每当出现nums[j]","官方解","思路","数组删除重复项","时间复杂度：o(n)","空间复杂度：o(1)","自己写的","遍历，遇到相同元素就用splice去除，一定要记得j"],"easy/String/反转字符串.html":["(let","(s)",")","/","0;","1;","2)","=",">=","function","function(s)","item","js有个api，直接翻转","len","math.floor(s.length","oldl","oldl)","return","reversestr","s.length","s.length,","s.push(item)","s.reverse()","s.splice(0,","s[i]","var","{","}","};","倒着遍历，push进数组，然后把之前的删掉","反转字符串","思路","镜像循环长度length/2,交换位置"],"easy/String/整数反转.html":["'').split('').reverse().join('')","')","(math.abs(x)","(re","(如果不用这个方法，就判断下第一个字符是不是'","*","+","1","31)","=",">","function(x)","math.pow(2,","math.sign","math.sign(x)","re","revers","sign","var","{","||","上符号","先取符号","判断范围","反转数组","字符串","字符串转数组","思路","整数反转","正数返回","符号函数，","绝对值","自己写的,调试过几次，注意细节","转字符串","采用es6","题目不难，主要是细节","，负数返回"],"easy/String/字符串中的第一个唯一字符.html":["(let","(s)","(s.length","(var","//转成数组","0","0)","0;","1","1)","=","==","[],","firstuniqchar","function","function(s)","index","return","s","s.split(\"\")","temp","var","{","字符串中的第一个唯一字符","自己开始写的，感觉很不优雅","题解里的，很巧妙"],"easy/String/有效的字母异位词.html":["\"anagram中国\"","\"中nagar国am\"","(s","(s,","//unicode解码","=","==","console.log(res)","escape(s)","false;","function","isanagram","isanagram(s,","re","return","s","s.split(\"\").sort().join(\"\")","t","t)","t.split(\"\").sort().join(\"\")","true;","unescape(s);","unescape(t);","var","{","}","};","很简单，unicode编码解码一下。转成数组排序再转成字符串，判断下是否相等就可以了","思路","有效的字母异位词"],"easy/String/验证回文字符串.html":["\"\")","(s)","(s.split(\"\").reverse().join(\"\")","9]/g,","=","==","false;","function","ispalindrom","return","s","s)","s.replace(/[^a","s.tolowercase()","true;","var","z0","{","}","};","回文字符串","忽略大小写，就先转成小写。然后正则去掉非字母和数字的字符，然后转成数组reverse，再转成字符串比较","思路","验证回文字符串"],"easy/String/字符串转换整数.html":["\"\"","(!numstr)","(num","(str)","(str.length","//去掉空格","/^[\\+|\\","0)","0;","1","1)","31)","9]+/","=",">","]?[0","function","math.pow(2,","myatoi","num","numstr","parseint(numstr[0])","reg","return","str","str.match(reg);","str.trim();","var","{","}","去掉空格，正则匹配出数字和符号位。然后转成数字。并判断下是否超出范围。","字符串转换整数","思路"],"easy/String/实现strStr.html":["'')","(haystack,","(needle.length","0)","0,len","0;","=","==","for(let","function","function(haystack,","haystack.indexof(needle)","haystack.split('');","haystackarr","haystackarr.length;i","if(needl","needle)","needle.length;","needlelen","return","strstr","var","{","};","实现","实现strstr","思路","用api直接可以","用substr"],"easy/String/外观数列.html":["\"\"","\"\";","\"1\";","\"111221\"","'1'","(last.length","(n","(n)","(var","*","*/","*代表匹配0次以上","+","/**","//","//从第一行开始，一行一行产生","//得到上一行的字符串","//得到字符","//得到第","//第一行就直接输出","//输出当前行的字符串","//递归，知道n","//长度为","0","0)","0;","1","1)","1);","1;","1行的，就知道n行的","3","=","==",">","@param","@return","\\1指第一个匹配括号内的元素","\\d","`${item.length}${item[0]}`)","count","countandsay","countandsay(n","countandsay(n)","for(let","function","function(n)","getnextstring(last)","getnextstring(last);","getnextstring(last.substring(num));","getrepeatnum(last);","getrepeatnum(string)","last","last.charat(0)","n","num","prev","re","return","same","string.charat(0);","string[0]","temp","var","{","{number}","{string}","}","};","个字符重复的次数","其余的字符串的情况","匹配数字","匹配连续0次以上的数字","外观数列","就返回空字符串","当前字符","思路","既然有递归，那就可以写出迭代","次数","正则要好好学啊","的重复个数，例如","返回","连起来就是","递归","题解里的，很秀，用正则解决。"],"easy/String/最长公共前缀.html":["''","(let","(strs)","(strs.length","*","*/","/**","0)","1;","=","==","@param","@return","an","function","longestcommonprefix","return","str","strs[0]","var","{","{string[]}","{string}","思路","最长公共前缀"],"easy/LinkedList/删除链表中的节点.html":["(node)","*","*/","/**","//因为要删除节点，所以我们将节点的下一个节点赋值给nextnod","//将下个节点的值赋给节点","//将下个节点的指向赋给节点","=","@param","@return","anything,","definit","deletenod","function","instead.","link","list.","listnode(val)","modifi","nextnod","nextnode.next;","nextnode.val;","node","node.next","node.next;","node.v","null;","place","return","singli","this.next","this.val","val;","var","{","{listnode}","{void}","}","};","删除链表中的节点","思路","简单明了"],"easy/LinkedList/删除链表的倒数第N个节点.html":["(!first)","(first.next)","(head,","(n","*","*/","/**","//","0)","=",">","@param","@return","definit","first","first.next","first.next;","first还有后续节点，就让second和first一起往后移动，直到first到链表末尾。这是second.next就是要删除的倒数第n个节点了","function","head","head,","head.next;","head;","link","list.","listnode(val)","n","n)","null;","removenthfromend","return","second","second.next","second.next.next;","second.next.next删除掉，返回头节点","second.next;","singli","this.next","this.val","val;","var","{","{listnode}","{number}","}","};","两个游标，一个first,一个second。都指向头结点","个节点","先把first往后移动n个节点。","删除的是头节点","删除链表的倒数第","删除链表的倒数第n个节点","如果first为null,就是到尾部了，所以删除的是头结点。(题目里保证n是有效的，也就是说不会超过链表长度)","思路"],"easy/LinkedList/反转链表.html":["(head)","(node)","//","=","==","befor","forward","function","head,","head.next","head.next.next","head;","if(head","list","newhead","newhead;","next","node","node.next","node.next!","node.next;","node;","null","null)","null,","null;","null这一句，我想不是只有末尾置成null了吗，怎么会每一个节点的指向都置为null。","overwrit","pointer","previou","previous;","return","revers","reverselist","reverselist(head.next);","save","step","tmp","tmp;","var","{","||","}","};","其实是被递归绕进去了，最后会先执行栈顶的函数。所以当开始节点head3.next被置为null，","到head2节点，head2.next.next(也就是head3.next)再次被置为head2。最后只有头部节点的next指向nul","反转链表","如下图，我一开始在纠结head.next","迭代方案","递归方案"],"easy/LinkedList/合并两个有序链表.html":["(l1","(l1,","(l1.val","(l2","*","*/","/**","=","==","@param","@return","definit","function","l1","l1;","l2","l2)","l2;","link","list.","listnode(val)","mergetwolist","null)","null;","return","singli","this.next","this.val","val;","var","{","{listnode}","}","合并两个有序链表","思路","还是比较好理解的，如图"],"easy/LinkedList/回文链表.html":["''","'',","(head)","*","*/","+","+=","/**","//","=","===","@param","@return","definit","function","head","head.next;","head.val","head.val;","ispalindrom","link","list.","listnode(val)","null;","return","singli","str","str_revers","str_reverse;","this.next","this.val","val;","var","{","{boolean}","{listnode}","}","};","反向","回文链表","字符串一个拼接到后边，一个拼接到前面。","思路","最后一对比就可以了","正向"],"easy/LinkedList/环形链表.html":["!head.next)","&&","(!head","(p1","(p2","*","*/","/**","=","===","@param","@return","definit","fals","false;","function","function(head)","hascycl","head","head,","head.next;","link","list.","listnode(val)","null;","p1","p1,p2两个游标，p2每次两步，如果有环，p2肯定早晚会遇到p1。如果没有，p2走到结尾，结束。","p1.next;","p2","p2)","p2.next)","p2.next.next;","return","singli","this.next","this.val","true;","val;","var","{","{boolean}","{listnode}","||","}","};","思路","环形链表"],"easy/Tree/对称二叉树.html":["!=","!==","&&","((left","(left","(left.val","(queue.length","(right","(root","(root)","*","*/","/**","//","//不是空树，则判断左右子树","//两个节点元素值不一样也不对称","//入队，因为他俩会同时比较。","//判断子树1的右子树和子树2的左子树是否相同，子树1的左子树和子树2的右子树是否相同","//因为他俩会同时比较","//如果一个为空一个不为空，说明不是对称的，直接返回fals","//如果这两个值不相同，也不是对称的，直接返回fals","//如果都为空继续循环","//如果队列不为空就继续循环","//左子树为空，当右子树为空时对称","//左子节点和右子节点同时入队","//左子节点的右子节点和右子节点的左子节点同时入队，","//左子节点的左子节点和右子节点的右子节点同时","//每两个出队","//空树","//经过上一行判断出左子树不为空了，右子树为空的话不对称","//这里要记住入队的顺序，他会每两个两个的出队。","//队列","0)","=","==","===",">","@param","@return","[]","^","binari","code","continu","definit","fals","function","help(left,","help(left.left,","help(left.right,","help(root.left,","here","issymmetr","left","node.","null","null)","null))","null;","queue","queue.push(left.left)","queue.push(left.right)","queue.push(right.left)","queue.push(right.right)","queue.push(root.left)","queue.push(root.right)","queue.shift()","queue.shift(),","return","right","right)","right.left)","right.right)","right.val)","root","root.right)","this.left","this.right","this.val","tree","treenode(val)","true","val;","var","write","{","{boolean}","{treenode}","}","对称二叉树","认为是对称的","迭代写法："],"easy/Tree/二叉树的层序遍历.html":["(!root)","(levels.length","(node,","(node.left)","(node.right)","(root)","*","*/","+","/**","0);","1);","=","==","=>","@param","@return","[];","binari","definit","function","helper","helper(node.left,","helper(node.right,","helper(root,","level","level)","levelord","levels.push([]);","levels;","levels[level].push(node.val);","node.","null;","return","root","this.left","this.right","this.val","tree","treenode(val)","val;","var","{","{number[][]}","{treenode}","}","};","二叉树的层序遍历"],"easy/Tree/二叉树的坡度.html":["二叉树的坡度","思路"],"easy/Tree/二叉树的直径.html":["(node","(root)","+","0","1","1)",":","=","==","?","an","dfs(node)","dfs(node.left)","dfs(node.right)","dfs(root)","diameterofbinarytre","function","l","math.max(ans,","math.max(l,","null)","r","r)","return","var","{","}","二叉树的直径","思路"],"easy/Tree/二叉树的最大深度.html":["(root","(root)","*","*/","+","/**","//注意等号","0;","1;//根节点不为空高度至少为1",":","=","===",">","?","@param","@return","binari","childdepth","definit","function","leftdepth","maxdepth","maxdepth(root.left),","maxdepth(root.right);","node.","null)","null;","return","rightdepth","rightdepth;","root","this.left","this.right","this.val","tree","treenode(val)","val;","var","{","{number}","{treenode}","}","};","二叉树的最大深度","思路","递归写法"],"easy/Tree/二叉树的最小深度.html":["!=","&&","(root","(root)","(root.left","(root.right","+","0","1","=","==","an","ans)","function","math.min(mindepth(root.left),","math.min(mindepth(root.right),","mindepth","null","null)","number.max_safe_integ","return","root.right","var","{","}","二叉树的最小深度"],"easy/Tree/二叉搜索树中的众树.html":["(!o)","(count","(o)","(root)","(x","(x)","++count","0","0,","1","=","===","=>",">","[]","[base]","answer","answer.push(base)","base","base)","const","count","df","dfs(o.left)","dfs(o.right)","dfs(root)","findmod","function","maxcount","maxcount)","morri","return","updat","update(o.val)","var","x","{","}","中序遍历","二叉搜索树中的众树","思路","还不会,学习下"],"easy/Tree/二叉搜索树最小绝对差.html":["(pre","(root","(root)","1","1)","=","==","===","=>","an","const","df","dfs(root)","dfs(root.left)","dfs(root.right)","function","getminimumdiffer","math.min(ans,","null)","number.max_safe_integer,","pre","pre)","return","root.val","var","{","}","二叉搜索树最小绝对差"],"easy/Tree/翻转二叉树.html":["(root","*/","/*","//为空则结束","//交换root的左右子树","//假设root两边的子树自己都已经翻转成功了，那么只需要再将左右子树互换一下就成功了","//左右子树翻转自己去处理就行了，我们规定每个子树的root都跟最终的root处理方式一样即可","=","==","function","mirror(root)","node","node;","null)","null;","return;","reversetree(root)","reversetree(root);","reversetree(root.left);","reversetree(root.right);","root.left","root.left;","root.right","root.right;","swap(root)","swap(root);","this.left","this.right","this.val","treenode(x)","var","x;","{","}","翻转二叉树"],"easy/Tree/根据二叉树创建字符串.html":["(root)","=","function","tree2str","var","{}","思路","根据二叉树创建字符串"],"easy/Tree/将有序数组转换为二叉搜索树.html":["(nums)","(nums.length","*","*/","+","/","/**","0)","1)","1));","2);","=","===","@param","@return","binari","definit","function","mid","mid));","new","node.","null;","num","parseint(nums.length","return","root","root.left","root.right","root;","sortedarraytobst","sortedarraytobst(nums.slice(0,","sortedarraytobst(nums.slice(mid","this.left","this.right","this.val","tree","treenode(nums[0]);","treenode(nums[mid]);","treenode(val)","val;","var","{","{number[]}","{treenode}","}","};","将有序数组转换为二叉搜索树"],"easy/Tree/路径总和.html":["&&","(root","(root)","(root,","(root.left","(root.left)","(root.right)","+=","//","//1.刚开始遍历时","//2.递归中间","//叶子节点","0","0)","=","===",">=","[]","df","dfs(root,","dfs(root.left,","dfs(root.right,","fals","function","haspathsum","haspathsum(root.left,","haspathsum(root.right,","null","null)","number(root.val)","pathsum","pathsum)","re","res.indexof(targetsum)","res.push(pathsum)","return","root.right","root.right)","root.val","root.val)","targetsum","targetsum)","var","{","||","}","思路","拆分成两个子树","深度优先遍历","说明该节点不是叶子节点","路劲总和","路径总和"],"easy/Tree/验证二叉搜索树.html":["&&","(node","(node.v","(root)","*","*/","/**","=","==","@param","@return","binari","definit","false;","function","infinity,","infinity;","isvalidbst","judge(node,","judge(node.left,","judge(node.right,","judge(root,","max","max,","min","min)","min);","node.","node.val);","node.val,","null)","null;","return","root","this.left","this.right","this.val","tree","treenode(val)","true;","val;","var","{","{boolean}","{treenode}","}","};","验证二叉搜索树"],"easy/Tree/左叶子之和.html":["&&","(root","(root)","(root,","(root.left","+=","//初始调用时，为false。因为一个根节点，不是左叶子节点","//右分支","//左分支","//要找的叶子节点","0","=","==","=>","const","false)","function","getsum","getsum(root,","getsum(root.left,","getsum(root.right,","isleft)","null","null)","return","root.right","root.val","sum","sumofleftleav","true)","var","{","}","左叶子之和","思路"],"easy/SortSearch/合并两个有序数组.html":["(n","(nums1,","(nums1[m","*","*/","+","/**","//","0)","1]","1])","=",">",">=","@param","@return","anything,","cn.com/explore/interview/card/top","easy/8/sort","function","https://leetcod","instead.","interview","m","m,","m]","merg","modifi","n","n)","n]","nums1","nums1[","nums1[n","nums2","nums2,","nums2[","nums2[n","place","question","return","searching/52/","var","{","{number[]}","{number}","{void}","}","};","合并两个有序数组"],"easy/SortSearch/第一个错误的版本.html":["(i","(isbadversion)","(n)","*","*/","...","/**","1,","=","@param","@return","bad","definit","first","function","function(version)","isbadvers","isbadversion()","j","n","n;","number","return","solut","total","var","version","whether","{","{boolean}","{function}","{integer}","};","第一个错误的版本"],"easy/DP/爬楼梯.html":["(","(n","(n)","(var",")",")。","+","0;","1","1)","1;","1，f","2","2)","2);","2;","=","==","[];","climbstair","climbstairs(int","climbstairs(n","f","function","n","n)","result","return","var","{","}","。","个台阶上。所以如果用","个台阶上，或者","个台阶之前，一定是停留在第","个台阶的走法。那么，","个台阶，所以上到第","代表","层的台阶的走法，由于一次走","思路","或","爬楼梯","用递归的思路想一下，要求","这不就是斐波拉契数列吗","那斐波拉契数列可以使用dp写法"],"easy/DP/买卖股票的最佳时机.html":["(len","*","*/","+","/**","0","0，即先有状态","0，我们在填写“状态表","0，此时卖出股票，因此加上这一天的股价。","0；","1","1.","1]","1][0]","1][0],","1][0]。","1][0]，不可能是持股的状态","1][1]","1][1],","1][1]，","1不能由状态","2","2.","2”","3","3.","3”其实是等价的。","3”进行修改）","3”进行修改：","3”，因为状态只能从","3：","4","4：","5","5：","6：（根据“参考代码","=","@param","@return","b","buy","chai","cn.com/problems/best","dong","dp","dp[0][0]","dp[1]","dp[i","dp[i]","dp[i][0]","dp[i][1]","dp[i][j]","dp[len","dp”","fen","for(var","function(int[]","function(prices)","gui","hua","i=0;i","int","j","ju","len","li","math.max(dp[1],","math.min(dp[1],","max(dp[i","maxprofit","maxprofit)","mei","minval，dp[0]","price","prices)","prices.length;","prices[0]。","prices[i]","prices[i]);","prices[i]：昨天持股，就在索引为","prices[i]：注意：状态","profit;","res。","return","sell","si","stock/solution/bao","tai","time","var","xiang","{","{number[]}","{number}","}","};","“参考代码","“用户手上不持股”不代表用户一定在索引为","下面状态的设置和状态转移方程均写在代码注释中：","个值：0","个变量。","个步骤：","个状态即可，我个人认为更加清晰。","中的","买卖股票的最佳时机","仅仅依赖于","从状态转移方程可以看出，每一天的状态都考虑了之前的状态。在只发生一次交易的情况下，持有这支股票一定不能使我们获得最大利润。因此输出是","其实就是“参考代码","再写","再有状态","到","动态规划","动态规划的","即可。","参考代码","参考原文：https://leetcod","变成了","只有","因此，","复杂度分析：","天不持股，显然","天持股，显然dp[0][1]","就表示，在索引为","很有意思的是，可以将此时的数组","怎样转移？","思考状态转移方程","思路","恒成立，和“参考代码","我们发现：其实只需要关心之前（不包括现在）看到的最低股价，于是在遍历的过程中，记录下之前看到的最低股价，就可以省去内层循环。","我们继续观察“参考代码","我开始还以为和数组那个买股票最佳时期题目一样。注意区别，只允许交易一次￣□￣｜｜","所获得的最大利润。","时间复杂度：o(n)；","暴力枚举","暴力枚举的优化","来，因为事实上，状态","特指：“卖出股票以后不持有股票的状态”，请注意这个状态和“没有进行过任何一次交易的不持有股票的状态”的区别。","状态","由于","的时候，只需要用","的这一天把股票抛售了；","的这一天，我卖出了股票，状态由","的这一天，执行买入操作得到的收益。注意：因为题目只允许一次交易，因此不能加上","的这一天，用户手上持股状态为","空间复杂度：o(1)，状态压缩以后相当于只用了","空间复杂度：o(n)。","第","等价于","维，因此填表的时候，先写","综上：dp[i][0]","综上：dp[i][1]","考虑初始值","考虑是否可以状态压缩","考虑输出","表示不持股（特指卖出股票以后的不持股状态），1","表示持股。","表示：在索引为","设定状态","语义化，dp[1]","说明：","说明：事实上，这一版代码，由于","说明：如果我们一定要区分“不持有股票”的状态是“一开始不持有”和“卖出股票以后的不持有”，设置","这道题其实是一个典型的二维","问题。“动态规划”用于多阶段最优化问题的求解。这里天数代表每个阶段，即一天一天看，设置为第一维。为了消除后效性（前面的状态确定下来以后不会因为后面状态而更改），将当天是否持股设置为第二维的状态。于是：","，因此，我们可以使用滚动数组的技巧压缩变量。下面根据“参考代码","：当然可以从昨天不持股转移过来，表示从昨天到今天什么都不操作，这一点是显然的；","：昨天持股，今天什么都不操作，当然可以从昨天持股转移过来，这一点是显然的；"],"easy/DP/最大子序和.html":["(nums)","(var","*","+","0,","0;","1.","1]","2.","3.","4.","=","=>","cur_sum","for(var","function","function(nums)","i=1;i0){","infinity;","len","math.max(...nums)","math.max(maxans,","math.max(pr","max_sum","maxan","maxans;","maxsubarray","nums.foreach((x)","nums.length","nums.length;","nums[0],","nums[0];","nums[i]+=nums[i","pre","pre);","return","start","sum","var","x);","x,","{","}","});","};","优化","分治","动态规划","思路","暴力枚举","最大子序和","繁琐","若前一个元素大于0，则将其加到当前元素上","若当前指针所指元素之前的和小于0，则丢弃当前元素之前的数列","贪心算法","题解","￣□￣｜｜"],"easy/DP/打家劫舍.html":["(len","(nums)","(var","//记录","0","0)","0;","2))+","=","==","[]","dp","function","len","max(s(0)...s(i","max(s)","nums.length","nums[0]","nums[i]","return","rob","s(0)","s(i)","s(i)为以第","sum","var","{","个数为结尾的最大和。","假设","思考初始化","思考状态","思考输出","思路","打家劫舍","状态转移方程"],"easy/Design/打乱数组.html":["()","(end","(n","(nums)","*","*/","+",",","/**","0)","0;","1","1)","1));","1)/n","1/(n","1/n","1;",";","=",">=","@param","@return","[...this.arr];","[nums[index],","[nums[n],","array","array.","call","configur","end)","function","function()","function(nums)","getrandom(start,","index","instanti","it.","math.random()","n","new","num","nums.length","nums;","nums[index]];","nums[n]]","obj","obj.reset()","obj.shuffle()","object","origin","param_1","param_2","parseint(math.random()","parseint(start","random","reset","return","shuffl","solut","solution(nums)","solution.prototype.reset","solution.prototype.shuffl","start))","such:","this.arr","this.arr;","var","while(i","{","{number[]}","}","};","从剩下长度的","元素中随便取一个，与倒数第二个元素交换，第一次没有被选中的概率为","先从n个数据中，随机选取一个元素，与最后一个元素交换","思路","所以概率仍然是","所以每一个元素出现在每一个位置的概率，都是","打乱数组","数组长度为n，","方法二，顺序打乱","每个元素被选中的概率是","洗牌算法能保证，对于生成的排列，每一个元素都能等概率的出现在每一个位置。","第二次被选中的概率为"],"easy/Design/最小栈.html":["()","(item","(this.arr.length","(x)","*","*/","/**","1)","1]","=","=>",">=","@param","@return","[];","data","function","here.","initi","min","minstack","minstack.prototype.getmin","minstack.prototype.pop","minstack.prototype.push","minstack.prototype.top","null","return","structur","this.arr","this.arr.foreach(item","this.arr.pop()","this.arr.push(x)","this.arr[0]","this.arr[this.arr.length","var","x","{","{number}","{void}","}","};","思路","最小栈","比较简单，直接上代码"],"easy/Math/FizzBuzz.html":["(n)","(var","1.暴力解决","1;","=","[]","an","fizzbuzz","function","var","{","循环判断","思路"],"easy/Math/计数质数.html":["(n)","(var","0;","1.暴力破解","2.","2;","3.","=","count","countprim","function","n，而只需要到","sqrt(n)","var","{","不需要遍历到","优化","即可","参考题解","思路","是不是质数写个方法暴力遍历判断了。（素性测试如果是很大的数，暴力遍历不靠谱）","果然运行超时了","计数质数","高效实现"],"easy/Math/3的幂.html":["(n","(n)","1.","3","3的幂","=","function","ispowerofthre","var","{","其他方法","就是不停地除以3，最后检查是否等于1呗","开始写错了，忘了1也是3的幂。","暴力检查","的幂","题解"],"easy/Math/罗马数字转整数.html":["\"c\":","\"cd\":","\"cm\":","\"d\":","\"i\":","\"iv\":","\"ix\":","\"l\":","\"m\":","\"v\":","\"x\":","\"xc\":","\"xl\":","(s)","(var","0;","1,","10,","100,","1000,","4,","40,","400,","5,","50,","500,","9,","90,","900","=","code","function","len","romantoint","s.length","sum","var","{","}","思路","我想起了在angularjs的parser源码里有个peek方法,就是多看下下一个元素合起来是不是特殊的就可以了。","罗马数字转整数"],"easy/Other/位1的个数.html":["1","位","位1的个数","思路","的个数"],"easy/Other/汉明距离.html":["(var","(x,","0","0;","1","=",">","^","c","function","hammingdist","return","s","var","x","y","y)","{","}","异或，然后算下","思路","汉明距离","的个数"],"easy/Other/颠倒二进制位.html":["&","((n","(let","(n","(n)","++i)","//","0","0)","00000000111111110000000011111111","00001111000011110000111100001111","00110011001100110011001100110011","01010101010101010101010101010101","0;","0x00ff00ff","0x0f0f0f0f","0x33333333","0x55555555","1","1)","16)","2)","4)","8)","=",">>",">>=",">>>","console.log('reversestr',reversestr)","console.log('str',str)","const","function","m1","m1)","m2","m2)","m4","m4)","m8","m8)","n","number(n).tostring(2)","parseint(reversestr,","return","rev","reversebit","reversestr","str","str.padstart(32,","str.split('').reverse().join('')","var","{","|","|=","}","分智算法，我还没看懂，有时间研究","颠倒二进制位"],"easy/Other/帕斯卡三角形.html":["帕斯卡三角形"],"easy/Other/有效的括号.html":["有效的括号"],"easy/Other/缺失数字.html":["缺失数字"],"normal/Array&String/三数之和.html":["&&","(let","*","*/","/**","//","0","0)","0;","0，则三数之和必然无法等于","0，满足则添加进结果集","0，结束循环","15","1;","1])","3sum.html?h=threesum",";","=","==",">","@param","@return","[];","an","ans;","b);","break;","cn.com/problems/3sum/solution/hua","const","continue;","fa","function(nums)","guanpengchn/","https://leetcod","https://leetcode.wang/leetcod","i+1;","if(i","if(num","jie","l","len","null","num","nums.length;","nums[i","nums[i]","nums[i]后面的两端，数字分别为","nums[i]大于","nums[i]，再使用左右指针指向","nums[i−1]，则说明该数字重复，会导致结果重复，所以应该跳过","nums[l+1]","nums[l]","nums[r]，计算三个数的和","nums[r−1]","r","return","san","shu","suan","sum","sum判断是否满足为","threesum","var","while(l","zhi","{","{number[][]}","{number[]}","||","}","};","三数之和","为数组长度","则会导致结果重复，应该跳过，l++","则会导致结果重复，应该跳过，r","去重","和","如果","如果当前数字大于0，则三数之和一定大于0，所以结束循环","完整题解过程：","当","思路","排序","时间复杂度：o(n^2)，n","时，nums[l]==","时，nums[r]","标签：数组遍历","首先对数组进行排序，排序后固定一个数"],"normal/Array&String/矩阵置零.html":["(matrix)","(var","0;","1.","=","[]","[];","function","irecord","jrecord","m","matrix.length","matrix[0].length;","n","setzero","var","{","思路","暴力破解","矩阵置零","首先暴力破解试试"],"normal/Array&String/字母异位词分组.html":["(!hasgrouped)","(isanagrams(arritem[0],","(s1,","(strs)","(var","*","*/",",k是strs中字符串的最大长度。o(n)是外层循环，然后在o(klogk)时间内对每个字符串排序。","/**","//先放一个元素","//只需要取第一个元素判断下","//如果都没有的话","//每一个组","0;","1;","=","==","@param","@return","[[strs[0]]];","[item];","an","ans.push(newarr)","ans;","arritem.push(item);","fals","for(let","function","function(strs)","groupanagram","hasgroup","hash","isanagram","item))","len","map()","new","newarr","o(nklogk)","return","s1.split(\"\").sort().join(\"\")","s1tem","s2)","s2.split(\"\").sort().join(\"\")","s2tem","str","strs.length;","true;","var","{","{string[][]}","{string[]}","}","})","};","好了，一提交","字母异位词分组","思路","看了下题解，其实原理差不多，不过用了个map。map底层原理不是完整遍历，使用了链表，不是o(n^2)","超出时间限制。￣□￣｜｜","还有其他比较巧的方法，详见题解","那先写个方法验证字母异位词。然后无非写方法遍历分组。主要就是加个变量判断是否已经分组了，没有就新建一个组"],"normal/Array&String/无重复字符的最长子串.html":["(let","(s)","(var","//","0;","1,","1.","1，相当于我们在字符串的左边界的左侧，还没有开始移动","2.","=","an","const","function","function(s)","len","lengthoflongestsubstr","max","n","new","occ","rk","s.length;","set();","start","var","{","一提交，又超时了，好像暴力算法在中级里面总是不通过。","右指针，初始值为","哈希集合，记录每个字符是否出现过","官方题解","思路","无重复字符的最长子串","暴力破解","滑动窗口"],"normal/Array&String/最长回文子串.html":["&&","(left","(len","(s)","*","*/","+","/**","//","1","1;","1：直接从状态的语义出发；","2","2：如果状态的语义不好思考，就考虑「状态转移方程」的边界需要什么样初始化的条件；","3：从「状态转移方程」方程的下标看是否需要多设置一行、一列表示「哨兵」（sentinel），这样可以避免一些特殊情况的讨论。","=","begin","cn.com/problems/longest","dong","function","function(chararray,left,right)","function(s)","gui","hua","i,","i;","j","j))","kuo","len","liweiwei1419/","longestpalindrom","maxlen","maxlen)","maxlen);","palindrom","return","s.length;","s.substring(begin,","s[left..right]","san","substring/solution/zhong","tai","validpalindrom","validpalindromic(chararray,","var","xin","{","}","「优化空间」会使得代码难于理解，且是的「状态」丢失原来的语义，初学的时候可以不一步到位。先把代码写正确是更重要；","「优化空间」在有一种情况下是很有必要的，那就是状态空间非常庞大的时候（处理海量数据），此时空间不够用，就必须「优化空间」；","「动态规划」方法依然是「空间换时间」思想的体现，常见的解决问题的过程很像在「填表」。","初始化是非常重要的，一步错，步步错。初始化状态一定要设置对，才可能得到正确的结果。","动态规划","在具体实现时，可以只针对大于“当前得到的最长回文子串长度”的子串进行“回文验证”；","在记录最长回文子串的时候，可以只记录“当前子串的起始位置”和“子串长度”，不必做截取。这一步我们放在后面的方法中实现。","如果是针对面试，请自行把握难度。掌握常见问题的动态规划解法，理解动态规划解决问题，是从一个小规模问题出发，逐步得到大问题的解，并记录中间过程；","官方题解里有个大佬整理的特别好,所以直接摘录：https://leetcod","常见的推导技巧是：分类讨论。即：对状态空间进行分类；","归纳「状态转移方程」是一个很灵活的事情，通常是具体问题具体分析；","思考优化空间（也可以叫做表格复用）","思考初始化","思考状态转移方程（核心、难点）","思考状态（重点）","思考输出","思路","方法一","方法二","是否为回文串","暴力匹配","最长回文子串","有些时候是最后一个状态，有些时候可能会综合之前所有计算过的状态。","本题具体分析详见原文链接","根据回文子串的定义，枚举所有长度大于等于","然后思考「状态如何转移」，如果「状态转移方程」不容易得到，尝试修改定义，目的依然是为了方便得到「状态转移方程」。","特判","状态的定义，先尝试「题目问什么，就把什么设置为状态」；","状态转移方程」是原始问题的不同规模的子问题的联系。即大问题的最优解如何由小问题的最优解得到。","状态转移方程是非常重要的，是动态规划的核心，也是难点；","的子串，依次判断它们是否是回文；","背包」问题和「完全背包」问题。","角度","说明：暴力解法时间复杂度高，但是思路清晰、编写简单。由于编写正确性的可能性很大，可以使用暴力匹配算法检验我们编写的其它算法是否正确。优化的解法在很多时候，是基于“暴力解法”，以空间换时间得到的，因此思考清楚暴力解法，分析其缺点，很多时候能为我们打开思路。","除了掌握经典的动态规划问题以外，还需要多做题；","非常经典的「优化空间」的典型问题是「0","验证子串"],"normal/Array&String/递增的三元子序列.html":["&&","(len","(nums)","*","*/","/**","0;","1。假如我们不将","1，那么，当下一个数字是","2","2.","2，后面再接上一个","3","3)","5]，这时又来了个","=","@param","@return","[1,2,3]","[3,","[],","count","count;","dp解法","false;","for(let","function","function(nums)","increasingtriplet","len","longest","mid","mid)","mid，则替换","mid，则说明我们找到了长度为","mid；否则，若大于","num","nums.length;","nums[j]","return","small","small，则替换","small；否则，若小于等于","trick","true;","var","{","{boolean}","{number[]}","}","};","上面的求解过程中有个问题：当已经找到了长度为","为","之前。因此，当后续出现比","另外，即使我们更新了","后面，没有严格遵守递增顺序，但它隐含着的真相是，有一个比","呢，这样","和","和lis一样，只要计算了lis长度为3就可以了","在","在原数组中并不是按照索引递增的关系呀？","大比","大的值的时候，我们一样可以通过当前","小的前·最小值出现在","就在这里了！假如当前的","思路","所以，这样的替换并不会干扰我们后续的计算！","接着，我们遍历数组，每遇到一个数字，我们将它和","推断的确存在着长度为","替换为","本题的思路非常的巧妙！","的时候，我们就没有办法发现这个","的递增子序列的最小值和中间值。","的递增序列。","的递增序列，这时又来了一个比","的递增数组了！也就是说，我们替换最小值，是为了后续能够更好地更新中间值！","的递增数组！","相比，若小于等于","还小的数字，为什么可以直接替换","递增的三元子序列","题解","首先，新建两个变量","，分别用来保存题目要我们求的长度为","，这个"],"normal/LinkedList/两数相加.html":["%","&&","(l1","(l2","(temp.next","*","*/","+","/**","//遍历，直到最长的都为空","0)","023","0;","0;//新链表当前未取余的值","0;//是否进一","0，比如","1","10","10);//取余则为新链表的值","1010","1，则在新链表最前方添加节点1","23","987",":","=",">=","?","@param","@return","add","add;","addtwonumb","definit","function","function(l1,","l1","l1.next);","l1.val","l2","l2)","l2){","l2.next);","l2.val","link","list.","listnode('head');","listnode(add));","listnode(sum","listnode(val)","new","node","node.next;","node;//哑结点","null;","pre，该指针的下一个节点指向真正的头结点head。使用预先指针的目的在于链表初始化时无可用节点值，而且链表构造过程需要指针移动，进而会导致头指针丢失，无法返回结果。","return","singli","sum","temp","temp.next","temp.next;","this.next","this.val","val;","var","while(l1","{","{listnode}","||","}","};","两数相加","如果两个链表全部遍历完毕后，进位值为","将两个链表看成是相同长度的进行遍历，如果一个链表较短则在前面补","小技巧：对于链表问题，返回结果为头结点时，通常需要先初始化一个预先指针","思路","标签：链表","每一位计算的同时需要考虑上一位的进位问题，而当前位计算结束后同样需要更新进位值","链表1值","链表2值"],"normal/LinkedList/奇偶链表.html":["!=","&&","(even","(head","=","==","bug","even","even.next","even.next;","even;","evenhead","evenhead;","function(head)","head","head,","head.next,","head;","linkedlist","null","null)","null;","odd","odd.next","odd.next;","oddevenlist","return","var","{","}","一个","保存偶链表的头和尾指针。算法会遍历原链表一次并把奇节点放到奇链表里去、偶节点放到偶链表里去。","保存奇链表的头和尾指针。","和","奇偶链表","思路","指针不仅仅是尾指针，也可以扮演原链表迭代器的角色。","指针和","的代码还是需要进行一番思索的。","这个解法非常符合直觉思路也很简单。但是要写一个精确且没有","遍历整个链表我们至少需要一个指针作为迭代器。这里","需要一个头指针和一个尾指针来支持双端操作。我们用变量"],"normal/LinkedList/相交链表.html":["(ab","(true)",":","=","===","?","[ab","[ab,","[heada,","ab.next","ab;","ba","ba)","ba.next","ba]","function(heada,","getintersectionnod","heada];","headb)","headb,","headb];","return","var","{","}","};","思路","相交链表","题解"],"normal/Tree&Graph/中序遍历二叉树.html":["(p","(p)","//出栈，存放根节点","//按照左","//栈","//直至左节点为空，即没有左节点为止",";","=","function","function(root)","if(!root)","inorder(root,res);","inorder(root,res){","inorder(root.left,res);","inorder(root.right,res);","inordertravers","inordertraversal=function(root){","p","p.left;","p.right;","res.push(p.val);","res.push(root.val);","res;","res=[];","return","root;","s.length>0)","s.pop();","s.push(p);","s=[];","var","{","||","}","};","中序遍历二叉树","中序：是二叉树遍历中的一种，即先遍历左子树，后访问根结点，然后遍历右子树。若二叉树为空则结束返回。","先序：是二叉树遍历中的一种，即先访问根结点，然后遍历左子树，后遍历右子树。遍历左、右子树时，先访问根结点，后遍历左子树，后遍历右子树，如果二叉树为空则返回。","右顺序遍历","后序：是二叉树遍历中的一种，即先遍历左子树，后遍历右子树，然后访问根结点，遍历左、右子树时，仍先遍历左子树，后遍历右子树，最后遍历根结点。","思路","根","迭代版"],"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":["%","(!res[level])","(!root)","(root)","(root,","+","0);","1);","2",":","=","?","[];","function","helper","helper(root,","helper(root.left,","helper(root.right,","level","level)","re","res,","res;","res[level]","res[level].push(root.val);","res[level].unshift(root.val)","return","return;","var","zigzaglevelord","{","}","};","二叉树的锯齿形层次遍历","思路"],"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":["!=","(inorder.length","(inorder[i]","(let","(p_start","(preorder,","+","//","0","0)","0,","0;","1)","1))","1),","1,","=","===","=>",">","build","build()","build(root.val)","build(stop)","buildtre","buildtree(preorder.slice(1,","buildtree(preorder.slice(mid","function","function(preorder,","function(stop)","hashmap","helper","helper(preorder,","i++","i_end)","i_end,","i_start","i_start,","inord","inorder)","inorder,","inorder.indexof(preorder[0])","inorder.indexof(rootval)","inorder.length","inorder.slice(0,","inorder.slice(mid","leftnum","leftnum,","map","map()","map)","map.get(rootval)","mid","mid))","new","null","p_end)","p_end,","p_start","p_start,","pre","preorder","preorder.length","preorder[p_start]","preorder为空","return","root","root.left","root.right","rootval","slice","stop","stop)","treenode(preorder[0])","treenode(preorder[pre++])","treenode(rootval)","var","{","}","};","。查询哈希表比较节省性能","中级的头有点疼了，题解","从前序与中序遍历序列构造二叉树","保存","保存当前要构造的树的","函数，接收2对指针","变量","另外一个巧妙的方法","和","字符串截取","对于当前要构造的树，有一个停止点","左子树的节点数","思路","性能消耗比较大，没必要把","提前把","数组中可以成为","数组中寻找根节点的位置，耗费性能","数组中第","数组的项和索引存储在","数组真的切割出来","根节点","根节点在inorder的位置","根节点的值","每次递归调用，都会确定出一个停止点，它告诉了子调用在哪里停止，把自己的根节点值作为左子树调用的停止点，自己的（父调用给下来的）停止点作为右子树的停止点","每次递归都要在","用两个指针表示即可。写一个","的数字们的开头那个","附加","项到第","项是要构造的树的节点值们","，inord"],"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html":["填充每个节点的下一个右侧节点指针","思路"],"normal/Tree&Graph/二叉搜索树中第K小的元素.html":["k","二叉搜索树中第","二叉搜索树中第k小的元素","小的元素","思路"],"normal/Tree&Graph/numIslands.html":["岛屿数量","思路"],"normal/backTracking/矩阵中的路径.html":["&&","(board,","(let","0","0,","0;","0]","1,","1]","=","[","[0,","board.length,","board[0].length","chararr","df","dx","dy","exist","function","index","m","n","nx","ny","true","true：","true：if","var","word)","word.split('')","{","只要找到一条路径就返回","回溯其实就是纯暴力枚举，把所有情况列举下，如果列举到一半发现已经不符合要求了及时剪枝，并且把之前做出的选择撤销，比如本题如果列举的一条路径不符合要求，把之前访问过的位置全部改回原来的值。","对于已访问的位置，修改其值为'/'，访问完毕后要将值改回来，这是回溯的核心","已经等于字符串长度时，说明已经找到了一条路径，返回","当索引","思路","查找当前字符的周围字符，如果周围字符没有被访问过且与字符串的下一个字符相等，再次进入递归","步骤如下：","矩阵中的路径","返回","首先，要在矩阵中找字符串中的第一个字符，找到后进入递归"],"normal/DP/LIS.html":["(n","(var","0)","0;","1;","=","==","[];","dp","function","lengthoflis(nums)","max","n","nums.length;","return","var","{","}","最长上升子字符串","最长上升子序列"],"normal/DP/LCP.html":["!==","(let","*","*/","+","/**","//","0","0;","0，即","1","1)","1))","1,n","1,n),","1]","1])","1],","1][n","1][n],","=","==","===","@param","@return","array(m)","base","case","const","dp","dp(m","dp(m,n","dp(m,n)","dp(m,n)表示：s1[0...m]","dp[0...m][0]","dp[0][0...n]","dp[m","dp[m][n","dp[m][n]","function(text1,","longestcommonsubsequ","m","math.max(dp[m","max(dp(m","n","new","s1[m]","s2[0...n]","s[n]：dp(m,n)","text1","text1.length;","text1[m]","text2","text2)","text2.length;","text2[n]","text2[n]时，此时我们要看两个字符串分别单独往回撤一个字符串的对比情况，获取两者的最大值即可，所以有","text2[n]时，说明","var","{","{number}","{string}","上面两种情况即为状态转移方程","为：⾏索引为","初始值，即","初始化二维","即为题目所求结果","和","因为我们需要在两个字符串中扫描，所以是一个二维的动态规划问题","对应的字符是最长公共子序列的一部分，所以有","当","当我们对比","思路","或者","或者列索引为","所表示的两个字符串的长度不同，s1[0...m]","数组","最长公共子序列","的值不同时，dp[m][n]","的值都为","的时候，存在两种情况：","的时候，此时值为","的最长公共子序列的长度","的最长公共子序列的长度的值也就不同，dp[m","表示：s1[0...m]","首先我们定义"],"hard/string/最小覆盖子串.html":["(let","(s,","0;","=","function","map()","minwindow","need","new","t)","var","window","{","最小覆盖子串","滑动窗口"],"hard/DP/戳气球.html":["()","(let","(nums)","(nums.length",")","+","...nums,","//","0)","0,","0;","1","1)","1;","1]","1])","2),","2).fill(0))",":","=","==","=>",">=","?","[...tempnums]","[1,","[].concat(nums)","array(n","array.from(array(n","backtrack(nums,","balloons/solution/dong","chuo","cn.com/problems/burst","dp","fe","function","gui","hua","j","js312","lucif","lucifer/","math.max(res,","maxcoin","n","n;","num","number.min_valu","nums.length","nums.length;","nums.splice(i,","nums[i","nums[i]","point","point)","qi","qiu","re","return","score","score)","tai","tempnum","var","{","}","中删除元素","从左往右","会超过时间限制","作者：fe","做选择","动态规划","回溯法","回溯法，状态树很大","在","思路","戳气球","撤销选择","最后一行开始遍历,从下往上","来源：力扣（leetcode）","添加两侧的虚拟气球","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","递归回溯","链接：https://leetcod"],"hard/DP/最短编辑距离.html":["(let","(n","*","+","//","0)","0;","=","==","[]","d","dp","function","m","mindistance(word1,","n","return","var","word1.length","word2)","word2.length","{","}","官方题解","思路","数组","最短编辑距离","有一个字符串为空串"],"byteDance/string/字符串的排列.html":["(let","(n","(s1,","0;","7k7u/","=",">","array(26).fill(0)","checkinclus","chuan","cn.com/problems/permut","cnt1","cnt2","const","de","fals","fu","function","https://leetcod","leetcod","lie","m","m)","n","new","pai","return","s1.length,","s2)","s2.length","solut","string/solution/zi","var","{","}","后续还有优化，具体看上面链接","字符串排列","字符串的排列","思路","滑动窗口"],"byteDance/string/字符串相乘.html":["%","'0'","'0')","(let","(num1,","(pos[0]","(resstr[0]","(sum",")","*","+","+=","+num1[i]","+num2[j]","/","0","0)","0;","10","10)","1;","1]",":","=","==","=>",">=","?","array(len1","const","j","j]","len1","len2","len2).fill(0)","multi","multipli","n1","n2","new","num1.length","num2)","num2.length","po","pos.join('')","pos.length","pos.shift()","pos[i","resstr","resstr.length","resstr.substring(1)","return","sum","{","|","}","字符串相乘","思路","没思路，直接上答案","这么写也可以"],"byteDance/string/翻转字符串里的单词.html":["!=","''","')","').filter((element)","*","*/","/**","=","=>","@param","@return","element","function","return","reversewords(s)","s","s.trim()","str","str.split('","strarr","strarr.reverse().join('","{","{string}","}","})","后续再看看题解里的大神怎么解的","思路","比较简单，终于自己写对了","翻转字符串里的单词"],"byteDance/string/简化路径.html":["'')","'.'","'..')","'/'","(const","(i","(path)","*","*/","+","/**","0",":","=","===",">","?","@param","@return","[]","const","continu","dir","dir)","function","null","path","path.split('/'),","return","simplifypath","stack","stack.join('/')","stack.length","stack.pop()","stack.push(i)","var","{","{string}","||","}","思路","简化路径"],"byteDance/string/复原IP地址.html":["&&","'0')","(let","(s)","(s,","(s.charat(segstart)","(segid","(segstart","+","//","0","0，那么这一段","1)","1,","4","=","===","=>","[]","addr","addresses/solution/fu","an","ans.push(segments.join('.'))","array(seg_count)","cn.com/problems/restor","const","df","dfs(s,","function","https://leetcod","ip","ipdi","leetcod","new","restoreipaddress","return","s.length)","seg_count","seg_count)","segend","segid","segid,","segment","segments[segid]","segstart","segstart)","segstart;","solution/","var","yuan","zhi","{","}","一般情况，枚举每一种可能性并递归","回溯算法,看的题解","地址","地址只能为","地址就已经遍历完了字符串，那么提前回溯","地址并且遍历完了字符串，那么就是一种答案","复原","如果找到了","如果还没有找到","思路","段","由于不能有前导零，如果当前数字为"],"byteDance/array&sort/岛屿的最大面积.html":["(int","0;","=","an","class","df","grid)","int","maxareaofisland(int[][]","public","solut","{","岛屿的最大面积","这道题比较简单，好好理解下"],"byteDance/array&sort/搜索旋转排序数组.html":["&&","(l","(n","(nums,","(nums[mid]","(start","(target","//","//target","0","0)","0,","1","1)",":","=","==","===",">",">=","?","[6,7,8,1,2,3,4,5]","[start,","end","function","l","mid","mid]","mid]有序","n","nums.length","nums[0]","nums[mid]","nums[start]","nums[start])","r","return","search","search(nums,","start","target","target)","var","{","}","之间","但是为了对称，我还是加上了等号","其实target不可能等于nums[mid]，","在","搜索旋转排序数组","时间复杂度：o(logn)","空间复杂度：o(1)","️⚠️注意这里的等号"],"byteDance/array&sort/最长连续递增序列.html":["(n","(var","+","0","0)","0;","1","1)","1]","=","==","[]","dp","dp[i","dp[i]","dp[j]","findlengthoflcis(nums)","function","j","lengthoflis(nums)","math.max(dp[i],","max","n","nums.length","return","var","{","}","去查找了","最长连续递增序列","这道题有个姊妹篇，lis。关键的状态转移方程是：","那这里是要连续的，那就改下就好了,不需要定义"],"byteDance/array&sort/数组中的第K个最大元素.html":["!=","(int","(l","(largest","(q","(r","*","+","/","//1.关键就在这里，找到了k","0,","0;","1,","1;","2","2,","2;","=","==",">=","a,","a[i]","a[i];","a[j]","a[j];","a[largest])","a[q];","buildmaxheap(int[]","buildmaxheap(nums,","class","findkthlargest(int[]","heapsiz","heapsize)","heapsize);","heapsize;","i)","i);","i,","i;","index)","int","j)","k","k)","k);","l","l,","l;","largest","largest);","largest,","maxheapify(a,","maxheapify(int[]","maxheapify(nums,","new","nums,","nums.length","nums.length;","nums[0];","public","q","quickselect(int[]","quickselect(nums,","r","r);","r,","r;","random","random();","randompartit","randompartition(a,","return","solut","swap(a,","swap(int[]","swap(nums,","temp","temp;","void","{","}","个最大元素","否则丢弃一边","堆排序。好好研究下","就返回","思路，快排的同时进行优化","找到了","数组中的第"],"byteDance/array&sort/最长连续序列.html":["(!num_set.has(num","(const","(num_set.has(currentnum","(nums)","(nums.length","(nums:","(var","+","+=","0","0)","0;","1","1))","=","==","=>","[],","an","b)","currentnum","currentstreak","currentstreak)","dp","dp[0]","function","logn","longestconsecut","longeststreak","math.max(longeststreak,","new","num","num_set","num_set)","num_set.add(num)","number","number[]):","nums)","nums.sort((a,","o(n)","return","set()","var","{","}","先排序，快排是","思路","整体时间复杂度是","最长连续序列","比较简单了"],"tecent/problems/题集.html":["%","&&","''","'1'","'1234567899999999999'","'9007199254740991'","(!arr","()","(arr)","(arr,","(f","(grid)","(high","(key","(let","(list[i][j]","(n","(nums)","(price","(prices)","(t","(temp","(var",")","*","*/","+","+=",",","...nums,","/","/**","//","//\"0009007199254740991\"","//\"1234567899999999999\"","//\"进位\"","//取两个数字的最大长度","//定义加法过程中需要用到的变量","//生成的随机数的集合","//用0去补齐长度","0","0)","0,","0;","1","1)","1,","10)","10,","11,","12,","13,","14,","15,","16,","17,","18,","19,","1;","1]","1][j],","2","2),","2).fill(0))","20,","21,","22]","3","3)","3,","4,","5,","6,","7,","8,","9,","=","==","===","=>",">",">=","@param","@return","[0,0,0,1,1,1,2,2,3,3,4]","[1,","[1,1,3,3,2,2,4]","[2,","[]","a.padstart(maxlength,","add(a,","arr","arr)","arr.length,","arr.reduce((a,","arr[index])","array(n","array.from(array(n","b","b)","b.length)","b.padstart(maxlength,","balloons/solution/dong","boundari","buy","buy)","calc","canthreepartsequalsum","chuo","class","cn.com/problems/burst","col","col;减少空间消耗","console.log(queen.result)","const","constructor(num)","dp","f","fals","fe","findsingl","findsumeq(n,","function","genarray(n)","grid","grid.length,","grid[0].length","grid[i","grid[i][j","grid[i][j]","gui","high,","https://johnzhu12.github.io/easy/array/只出现一次的数字.html","https://leetcod","hua","index","initlist()","issaf","issafe(row)","j","js312","key)","len","low,","lucifer/","m","m)","math.floor(t","math.max(a.length,","math.min(","max","maxcoin","maxlength","maxprofit","maxprofit)","minpathsum","minpric","money","m，找出","n","n;","new","num","nummap","nums.length","parseint(a[i])","parseint(b[i])","point","price","price[i]","prices)","prices[0]","profit","qi","qiu","queen","queen(8)","re","return","row","search","search(arr,","sum","t","tai","temp","this.arr","this.buildlist(0)","this.buildlist(this.arr,","this.initlist()","this.num","this.result","true","var","{","{boolean}","{number[][]}","{number[]}","{number}","{}","||","}","上项或左项中的最小值","个皇后实际上只用一维数组就表示：list[row]","中所有相加等于","买股票最佳时机","二分法递归","从左往右","优化","八皇后问题","其实解法跟之前一样，上面用了二维矩阵来记录位置，因为已经确定同一行不可能存在","分别没有上项与左项","判断和之前不同","前面元素里最小的","只关心","只能交易一次的","可交易多次的","和","回溯法模板","大数相加","完整代码","射击气球","当前项值","当前项最小路径和","得到最大值","思路","找出不重复的数字有多少个，并把数组前","找出重复的数字","改下：","改成","故单独处理计算起项最小路径和","数组分成和等值的两个数组","数组可否分成和相等的三个数组","数组题","方程","是多少，然后迭代当前","暴力解决","暴力递归","最后一行开始遍历,从下往上","最小路径和","核心思路：","添加两侧的虚拟气球","生成随机数组","的可能","的第一行与第一列","计算第一列","计算第一行","输入","边界处理","那两个就是把","项改成不重复的数字","题集"],"alibaba/interview/interview.html":["&&","',')","'1234',输出结果为'1,234'","'_'","(?:exp)匹配","(?=exp)匹配","(index","(row","(var","+","//","//当前列的长度","0","0;","123,456","123456","7","=","==","=>","=>5","[[0,1],[2,3,4],[5,6]]","[[0,2,5],[0,2,6],[1,2,5]...]","[]","\\b","aaabbcccddccaaaaaaandw","arr","arr.push(e1","backtrace(nums,","c","const","count","decare(nums)","e2)","el)","el.foreach((e2)","el：数组中的当前元素","exp","exp，不捕获匹配的文本，也不给此分组分配组号","findmaxlen(str,","function","hintindex","index","item.split('_'))","last.foreach((e1)","last：上次运算结果","len","len)","n","nums.length","nums.reduce((last,","nums[row].length","re","reduce:","replace(/\\d{3}/g,',')","res.map((item)","res.push([...track])","return","row)","str.length","str.replace(/\\b(?=(?:\\d{3})+\\b)/g,","target)","track","track.length","{","}","})","代表单词分界位置","例如：str","前面的位置","匹配不是单词开头或者结束的位置","回溯法,不要想复杂了，不需要置为*等手段，并不会走回头路","数组的笛卡尔积","看了下答案","阿里面试一面题目","面试题"],"程序员面试金典/数组与字符串/字符是否唯一.html":["&","((mark","(1","(astr)","(let","(n","*","*/","/**","//","0","0)","0;","1.","128","2","2.","3.","97","=","==","@param","@return","acii","astr","astr)","astr.length","bit","c","char","char.charcodeat()","cn.com/problems/i","const","function","https://leetcod","isuniqu","lcci/solution/javascriptli","lhz960904/","map","mark","n","return","suan","true","uniqu","var","wei","yong","yun","{","{boolean}","{string}","{}","不使用数据结构，j","与","个","以上的写法，如果是","以上的就不是","位运算","判断字符是否唯一","可能有点偏题，毕竟这里主要就是做题的地方。。","如果我告诉他ascii字符集，然后他的代码里有边界检查，并且针对不同的范围有不同的侧重点，比如说ascii字符集，那也就是128个可能性，16个字节的位运算比较好","如果我告诉他是unicode，没有字符范围，老老实实排序再判断是比较符合我对工程师的要求的，因为算法性能稳定，没有额外资源要求，一眼看出没什么不可预见的风险，100分。","如果我是面试官，会考虑主要考察什么，就我的工作经验看，大多数主要是招聘工程师的，面试者如果什么问题都没有，直接写个二重循环搞定，会首先给个50分，如果能写点判断字符串是否为null的，60分。","如果我是面试官，我会希望看到什么？","字符串的字符范围，如果我告诉他，26个小写英文字母，那可能一开头直接判断如果字符长度>26,","字符是否唯一","字符集，是","对象不算吧(⊙︿⊙)","就是说，有些东西，没想到或者一时没想到根本不是问题，日常工作中稍微提示一下即可，但是缜密的思维对于程序员来说更重要","左移结果进行与运算，如果不是0，说明其中有一位都是1，说明重复","思路","所以我期望面试者不要急于解答，我希望他先问我问题：","来比较","用","直接上手什么bitset，什么位运算的，我会先问他，题目中有没有交代字符串的字符一定是26个英文字母？如果是unicode环境，你是不是要准备2^16/8个字节的空间？在实际项目中，风险可控，结果可期更重要，绝大多数时候不在乎那点时间和资源。","直接返回false，做到这一点的，80分","贴个评论","过一遍，如果出现","这是限定字符都是","需要左移的位数"],"程序员面试金典/数组与字符串/判定是否互为字符重排.html":["!=","(s1,","(s1.length","(var","*","*/","/**","0;","=","==","@param","@return","checkpermut","fals","function","map","map1","map2","nlgn","return","s1","s1.split('').sort().join()","s2","s2)","s2.length)","s2.split('').sort().join()","var","{","{boolean}","{string}","{}","{},","}","两个排序后判断","判定是否互为字符重排","思路","总复杂度","用","统计下，然后遍历一遍，看是否都相等","首先排序的复杂度"],"程序员面试金典/数组与字符串/URL化.html":["'%20')","').join('%20')","(s,","*","*/","/**","=","@param","@return","encodeuri(s.substring(0,","function","length","length)","length))","length).replace(/\\s/g,","length).split('","replacespac","return","s","s.substr(0,","url","var","{","{number}","{string}","}","化","思路"],"程序员面试金典/数组与字符串/回文排列.html":["&","(let","(n","(result","(s)","(var","*","*/","/**","0","0)","0;","0。","0，往右的","0，看了半天。上面的好理解鞋","1","1(不需要减最高位，后面位的任何一个","1(从","1))","1))才等于","1)最高位`result`和`result","1.","128","128，也就是","16","1`就会是","1`都会是","1。","1。&预算也就是","1，那`result","2.","3.","65","66","=","==",">","@param","@return","^=","a,那就是右数第","acii","bit","bool:","c","canpermutepalindrom","canpermutepalindrome(s)","canpermutepalindrome(self,","class","def","fals","function","key，本质一样","map","n","obj","result","return","s","s)","s.length","s:","solution:","str)","var","{","{boolean}","{string}","{}","个字节","了)，最后&结果肯定不为","了。","位上是","位变成","位是","位运算","位里只有只出现一个","保存当前的字符","保存，看是否都是偶数对，除了中间一个元素","其他情况下(有多个","出现，accii","啦","回文排列","如果有其他单独位出现的，就会不止一个","对应位","就够减","就留下单独出现字符对应位数保存字节。","左移字符对应的","开始)，其他都是","思路","最后","最骚的是(result","比如当第","比如最后单独出现一个","然后异或就是偶数的话和上面一样消为","的情况下(result","看到题解里的，一直在增加删除对应的","看注释，就是","码位数，相当于","码总共","那理解最后一句就是，当"],"程序员面试金典/数组与字符串/一次编辑.html":["(first","(first,","(int","(let","(math.abs(length1","(math.abs(n1","(n1","+","//因为只有一次编辑的机会，如果两个字符串长度相差大于1，","//直接返回fals","//给他一次不匹配的机会","//这种情况只能有一个字符不一样，并且注意要顺序一致","0","0,","0;","1","1)","1));","1).equals(second.substring(i));","1];","1][length2","72",";","=","==",">","away","boolean","chong","cn.com/problems/on","count","dp[][]","duo","fa","fals","false;","false。整个匹配下来如果只失败一次或者没有失败，返回","first,","first.length","first.length();","first.substring(i","first.substring(i).equals(second.substring(i","function","gou","https://leetcod","int","int[length1","j","jie","ju","kdo7j/","lcci/solution/shu","length1","length2","length2)","n1","n2","n2)","new","nomatch","oneeditaway","oneeditaway(str","public","return","second)","second.length","second.length();","shi","static","string","suan","true","true;","true。","var","word1,","word1.length();","word2)","word2.length();","{","}","一次编辑","动态规划","即可，具体分析就不在写了，我们来看下代码","思路","注释里有我的全部思路，这题提交错了好几次，做的很糟","给一次试错的机会，如果一次匹配失败我们还要继续匹配，如果再次失败就返回","这个应该最好理解，如果匹配失败，我们只需要比较后面的字符串相等即可，来看下代码","这题可以参照编辑距离写的题解，第","题的答案，直接判断最后的编辑距离是否小于等于","题要求的是编辑距离，我们这里也要使用第","题解里看到的:"],"程序员面试金典/数组与字符串/字符串压缩.html":["''","'',","(index","(j","(n","(s)","(s.length","*","*/","/**","//","0","0)","0,","1","=","==","@param","@return","an","compressstr","count","function","index","j","map","n","return","s","s.length","s2","var","{","{string}","变量来保存上一个相同字符的开始位置","字符串压缩","思路","感觉比较简单这题，一开始想用","精妙...","统计，然后发现是要按顺序的，不能间隔开的也在一起。具体看题目里的注释","题解里有个双指针的,本质上和上面一样，就是用了","，关键注意最后还要加上一次。"],"程序员面试金典/数组与字符串/旋转矩阵.html":["(matrix)","(var","0","0;","=","arr.reverse())","function","i+1。","j","j=0,i=1。swap","m","matrix","matrix.length","matrix[0].length","n","return","rotat","swap(maxtrix[i][j],maxtrix[j][i])。注意的地方就是","var","{","}","因为都从","就在做无用功了","开始的话，i=0,j=1,然后","思路","旋转矩阵","要等于","这题我貌似之前做过，反正旋转矩阵先转置下，转置就是"],"程序员面试金典/数组与字符串/零矩阵.html":["(let","(matrix)","(var","*","*/","/**","//行清零","0","0;","=","@param","@return","anything,","col","col:","function","instead.","j","m","map","map.row)","matrix","matrix.length","matrix[0].length","modifi","n","new","number(row)","place","return","row","row:","set()","set(),","setzero","set，并且置","tag","var","{","{number[][]}","{void}","{}","{},","}","好吧，效率奇差，但是好歹写了一个答案。哈哈哈哈。主要是第二遍不需要遍历所有的行和列，只需要找到","思路","改写下","的行和列，然后再遍历一遍，把相应的行和列置为","这题我好像也做过，这几题都是在原先简单那个","那里就是没有全遍历","里.","里的行和列，对应的置","零矩阵","题解里有个答案其实本质一样，但是写的好多了,用了","首先找到有"],"程序员面试金典/数组与字符串/字符串轮转.html":["!=","(index","(m","(s1","(s1,","(s1.length","+","//包括了两个空字符串情况","//包括了其中一个为空字符串情况","//只有长度相等时，才能继续","0","100000]范围内。","=","==",">=","fals","false，其次拼接两个","function","index","isflipedstr","m","n","n)","return","s","s.indexof(s1)","s1","s1.","s1.length","s2","s2)","s2.length","s2.length)","s2，则如果是由","true","var","{","}","一定包含","不一定要一个个旋转，可以以一个","你能只调用一次检查子串的方法吗？","先判断长度是否相同，不相同返回","字符串轮转","字符串长度在[0,","思路","提示：","旋转而成，则拼接后的","看题解，我震惊了","说明:","遍历字符，然后分割两个子串，然后反向拼接下"],"程序员面试金典/链表/移除重复节点.html":["!=","!head.next)","(!head","(!set.has(cur.val))","(cur.next)","(head)","(ob","(oc.next","(oc.next.v","(set.has(cur.val))","*","*/","/**","//","//往后走","//把当前节点删掉","//没有的话","//注意","//注意！","1]","2,","2.不用缓存","3,","=","==","@param","@return","[1,","class","continu","cur","cur.next","definit","function","head","head)","head.next,","head;","link","list.","listnod","listnode(val)","new","null","null)","null;","ob","ob.next;","ob.val)","ob;","oc","oc.next","oc.next.next;","oc.next;","prev","prev.next","public","removeduplicatenod","removeduplicatenodes(listnod","return","set","set()","set.add(cur.val)","set.add(prev.val)","singli","solut","this.next","this.val","val;","var","{","{listnode}","||","}","关键是边界要记得","几个标注//注意！","思路","时间复杂度：o(n^2)","的地方","看了官方题解，两重循环","移除重复节点","链表确实有点绕，不太熟悉，提交错了好几次","首先想到用个缓存"],"程序员面试金典/链表/返回倒数第k个节点.html":["(first.next)","(head,","(k","(pointer.next)","(var","//往后走","//往后走k步","//计算下总长度","//重新置为head","0)","0;","1","=",">","count","count++","first","first.next","function","head","head,","k","k)","kthtolast","pointer","pointer.next","return","second","second.next","second.v","var","{","}","个位置","个节点","当然还有另一种比较低效率的方式，两遍遍历，知道整个链表长度也可以","思路","步，然后第二个从头部一起走，当第一个走到结尾时，第二个就在倒数第","返回倒数第","这题比较简单，首先双指针，第一个先走"],"程序员面试金典/链表/分割链表.html":["!==","(!head)","(cur)","(cur.val","(head","(head,","(head.val","*","*/","/**","=","@param","@return","biao","cn.com/problems/partit","const","cur","definit","function","ge","head","iohj/","larg","largehead","lcci/solution/fen","leetcod","less","less,","lian","link","list","list.","listnode(0)","listnode(val)","more","more,","new","null","null)","null;","p","partit","q","return","singli","small","smallhead","solut","this.next","this.val","val;","var","x","x)","{","{listnode}","{number}","{},","}","分割链表","思路","链接：https://leetcod"],"程序员面试金典/链表/链表求和.html":["%","(f)","(l1","(l1)","(l1,","(l2)","(node)","+","/","//null","//往后走","//进位","//都走到最后一个节点","0","10)",":","=","?","addtwonumb","const","dumyhead","dumyhead.next","f","function","l1","l1.next","l1.val","l1val","l2","l2)","l2.next","l2.val","l2val","listnode(0)","listnode(f)","listnode(sum","math.floor(sum","n","new","node","node.next","null","p1","p2","re","res.next","return","revers","reverse(l1)","reverse(l2)","sum","temp","var","{","||","}","如果正向存放，那就要翻转下","思路","这就是大数相加链表版","链表求和"],"程序员面试金典/链表/回文链表.html":["!=","!==","!p.next)","&&","(!p","(!recursivelycheck(currentnode.next))","(curr","(currentnod","(currentnode)","(currentnode.v","(fast.next","(head","(head)","(let","(p)","(p1.val","(result","//","//一个节点是回文","//递归节点","0,","1","1;","6cp3/","=","==","=>",">1",">2","[]","arr","arr.join('')","arr.length","arr.push(p.val)","arr.reverse().join('')","biao","cn.com/problems/palindrom","console.log(s1,","const","curr","curr.next","endoffirsthalf","endoffirsthalf(head)","fals","fast","fast.next.next","firsthalfend","firsthalfend.next","frontpoint","frontpointer.next","frontpointer.val)","function","head","https://leetcod","ispalindrom","ispalindromestr(arr)","j","lcci/solution/hui","leetcod","lian","link","list","nexttemp","null","null)","o(1)","o(n)","o(n),因为有递归栈","p","p.next","p1","p1.next","p2","p2.next","p2.val)","prev","recursivelycheck","recursivelycheck(head)","result","return","reverselist","reverselist(firsthalfend.next)","reverselist(secondhalfstart)","s1","s2","s2)","secondhalfstart","slow","slow.next","solut","true","var","wen","{","||","}","你能否用","使用递归，反向遍历链表！","判断数组是否是回文，也可以这样判断","判断是否回文","回文链表","思路","找到前半部分链表的尾节点并反转后半部分链表","时间复杂度和","最粗暴的方式就是保存到字符串或数组里，看是不是回文字符串","空间复杂度解决此题？","空间复杂度还是","翻转后半部分，注意奇数偶数节点翻转后半部分不影响(翻转前半部分就要注意)","还原链表并返回结果","进阶：","避免使用","额外空间的方法就是改变输入。"],"程序员面试金典/链表/链表相交.html":["!=","(heada,","(lenb","(node1)","(node2)","(p1","++;","//","0,","0;",":",";","=",">","?","function","getintersectionnod","heada","heada,","headb","headb)","headb;","len(heada)+len(headb)的距离来确定是否相交","lena","lena)","lenb","node1","node1.next;","node2","node2.next;","p1","p1.next","p2","p2)","p2.next","p2.next;","return","var","{","}","两条链表不一定一样长，所以都走","先计算长度，再在后续长度一样地方开始遍历","思路","根据两个链表的长度，得出长度差n,让长的链表的指针先走n步","注意链表的性质","然后两个指针一起移动，判断两者是否相等（指向同一个内存地址）","链表相交"],"程序员面试金典/链表/环路检测.html":["!==","(!p.visited)","(fast","(fast.next","(head","(head)","(p)","(ptr","(visited.has(head))","//已经访问过","0","=","===","ce","cn.com/problems/link","const","cycl","detectcycl","fast","fast.next.next","function","head","head,","head.next","https://leetcod","index","index++","jian","lcci/solution/huan","leetcod","list","lu","new","null","null)","o(n)","p","p.next","p.visit","ptr","ptr.next","return","s2la/","set","set()","slow","slow)","slow.next","solut","true","true，就表示找到了环的开始节点","var","visit","visited.add(head)","{","}","原来快慢指针再加一个","快慢指针可以检测环，但是无法给出环的开头节点，我开始想到的就是在链表里加个属性，visited。当第一次出现","思路","是","是可以的。看题解吧，这个证明很妙","来保存访问过的节点。原理一样，但空间也是","环路检测","这种改变了链表，不太合适，也可以使用一个"],"程序员面试金典/栈与队列/三合一.html":["(!this.stack[stacknum])","(stacknum,","(stacksize)","(this.stack[stacknum].length","*","*/","/**","=","@param","@return","[]","function","stacknum","stacksiz","this.siz","this.stack","this.stack[stacknum]","tripleinon","tripleinone.prototype.push","valu","value)","var","{","{number}","{void}","}","三合一","不想写这种题，其实不难，但费时间理解题意。","关键是题目根本读不懂它到底要干嘛","思路"],"程序员面试金典/栈与队列/栈的最小值.html":["()","(x)","*","*/","/**","//这个地方很灵性，理解下，比如总共6个元素，第4个元素开始它一直最小的，比如","1]","1],","3最小，除非一直pop，直到只剩下4个元素。这也是为什么pop那里min_stack也要pop","3，这样后面一直getmin几次都是","3，那从第4次，后续6个min_stack都一直push进","=","@param","@return","[]","[infinity]","call","data","function","here.","initi","instanti","minstack","minstack()","minstack.prototype.getmin","minstack.prototype.pop","minstack.prototype.push","minstack.prototype.top","new","obj","obj.getmin()","obj.pop()","obj.push(x)","obj.top()","object","param_3","param_4","return","structur","such:","this.min_stack","this.min_stack.pop()","this.min_stack.push(math.min(this.min_stack[this.min_stack.length","this.min_stack[this.min_stack.length","this.stack","this.stack.pop()","this.stack.push(x)","this.stack[this.stack.length","var","x","x))","{","{number}","{void}","}","思路","栈的最小值","辅助栈"],"程序员面试金典/栈与队列/堆盘子.html":["&&","(cap)","(this.stack[this.stack.length","(val)","*","*/","/**","0","1","1]","1].length","=","@param","@return","[]","cap","function","index","pop","popat","stackofpl","stackofplates.prototype.push","this.cap","this.stack","this.stack[this.stack.length","val","var","{","{number}","{void}","}","不合理，返回","关键是","和","堆盘子","思路","是","比如","这题主要就是各种边界情况要考虑，没啥难的","都要注意空的数组要去除"],"程序员面试金典/栈与队列/栈排序.html":["&&","(!data.empty()","(!data.empty())","(!help.empty())","()","(this.data.length","(this.help.length","(val)","*","*/","/**","0","0)","1","1;","1]","1])","=",">","@param","@return","[]","bool","call","class","data.empty();","data.pop();","data.push(temp);","data.push(val);","data.top())","data.top();","data;","function","help.pop();","help.push(temp);","help.top();","help;","instanti","int","isempty()","new","obj","obj.isempty()","obj.peek()","obj.pop()","obj.push(val)","object","param_3","param_4","peek()","pop()","private:","public:","push(int","return","sortedstack","sortedstack()","sortedstack.prototype.isempti","sortedstack.prototype.peek","sortedstack.prototype.pop","sortedstack.prototype.push","stack","such:","temp","this.data","this.data.length","this.data.pop()","this.data.push(temp)","this.data.push(val)","this.data[this.data.length","this.help","this.help.pop()","this.help.push(temp)","val","val)","var","void","{","{boolean}","{number}","{void}","}","};","思路","栈排序"],"程序员面试金典/栈与队列/动物收容所.html":["()","(animal)","(i","(this.queue.length","*","*/","/**","0","0)","1,","1]","=",">","@param","@return","[","[]","anim","animalshelf","animalshelf.prototype.dequeueani","animalshelf.prototype.dequeuedog","animalshelf.prototype.enqueu","function","len","return","this.queu","this.queue.length","this.queue.push(animal)","this.queue.shift()","var","{","{number[]}","{void}","}","动物收容所","思路"],"程序员面试金典/树与图/节点间通路.html":["&&","(int","(n,","(var","//","0;","0=>2，target","1=>0，找到就说明可以连上","1=>2,那当前找到的是","=","==","[]","boolean","boolean[]","boolean[graph.length];","df","findwhetherexistspath","findwhetherexistspath(int","function","graph,","graph[i][0])","graph[i][1]","helper(graph,","helper(int[][]","int","int[][]","n,","new","null;","privat","public","return","start,","target","target)","target);","this.visit","var","visit","visited[i]=tru","{","}","一致，那就去找","创建访问状态数组","思路","深度优先搜索","理解这一句就懂了，比如我要找","的设置，为了防止死循环？","节点间通路","访问状态数组","跟回溯一致，df","还有这个","这题开始题目没看懂,图的知识要加强，具体看题解","题解"],"程序员面试金典/树与图/最小高度树.html":["(len","(nums)","+","/","0)","1))","2)","=","==","function","index","index))","len","math.floor(len","new","null","nums.length","return","root","root.left","root.right","sortedarraytobst","sortedarraytobst(nums.slice(0,","sortedarraytobst(nums.slice(index","treenode(nums[index])","var","{","}","思路","最小高度树","有序数组,一直找中间的就行了，递归"],"程序员面试金典/树与图/特定深度节点链表.html":["(!tree)","(i","(levels.length","(node,","(node.left)","(node.right)","(tree)","+","//这里是层序遍历之后的代码","0","0)","1)","=","==","=>","[]","arr.length","function","head","helper","helper(node.left,","helper(node.right,","helper(tree,","len","level","level)","levels.map((arr)","levels.push([])","levels[level].push(node.val)","listnode(0)","listofdepth","new","p","return","var","{","}","层续遍历,然后转成链表","思路","特定深度节点链表","特定节点深度链表"],"程序员面试金典/树与图/检查平衡性.html":["(!balancestatus)","(!node)","(math.abs(left","(node)","(root)","+","//","0","1","1)","=","=>",">","balancestatu","const","df","dfs(node.left),","dfs(node.right)","dfs(root)","fals","function","isbalanc","left","math.max(left,","return","right","right)","true","var","{","}","如果已经平衡，后续就直接退出","左右子树的高度返回值","思路","标记是否平衡","检查平衡性","返回自身高度，供父节点使用"],"程序员面试金典/树与图/合法二叉搜索树.html":["&&","(node","(node.v","(root)","=","==","fals","function","infin","infinity,","isvalidbst","judge(node,","judge(node.left,","judge(node.right,","judge(root,","max","max,","min","min)","node.val)","node.val,","null)","return","true","var","{","}","合法二叉搜索树","思路"],"程序员面试金典/树与图/后继者.html":["(index","(root,","0","=","arr","function","index","inordersuccessor","inordertraversal(root)","p)","val","var","{","先中序遍历，然后看数组有没有后续","后继者","思路","注意是节点，而不是值"],"程序员面试金典/树与图/首个共同祖先.html":["&&","((lson","((root.val","(lson","(root","(root,","//","=","===","=>","an","ancestor","c2sl/","cn.com/problems/first","common","const","df","dfs(root,","dfs(root.left,","dfs(root.right,","fals","function","ge","gong","lcci/solution/sh","leetcod","lowestcommonancestor","lson","null)","p,","p.val","q)","q.val","q.val)","return","root","root.val","rson","rson)","rson)))","solut","tong","var","xian","zu","{","||","}","作者：leetcod","思路","来源：力扣（leetcode）","深度优先遍历","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","链接：https://leetcod","题解","首个共同祖先"],"程序员面试金典/树与图/二叉搜索树序列.html":["(length","(quenue.length","(root","(root)","(root,","(root.left)","(root.right)",")","*","*/","/**","//","0)","=","==","=>","@param","@return","[...temp,","[[]]","[]","[root.val])","binari","bstsequenc","cn.com/problems/bst","cur","cur.val])","definit","df","dfs(cur,","dfs(root,","function","lcci/solution/df","length","node.","null)","null;","quenu","quenue,","quenue.push(cur)","quenue.push(root.left)","quenue.push(root.right)","quenue.shift()","quenue.slice(),","re","res,","res.push([...temp])","return","root","sc8816/","sequenc","temp)","this.left","this.right","this.val","tree","treenode(val)","val;","var","{","{number[][]}","{treenode}","}","二叉搜索树序列","作者：sc8816","来源：力扣（leetcode）","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","链接：https://leetcod","题解"],"程序员面试金典/树与图/检查子树.html":["&&","(t1","(t1,","(t2","//","=","==","boolean","checksubtre","checksubtree(t1.left,","checksubtree(t1.right,","checksubtree(treenod","chong","cn.com/problems/check","exip/","fals","false;","fang","function","gui","hermannoht","istreeeql(t1,","istreeeql(t1.left,","istreeeql(t1.right,","istreeeql(treenod","jue","kmp","kmpjie","lcci/solution/di","liang","null","null)","privat","public","return","sh","subtre","t1,","t1.val","t2","t2)","t2);","t2.left)","t2.right)","t2.right);","t2.val","treenod","true","true;","var","{","||","}","作者：vigil","思路","来源：力扣（leetcode）","检查子树","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","还没学会","递归，很好理解","链接：https://leetcod"],"程序员面试金典/树与图/求和路径.html":["(root,","*","*/","/**","=","@param","@return","binari","definit","function","node.","null;","pathsum","root","sum","sum)","this.left","this.right","this.val","tree","treenode(val)","val;","var","{","{number}","{treenode}","{}","}","思路","我感觉就是回溯，试","求和路径"],"程序员面试金典/树与图/二叉树的所有路径.html":["!==","&&","'","'')","(node.left","(node.right","(node_queue.length)","(root","(root)","(root.left","(root.left)","(root.right)","+","+=","//","//叶子节点","=","===",">'","[]","[root.val.tostring()]","[root]","bf","binarytreepath","cha","cn.com/problems/binari","const","de","df","dfs(root,","dfs(root.left,","dfs(root.right,","function","jing","leetcod","lu","node","node.left.val.tostring())","node.right","node.right.val.tostring())","node_queu","node_queue.push(node.left)","node_queue.push(node.right)","node_queue.shift()","null","null)","path","path)","path_queu","path_queue.push(path","path_queue.shift()","paths.push(path)","paths/solution/","re","res.push(path)","return","root.right)","root.val.tostring()","shu","solut","solution/","suo","tree","var","{","||","}","二叉树的所有路径","作者：leetcod","思路","来源：力扣（leetcode）","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","链接：https://leetcod"],"程序员面试金典/树与图/路径总和2.html":["(root)","(root,","(root.left","(root.left)","(root.right)","(sum","+=","//叶子节点","0)","=","==","[]","[],","dfs(root,","dfs(root.left,","dfs(root.right,","function","ii","pathsum","re","res.push(stack.slice())","return","root.right)","root.val","stack,","stack.pop()","stack.push(root.val)","sum","sum)","targetsum)","var","{","||","}","思路","路径总和"],"程序员面试金典/树与图/路径总和3.html":["(!root)","(map.get(presum)","(root,","*","*/","+","+=","/**","//","0","0)","1)","=","@param","@return","an","b","cn.com/problems/path","console.log(map)","console.log(target","de","dfs(root,","dfs(root.left,","dfs(root.right,","dong","fa","function","https://leetcod","iii","iii/solution/tong","jie","map","map()","map.get(presum)","map.get(target","map.set(presum,","new","pathsum","presum","presum)","qian","return","root","root.val","su","sum","t8hl/","target","target)","targetsum)","var","yi","zhui","{","{*}","||","}","前缀和","前缀和，这个知识点,df","回溯","回溯理解下","思路","撤销","继续找","路径总和"],"程序员面试金典/树与图/从叶结点开始的最小字符串.html":["从叶结点开始的最小字符串","思路"],"程序员面试金典/位操作/插入.html":["((1","(n,","*","*/","/**","0","=","@param","@return","function","i,","insertbit","j","j)","m","m,","mask","n","var","{","{number}","之间的位置的数字变为","位","先把数","再用","到","左移","思路","或运算","插入","的"],"程序员面试金典/位操作/二进制数转字符串.html":["'0.'","'error'","(num","(num)","(str.length","+=","0","0)","1","1)","=","===","function","num","printbin","return","str","var","{","}","二进制数转字符串","思路"],"程序员面试金典/位操作/翻转数位.html":["&","(num","(num)","*","*/","+","/**","//cnt在下一轮循环时找当前0位的左侧有多少个1","//pre保存0右侧有多少位1","//如果最后一位是1","//类似11100110这种情况末尾需再比较一次；","0","0,","1","1)","1,","=",">>=","@param","@return","an","cnt","cnt++","function","math.max(ans,","num","pre","return","reversebit","var","{","{number}","}","翻转位数","翻转数位"],"程序员面试金典/位操作/配对交换.html":["&","(even","(num)","(odd","+","0b01010101...","0b10101010...","0x55555555","0xaaaaaaaa","1)","32","=",">>","an","even","exchangebit","function","hex_even","hex_odd","num","odd","var","{","与的话就是提取偶数位","与的话就是提取奇数位","位的","就是","思路","最后偶数位右移一位，奇数位左移一位，相加得结果","配对交换"],"程序员面试金典/位操作/下一个数.html":["下一个数"],"程序员面试金典/位操作/整数转换.html":["(a,","(re","(var","//","0","0;","=",">>","^","an","b","b)","convertinteg","function","re","res.tostring(2)","resstr","var","{","一开始写错了，关键这步，兼容负数","异或，然后计算1的个数","思路","整数转换"],"程序员面试金典/位操作/绘制直线.html":["class","drawline(int","for(int","i=x1;i>5]|=1","int","length,","public:","solut","vector","vectorg(length,0);","w,","x1,","x2,","y)","{","再优化：连续赋值","思路","按位或","没思路，直接贴题解","绘制直线"],"程序员面试金典/递归与动态规划/递归乘法.html":["(a","(a,","(b","*","*/","/**","1)","1,","2)","2；","=","===",">","@param","@return","b","b)","function","multipli","return","var","{","{number}","}","中找到小的那个，往下递归相加","为奇数，右移损失精度，补加左移参数","位运算","右移，直到","和","如果参数","思路","按位移动计算，>表示右移，等同于除以","递归乘法","递归加法","递归：一直将参数"],"程序员面试金典/递归与动态规划/汉诺塔问题.html":["(a,","(m","(m,","*","*/","/**","//","1","1)","1,","=","===","@param","@return","a,","a.length","anything,","b","b)","b,","c","c)","c,","c.push(a.pop())","function","hanota","instead.","modifi","move","move(m","move(n,","n","place","return","var","{","{number[]}","{void}","}","上的","个","中剩下的一个直接放到","在把","将","当只有一个时直接加到c中","思路","把","放到","汉诺塔问题","移到","通过"],"程序员面试金典/递归与动态规划/迷路的机器人.html":["&&","(i","(obstaclegrid)","(obstaclegrid[i][j]","+","//","0)","0,","1","1)","1,","2",":","=","==","===","?","[]","[])","base","case","dfs(obstaclegrid,","function","i,","j","j,","j])","obstaclegrid.length","obstaclegrid[0].length","obstaclegrid[0].length)","obstaclegrid[i][j]","pathwithobstacl","re","res.length","res.push([...track])","res[0]","return","track)","track.pop()","track.push([i,","var","{","||","}","向下","向右","思路","撤销","第一反应就是回溯","迷路的机器人"],"程序员面试金典/递归与动态规划/幂集.html":["(let","(nums)","(path,","=","=>","[]","const","df","function","index)","index;","re","res.push([...path])","subset","var","{","回溯","幂集","思路"],"程序员面试金典/递归与动态规划/魔术索引.html":["(nums)","(var","0;","=","findmagicindex","function","len","nums.length","var","{","二分法","因为有序，应该能优化","如果不存在重复元素，可以使用二分法","官方题解","思路","魔术索引","默认方式"],"程序员面试金典/递归与动态规划/三步问题.html":["(n)","(var","*","*/","/**","2,","3;","4]","=","@param","@return","[1,","function","n","result","var","waystostep","{","{number}","三步问题","动态规划，最简单的写法","妈蛋，我说这么简单的题目我怎么会错，题目说了要取模，眼瞎了","思路"],"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":["(let","(s)","(str.length","//","0;","=","===","[]","backtrack('')","backtrack(str)","const","function","permut","re","res.push(str)","return","s.length)","var","{","}","全排列，回溯","思路","无重复字符串的排列组合","符合字符串长度则收集"],"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":["(let","(s)","(str.length","+","//","0;","1)","=","===","array.from(res)","backtrack('',","backtrack(str,","chr","function","index)","new","permut","re","res.add(str)","return","s)","s.length)","set","set()","str","str.length","str.substr(0,","str.substr(index","var","{","}","去重","回头再看看题解里的大佬思路","基本的回溯，然后","思路","有重复字符串的排列组合","符合字符串长度则收集"],"程序员面试金典/递归与动态规划/括号.html":["'(')","(lremain","(lremain,","(n)","(str.length","*","+","//","0)","1,","2","=","==","=>",">","[]","const","df","dfs(lremain","function","generateparenthesi","n)","re","res.push(str)","return","rremain,","str","str)","var","{","}","加入解集","只要左括号有剩，就可以选它，然后继续做选择（递归）","字符串构建完成","左右括号所剩的数量，str是当前构建的字符串","思路","括号","结束当前递归分支"],"程序员面试金典/递归与动态规划/颜色填充.html":["!=","(i","(image,","+","1,","=","==","floodfil","function","helper(image,","i,","imag","image.length","image[0].length","image[i][j]","image[sr][sc],","j","j,","newcolor","newcolor)","oldcolor","oldcolor,","return","sc,","sr,","var","{","||","}","思路","颜色填充","颜色填充]"],"程序员面试金典/递归与动态规划/硬币.html":["1.动态规划","思路","硬币"],"程序员面试金典/递归与动态规划/八皇后.html":["&&","'q')","(let","(list[i][j]","(n)","(var",")",",","0","0)","0;","=","===",">=","[]","buildlist(this.arr,","fals","function","initlist()","item.join(''))","j","n","num","return","solvenqueen","this.arr","this.num","this.result","true","var","{","}","八皇后"],"basicalgo/sort/sort.html":["!=","&&","'number'","(arr.length","(bucket","(i","(largest","(left","(left[0]","(len","(right","(var",")","*","+","/","//","0","0)","0);","0,","0;","0到","1","1),","1)和新的有序区(rn),且满足r[1,2…n","1)开始时，当前有序区和无序区分别为r[1..i","1)调整为新堆，然后再次将r[1]与无序区最后一个元素交换，得到新的无序区(r1,r2….rn","1,","1,rn)。不断重复此过程直到有序区的元素个数为n","1.1","1.3","10.1","10.2","10.3","10.4","10;","10、基数排序（radix","1959年shell发明，第一个突破o(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。","1;","1]","1]和r(i..n）。该趟排序从当前无序区中","1、冒泡排序（bubbl","1趟直接选择排序得到有序结果。具体算法描述如下：","1趟结束，数组有序化了。","1，则整个排序过程完成。","2","2))","2);","2)和新的有序区(rn","2,","2.1","2.2","2.3","2.4","2、选择排序（select","3.1","3.2","3.3","3.4","3、插入排序（insert","4.1","4.2","4.3","4.4","4、希尔排序（shell","5.1","5.2","5.3","5.4","5;","5、归并排序（merg","6.1","6.2","6.3","6、快速排序（quick","7.1","7.2","7.3","7、堆排序（heap","8.1","8.2","8.3","8.4","8、计数排序（count","9.1","9.2","9.3","9.4","9、桶排序（bucket",":",";","=","===",">",">=","?","[];","arr.length","arr.length,","arr.length;","arr;","arr[0];","arr[i]","arr[i];","arr[j+1]","arr[j+1])","arr[j+1];","arr[j]","arr[j];","arr[largest])","arr[preindex","arr[preindex]","arr[preindex];","arr[sortedindex++]","array(bucketcount);","array(maxvalu","arrlen","arr为原始数组，从最低位开始取每个位组成radix数组；","bubblesort(arr)","bucket","bucket[j]","bucketcount","bucketlen","buckets","bucketsize)","bucketsort(arr,","buildmaxheap(arr)","buildmaxheap(arr);","conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2","counter","countingsort(arr,","current","current)","current;","default_bucket_s","default_bucket_size;","dev","function","gap","gap;","heapify(arr,","heapsort(arr)","i)","i);","i,","i;","insertionsort(arr)","j)","j;","k","largest","largest);","left","left,","left;","len","len;","lists）。具体算法描述如下：","math.floor((maxvalu","math.floor(gap","math.floor(len","math.floor(len/2);","maxdigit)","maxvalu","maxvalue)","mergesort(arr)","minindex,","minvalu","minvalue)","mod","n","new","n个记录的直接选择排序可经过n","partitionindex,","place在数组上实现。具体算法描述如下：","place排序（即只需用到o(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。","preindex","preindex,","quicksort(arr,","r[k]，将它与无序区的第1个记录r交换，使r[1..i]和r[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；","radixsort(arr,","return","right","right)","right.length>0)","right;","sedgewick提出的。","selectionsort(arr)","shellsort(arr)","sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。","sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。","sortedindex","sort）","sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。","swap(arr,","temp","temp;","typeof","var","{","||","}","“基准”（pivot）；","一般来说，插入排序都采用in","个","之间的整数时，时间复杂度是o(n+k)，空间复杂度也是o(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。","从不是空的桶里把排好序的数据拼接起来。","从数列中挑出一个元素，称为","从第一个元素开始，该元素可以认为已经被排序；","代码","代码实现","作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。","元素交换","先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：","冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。","初始状态：无序区为r[1..n]，有序区为空；","动图演示","十大排序","十种常见排序算法可以分为两大类：","原文链接：https://www.cnblogs.com/onepixel/p/7674659.html","反向填充目标数组：将每个元素i放在新数组的第c(i)项，每放一个元素就将c(i)减去1。","取出下一个元素，在已经排序的元素序列中从后向前扫描；","取得数组中的最大数，并取得位数；","因为声明的多个函数都需要数据长度，所以把len设置成为全局变量","图片演示","基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要o(n)的时间复杂度，而且分配之后得到新的关键字序列又需要o(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是o(d*2n)","基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。","基数排序的空间复杂度为o(n+k)，其中k为桶的数量。一般来说n>>k，因此额外空间需要大概n个左右。","堆排序（heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。","堆调整","如果该元素（已排序）大于新元素，将该元素移到下一位置；","对radix进行计数排序（利用计数排序适用于小范围数的特点）；","对所有的计数累加（从c中的第一个元素开始，每一项和前一项相加）；","对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；","对每个不是空的桶进行排序；","对这两个子序列分别采用归并排序；","将两个排序好的子序列合并成一个最终的排序序列。","将初始待排序关键字序列(r1,r2….rn)构建成大顶堆，此堆为初始的无序区；","将堆顶元素r[1]与最后一个元素r[n]交换，此时得到新的无序区(r1,r2,……rn","将新元素插入到该位置后；","希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者robert","建立大顶堆","归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是o(nlogn）的时间复杂度。代价是需要额外的内存空间。","归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（divid","快速排序使用分治法来把一个串（list）分为两个子串（sub","快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。","找出待排序的数组中最大和最小的元素；","把长度为n的输入序列分成两个长度为n/2的子序列；","按增量序列个数k，对序列进行k","排序算法整理","插入排序在实现上，通常采用in","插入排序（insert","时，整个序列作为一个表来处理，表长度即为整个序列的长度。","桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序","桶排序最好情况下使用线性时间o(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为o(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。","桶的初始化","每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m","比较相邻的元素。如果第一个比第二个大，就交换它们两个；","比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破o(nlogn)，因此也称为非线性时间比较类排序。","注意：这里和动图演示的不一样，动图是分组执行，实际操作是多个分组交替执行","由于交换后新的堆顶r[1]可能违反堆的性质，因此需要对当前无序区(r1,r2,……rn","的子序列，分别对各子表进行直接插入排序。仅增量因子为1","相邻元素两两对比","第i趟排序(i=1,2,3…n","算法分析","算法分类","算法复杂度","算法描述","统计数组中每个值为i的元素出现的次数，存入数组c的第i项；","表现最稳定的排序算法之一，因为无论什么数据进去都是o(n2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。","计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。","计数排序是一个稳定的排序算法。当输入的元素是","设置一个定量的数组当作空桶；","设置桶的默认数量为5","趟排序；","路归并。","转自博客园","输入数据的最大值","选出关键字最小的记录","选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1；","选择排序(select","递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。","遍历输入数据，并且把数据一个一个放到对应的桶里去；","重复步骤1~3，直到排序完成。","重复步骤2~5。","重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；","重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；","针对所有的元素重复以上的步骤，除了最后一个；","非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。","，当然d要远远小于n，因此基本上还是线性级别的。"],"basicalgo/datastruct/map.html":["(key){","//初始化函数","//定义一个自己的mymap，执行初始化函数，在其原型链上写","//用来存放我们的kv","//这里定义了存放的桶的个数，","0;","3)","3;","8;",":","=","?","[];","es6","es6map","es6map数据结构底层原理模拟","for(let","function","key.length","mymap(){","mymap.prototype.bucket","mymap.prototype.init","mymap.prototype.len","strlen","this.init();","};","数据结构底层原理模拟","然后再从同类中查找，这里我们用hash值来分类。","用邻接链表的底层原理来简单模拟实现，不是用遍历去查找","的map数据结构","让每个桶里的初始next等于nul","这样体现不出查找快速的特点。就是给我们的数据分好类"]},"length":148},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"1":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"1":{"1":{"0":{"0":{"0":{"0":{"1":{"1":{"1":{"1":{"0":{"0":{"0":{"0":{"1":{"1":{"1":{"1":{"0":{"0":{"0":{"0":{"1":{"1":{"1":{"1":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"0":{"1":{"1":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"docs":{}},"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.07272727272727272},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.025830258302583026},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.023622047244094488},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.02654867256637168},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.03333333333333333},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0380952380952381},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.01818181818181818},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.031496062992125984},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.04430379746835443},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.04395604395604396},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.032520325203252036},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.01327433628318584},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.03125},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.06451612903225806},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0069084628670120895}},",":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.03333333333333333},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.015625},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}},")":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.01090909090909091},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.01327433628318584},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},")":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"。":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},";":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.03896103896103896},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.07317073170731707},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.06666666666666667},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.03636363636363636},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.07317073170731707},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.04878048780487805},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.024793388429752067},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0392156862745098},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.07272727272727272},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.07692307692307693},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.10526315789473684},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.016363636363636365},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.022857142857142857},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.03296703296703297},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.05084745762711865},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.015544041450777202},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}},"/":{"docs":{},"/":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"当":{"docs":{},"前":{"docs":{},"未":{"docs":{},"取":{"docs":{},"余":{"docs":{},"的":{"docs":{},"值":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"进":{"docs":{},"一":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}},"，":{"docs":{},"即":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},"先":{"docs":{},"有":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"填":{"docs":{},"写":{"docs":{},"“":{"docs":{},"状":{"docs":{},"态":{"docs":{},"表":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"加":{"docs":{},"上":{"docs":{},"这":{"docs":{},"一":{"docs":{},"天":{"docs":{},"的":{"docs":{},"股":{"docs":{},"价":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"三":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{},"必":{"docs":{},"然":{"docs":{},"无":{"docs":{},"法":{"docs":{},"等":{"docs":{},"于":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}},"满":{"docs":{},"足":{"docs":{},"则":{"docs":{},"添":{"docs":{},"加":{"docs":{},"进":{"docs":{},"结":{"docs":{},"果":{"docs":{},"集":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"循":{"docs":{},"环":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}},"比":{"docs":{},"如":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"一":{"docs":{},"段":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}},"往":{"docs":{},"右":{"docs":{},"的":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}},"看":{"docs":{},"了":{"docs":{},"半":{"docs":{},"天":{"docs":{},"。":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"鞋":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}},"；":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"x":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"0":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}},"docs":{}},"docs":{}}}},"docs":{},"f":{"0":{"docs":{},"f":{"0":{"docs":{},"f":{"0":{"docs":{},"f":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}},"docs":{}}},"docs":{}}},"docs":{}}},"3":{"3":{"3":{"3":{"3":{"3":{"3":{"3":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"5":{"5":{"5":{"5":{"5":{"5":{"5":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}}}}}}}}}},"]":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},"=":{"docs":{},">":{"2":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}},"docs":{}}},"b":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"1":{"0":{"1":{"0":{"1":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"到":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"1":{"0":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}},"docs":{}},"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"1":{"0":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"docs":{}},"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"取":{"docs":{},"余":{"docs":{},"则":{"docs":{},"为":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"值":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"、":{"docs":{},"基":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"1":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"2":{"3":{"4":{"5":{"6":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{},",":{"4":{"5":{"6":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},"docs":{}},"docs":{}},"docs":{}}},"8":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}},"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"3":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"4":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"5":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"6":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"7":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"8":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"9":{"5":{"9":{"docs":{},"年":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"发":{"docs":{},"明":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"突":{"docs":{},"破":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"是":{"docs":{},"简":{"docs":{},"单":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"版":{"docs":{},"。":{"docs":{},"它":{"docs":{},"与":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"之":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"优":{"docs":{},"先":{"docs":{},"比":{"docs":{},"较":{"docs":{},"距":{"docs":{},"离":{"docs":{},"较":{"docs":{},"远":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"希":{"docs":{},"尔":{"docs":{},"排":{"docs":{},"序":{"docs":{},"又":{"docs":{},"叫":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"增":{"docs":{},"量":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.061224489795918366},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.03636363636363636},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0392156862745098},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.03296703296703297},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01845018450184502},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"easy/Other/位1的个数.html":{"ref":"easy/Other/位1的个数.html","tf":3.333333333333333},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.06451612903225806},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.043478260869565216},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.054945054945054944},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.0379746835443038},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.05263157894736842},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.03296703296703297},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.034482758620689655},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.043478260869565216},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.03773584905660377}},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224}}},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"才":{"docs":{},"等":{"docs":{},"于":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}},"/":{"docs":{},"n":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"`":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"`":{"docs":{},"和":{"docs":{},"`":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"新":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"(":{"docs":{},"r":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"且":{"docs":{},"满":{"docs":{},"足":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"…":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"时":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"和":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"整":{"docs":{},"为":{"docs":{},"新":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"将":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"与":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"(":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{},"r":{"2":{"docs":{},"…":{"docs":{},".":{"docs":{},"r":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"，":{"2":{"docs":{},"，":{"3":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"同":{"docs":{},"时":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"并":{"docs":{},"且":{"docs":{},"买":{"docs":{},"入":{"2":{"docs":{},"的":{"docs":{},"价":{"docs":{},"格":{"docs":{},"。":{"docs":{},"但":{"docs":{},"这":{"docs":{},"样":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"第":{"docs":{},"二":{"docs":{},"天":{"docs":{},"可":{"docs":{},"以":{"docs":{},"没":{"docs":{},"有":{"docs":{},"交":{"docs":{},"易":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"计":{"docs":{},"算":{"docs":{},"了":{"docs":{},"下":{"docs":{},"可":{"docs":{},"得":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}},"docs":{},"f":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{},"的":{"docs":{},"左":{"docs":{},"侧":{"docs":{},"，":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"开":{"docs":{},"始":{"docs":{},"移":{"docs":{},"动":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"当":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}},"`":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}},"则":{"docs":{},"在":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"最":{"docs":{},"前":{"docs":{},"方":{"docs":{},"添":{"docs":{},"加":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"docs":{}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"过":{"docs":{},"程":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},",":{"0":{"docs":{},"^":{"1":{"docs":{},"^":{"1":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}},"docs":{}}},"docs":{}}},"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.02909090909090909},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.05},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.05714285714285714},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"n":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},")":{"docs":{},",":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}},"r":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"不":{"docs":{},"断":{"docs":{},"重":{"docs":{},"复":{"docs":{},"此":{"docs":{},"过":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.021897810218978103},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.014545454545454545},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.010362694300518135}},"/":{"docs":{},"/":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"高":{"docs":{},"度":{"docs":{},"至":{"docs":{},"少":{"docs":{},"为":{"1":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}},"docs":{}}}}}}}}}}}}}}},"行":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"知":{"docs":{},"道":{"docs":{},"n":{"docs":{},"行":{"docs":{},"的":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}},"]":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0410958904109589},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.017391304347826087},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},")":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},",":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"持":{"docs":{},"股":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01107011070110701}},",":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"，":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"docs":{},"n":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078}},"]":{"docs":{},",":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"2":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"docs":{}}}}}}}},",":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}},"和":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"）":{"docs":{},"。":{"docs":{},"该":{"docs":{},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"中":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"决":{"docs":{"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705}}}},"破":{"docs":{},"解":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"程序员面试金典/递归与动态规划/硬币.html":{"ref":"程序员面试金典/递归与动态规划/硬币.html","tf":0.3333333333333333}}}}}}},"不":{"docs":{},"能":{"docs":{},"由":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"/":{"docs":{},"(":{"docs":{},"n":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}},"n":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.02252252252252252}}}},"：":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"出":{"docs":{},"发":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}},"。":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"假":{"docs":{},"如":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"将":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}},"&":{"docs":{},"预":{"docs":{},"算":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}},"(":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"减":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"位":{"docs":{},"的":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}},"从":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"`":{"docs":{},"就":{"docs":{},"会":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}},"都":{"docs":{},"会":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}},"=":{"docs":{},">":{"0":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"可":{"docs":{},"以":{"docs":{},"连":{"docs":{},"上":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}},"2":{"docs":{},",":{"docs":{},"那":{"docs":{},"当":{"docs":{},"前":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}},"docs":{}}},"、":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},"趟":{"docs":{},"直":{"docs":{},"接":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"得":{"docs":{},"到":{"docs":{},"有":{"docs":{},"序":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"算":{"docs":{},"法":{"docs":{},"描":{"docs":{},"述":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"有":{"docs":{},"序":{"docs":{},"化":{"docs":{},"了":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"2":{"0":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"1":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"2":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"3":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.054945054945054944},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"+":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}},",":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}},"docs":{}}}}}}},"和":{"docs":{},"新":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"(":{"docs":{},"r":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}},";":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"不":{"docs":{},"用":{"docs":{},"缓":{"docs":{},"存":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},"”":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"不":{"docs":{},"好":{"docs":{},"思":{"docs":{},"考":{"docs":{},"，":{"docs":{},"就":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"」":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"需":{"docs":{},"要":{"docs":{},"什":{"docs":{},"么":{"docs":{},"样":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"再":{"docs":{},"接":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"；":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}},"、":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"3":{"1":{"docs":{},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0392156862745098}}}},"2":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}},"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":5},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.03076923076923077},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}},",":{"docs":{},"计":{"docs":{},"算":{"docs":{},"每":{"docs":{},"个":{"docs":{},"小":{"docs":{},"c":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"。":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"”":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"等":{"docs":{},"价":{"docs":{},"的":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"）":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"能":{"docs":{},"从":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"从":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"」":{"docs":{},"方":{"docs":{},"程":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"设":{"docs":{},"置":{"docs":{},"一":{"docs":{},"行":{"docs":{},"、":{"docs":{},"一":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"「":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"」":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"一":{"docs":{},"些":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"的":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"幂":{"docs":{"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"?":{"docs":{},"h":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988}}},"最":{"docs":{},"小":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"一":{"docs":{},"直":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"只":{"docs":{},"剩":{"docs":{},"下":{"4":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"那":{"docs":{},"里":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"也":{"docs":{},"要":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"后":{"docs":{},"面":{"docs":{},"一":{"docs":{},"直":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"几":{"docs":{},"次":{"docs":{},"都":{"docs":{},"是":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}},"那":{"docs":{},"从":{"docs":{},"第":{"4":{"docs":{},"次":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"6":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"都":{"docs":{},"一":{"docs":{},"直":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},";":{"docs":{"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.05405405405405406}}},"、":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"4":{"0":{"0":{"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.02857142857142857}},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},"]":{"docs":{"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}},"、":{"docs":{},"希":{"docs":{},"尔":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"5":{"0":{"0":{"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"]":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"又":{"docs":{},"来":{"docs":{},"了":{"docs":{},"个":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"、":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},"6":{"5":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"6":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.0189873417721519}}},"docs":{},"：":{"docs":{},"（":{"docs":{},"根":{"docs":{},"据":{"docs":{},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"c":{"docs":{},"p":{"3":{"docs":{},"/":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}},"docs":{}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},"、":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"7":{"2":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}},"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}},"k":{"7":{"docs":{},"u":{"docs":{},"/":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}},"docs":{}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},"、":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}},"8":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},"、":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},";":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}},"9":{"0":{"0":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}},"docs":{},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"7":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}},"8":{"7":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815}}},"docs":{}},"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903}},"]":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}},"/":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}},"g":{"docs":{},",":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}},"+":{"docs":{},"/":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563}}},",":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"3":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"4":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}},"、":{"docs":{},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"docs":{},"c":{"2":{"docs":{},"s":{"docs":{},"l":{"docs":{},"/":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}},"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.06451612903225806},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.05319148936170213}},"d":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}},"n":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.09375}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.037037037037037035},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},"e":{"docs":{},";":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}},"s":{"docs":{},")":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}},"'":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}},"s":{"1":{"docs":{},",":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}},"docs":{}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},"t":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.031496062992125984},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.061224489795918366},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.07804878048780488},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0380952380952381},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.0199203187250996},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.03546099290780142},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.08333333333333333},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0392156862745098}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"常":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"。":{"docs":{},"将":{"docs":{},"已":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"合":{"docs":{},"并":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"完":{"docs":{},"全":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"；":{"docs":{},"即":{"docs":{},"先":{"docs":{},"使":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"序":{"docs":{},"，":{"docs":{},"再":{"docs":{},"使":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"段":{"docs":{},"间":{"docs":{},"有":{"docs":{},"序":{"docs":{},"。":{"docs":{},"若":{"docs":{},"将":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"合":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"表":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"2":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.0379746835443038},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"y":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401}},"(":{"docs":{},"n":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05}}}}}},";":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}},"+":{"docs":{},"+":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}},"e":{"docs":{},"r":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}},"l":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}},"u":{"docs":{},"m":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}},";":{"docs":{},"减":{"docs":{},"少":{"docs":{},"空":{"docs":{},"间":{"docs":{},"消":{"docs":{},"耗":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},":":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}},"l":{"docs":{},"l":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}},"c":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"s":{"docs":{},"e":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.05660377358490566}}}},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}},"r":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}},"r":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726}}}}}}}}}},"a":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"r":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}},"u":{"docs":{},"o":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"a":{"docs":{},"n":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},"e":{"docs":{},"(":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}}}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}},"r":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"3":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}},"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"s":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}},"i":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}},"o":{"docs":{},"n":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}}},"t":{"1":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}},"2":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}},"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.07246376811594203}},"+":{"docs":{},"+":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}}}}},"e":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}},")":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617}}},",":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}},"d":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}},"e":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}}}},"f":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02}}}}}}}}}},"v":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}},"[":{"0":{"docs":{},"]":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}},"docs":{}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}},"docs":{}}}}}}}},"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.02214022140221402},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353}},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}},"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{},"j":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}},"m":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385}},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078}}}}}}},"j":{"docs":{},"]":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}},"”":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"解":{"docs":{},"法":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"(":{"docs":{},"m":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},",":{"docs":{},"n":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},")":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},"表":{"docs":{},"示":{"docs":{},"：":{"docs":{},"s":{"1":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}},"r":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}},"f":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.10526315789473684},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818}},",":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}}},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}}},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332}}}}}}},"o":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.045454545454545456}}}}}}}}}}}}}}},"s":{"docs":{},",":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}}}}},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"x":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},"y":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},"u":{"docs":{},"o":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"m":{"docs":{},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}}}}}}}}}},"e":{"2":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}},"docs":{},"s":{"6":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":5}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"底":{"docs":{},"层":{"docs":{},"原":{"docs":{},"理":{"docs":{},"模":{"docs":{},"拟":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}},"p":{"docs":{},"/":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}},"p":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}},"，":{"docs":{},"不":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"文":{"docs":{},"本":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"给":{"docs":{},"此":{"docs":{},"分":{"docs":{},"组":{"docs":{},"分":{"docs":{},"配":{"docs":{},"组":{"docs":{},"号":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"2":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}},"docs":{}}}}}}}}}}}},"：":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.025210084033613446}}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"/":{"8":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}}}}},"docs":{}}}}},"n":{"docs":{},"d":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.058823529411764705},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353}},";":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353}}}}}}}},";":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353}},";":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}},"f":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.054945054945054944},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.024390243902439025}},"i":{"docs":{},"z":{"docs":{},"z":{"docs":{},"b":{"docs":{},"u":{"docs":{},"z":{"docs":{},"z":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":10.117647058823529}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.03529411764705882},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.04}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.04878048780487805}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667}},";":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"后":{"docs":{},"续":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"就":{"docs":{},"让":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"一":{"docs":{},"起":{"docs":{},"往":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"了":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"c":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"q":{"docs":{},"(":{"docs":{},"n":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.03896103896103896},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.03636363636363636},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.029197080291970802},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.024390243902439025},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.03636363636363636},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.07272727272727272},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.03296703296703297},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.04},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.030303030303030304},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.024793388429752067},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.018018018018018018},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.056818181818181816},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.023622047244094488},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.022727272727272728},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.02181818181818182},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.031496062992125984},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.0189873417721519},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.029411764705882353},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01593625498007968},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.043478260869565216},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.022123893805309734},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.058823529411764705},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.045454545454545456},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.043478260869565216},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.06451612903225806},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.03773584905660377},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.022452504317789293},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.05405405405405406}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035}}}},"docs":{},")":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.09375},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}},",":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01845018450184502}}}}}}},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.025974025974025976}}}}}}}}},"s":{"docs":{},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}},"o":{"docs":{},"p":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}},"x":{"docs":{},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}},"h":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}},"a":{"docs":{},",":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}},"l":{"1":{"docs":{},",":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}},"docs":{}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}},"docs":{}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.025974025974025976},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.05405405405405406}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}},"a":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"l":{"docs":{},"s":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.024390243902439025},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}},"e":{"docs":{},";":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.015384615384615385},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}},")":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0392156862745098}}},"。":{"docs":{},"整":{"docs":{},"个":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"下":{"docs":{},"来":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"失":{"docs":{},"败":{"docs":{},"一":{"docs":{},"次":{"docs":{},"或":{"docs":{},"者":{"docs":{},"没":{"docs":{},"有":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"其":{"docs":{},"次":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"两":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}},"e":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"n":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}}}}}}}}}},"g":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"e":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}}}}}}}},"u":{"docs":{},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}},"a":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"/":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}},")":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"docs":{},"i":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},",":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.03409090909090909}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}},"1":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}},"docs":{}}}}}}}}},"o":{"docs":{},"u":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"n":{"docs":{},"g":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}},"a":{"docs":{},"p":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"j":{"docs":{},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"u":{"1":{"2":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"e":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"u":{"1":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"/":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{},"i":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927}}}}}}},"h":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}},"m":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.025974025974025976},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.02390438247011952},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.03333333333333333},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.034482758620689655}},",":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}},";":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}},",":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}},";":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}}}}}}},";":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988}}},"a":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}},"]":{"docs":{},";":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}},",":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.03296703296703297}}}},"b":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}},")":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}},",":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}},"]":{"docs":{},";":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}},";":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}}}},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}},"e":{"docs":{},")":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.020833333333333332}}}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0069084628670120895}}}}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.02181818181818182}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},",":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.03409090909090909}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.08571428571428572}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}},";":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}},"r":{"docs":{},"e":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}},".":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"h":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}}},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}}}}},"o":{"docs":{},"d":{"docs":{},"d":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}}}}}}},"u":{"docs":{},"a":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}},"i":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":5.017857142857143}},"i":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":5.010416666666667}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}}},"t":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.10526315789473684},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.08854166666666667},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.04},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.01327433628318584},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.045454545454545456},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.16666666666666666}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"docs":{}}}}}}},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}},")":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}},")":{"docs":{"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}}}},"+":{"docs":{},"+":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}},";":{"docs":{"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}},";":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}},"{":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}},"a":{"docs":{},"l":{"docs":{},"=":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545}}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.02181818181818182}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}},"docs":{}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}},"p":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":3.3809523809523805}},"d":{"docs":{},"i":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}},"f":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}},"i":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}},"!":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}},"+":{"1":{"docs":{},";":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}},"。":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}},"docs":{},"+":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}},"=":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"=":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},";":{"docs":{},"i":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.025974025974025976},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"1":{"docs":{},";":{"docs":{},"i":{"0":{"docs":{},")":{"docs":{},"{":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}},"docs":{}}}},"docs":{},"x":{"1":{"docs":{},";":{"docs":{},"i":{"docs":{},">":{"5":{"docs":{},"]":{"docs":{},"|":{"docs":{},"=":{"1":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},",":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.020833333333333332},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.04285714285714286},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"这":{"docs":{},"里":{"docs":{},"把":{"docs":{},"对":{"docs":{},"应":{"docs":{},"值":{"docs":{},"位":{"docs":{},"置":{"docs":{},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"。":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"k":{"docs":{},"u":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}},"(":{"docs":{},"s":{"docs":{},",":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513}}}}}}}},"a":{"docs":{},"f":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0392156862745098}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.030303030303030304}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"e":{"docs":{},"q":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.02142857142857143}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}}}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}},")":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"_":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}}}}}}}}}}}}},".":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333}}}}}}}},";":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01090909090909091}}}}}}}}},")":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.015625},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}},"o":{"docs":{},"h":{"docs":{},"j":{"docs":{},"/":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.04285714285714286}}}}}}},"s":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"c":{"docs":{},"]":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}}}}}}}}}}}}}}}},"j":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.044444444444444446},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.04878048780487805},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.012727272727272728},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.03409090909090909},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.04285714285714286},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.05084745762711865}},"s":{"3":{"1":{"2":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"docs":{}},"docs":{}},"docs":{},"。":{"docs":{},"源":{"docs":{},"码":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"对":{"docs":{},"应":{"docs":{},"目":{"docs":{},"录":{"docs":{},"的":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}},"有":{"docs":{},"个":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"翻":{"docs":{},"转":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}}}}}}}},"u":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}}}}}}}}},"e":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}},"i":{"docs":{},"e":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}},"a":{"docs":{},"n":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}},"n":{"docs":{},"g":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333}}}}}}}},")":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},")":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"]":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}},"=":{"0":{"docs":{},",":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},"。":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}}}}},"docs":{}}}}},"docs":{}},",":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.04285714285714286}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"k":{"docs":{"./":{"ref":"./","tf":0.014925373134328358},"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"ref":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","tf":3.333333333333333},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":3.348958333333333},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":3.373333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},")":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}},"u":{"docs":{},"o":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}},"，":{"docs":{},"本":{"docs":{},"质":{"docs":{},"一":{"docs":{},"样":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}},"d":{"docs":{},"o":{"7":{"docs":{},"j":{"docs":{},"/":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}},"docs":{}}},"t":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},"j":{"docs":{},"i":{"docs":{},"e":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}},"l":{"1":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}},";":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},")":{"docs":{},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}}}}}},"2":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}},")":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}},"{":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}},";":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},")":{"docs":{},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}}}}}},"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.03636363636363636},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"1":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122}}},"2":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122}},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}},"docs":{}}}}}}}}},"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.05454545454545454},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01845018450184502},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.03305785123966942},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.02654867256637168},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.023622047244094488},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.015544041450777202}},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144}}},"2":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144}},")":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.022857142857142857}}}},"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}}}}}}}}}}},")":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705}},")":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}}}}}}}}}},",":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},")":{"docs":{},"+":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"b":{"docs":{},")":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"交":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}},")":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}},"b":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.03296703296703297}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"f":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0410958904109589}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.05555555555555555},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.061224489795918366},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.08620689655172414}},")":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.034482758620689655}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888}}}}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}},";":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}}}},";":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888}}},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}},";":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}},",":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"i":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"n":{"docs":{},"k":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}},".":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}},"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}},"f":{"docs":{},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}},"s":{"docs":{},"）":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"算":{"docs":{},"法":{"docs":{},"描":{"docs":{},"述":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"1":{"4":{"1":{"9":{"docs":{},"/":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"e":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}},"a":{"docs":{},"n":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"g":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"docs":{}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}},"docs":{}}}}}}}}}}}},"：":{"docs":{},"上":{"docs":{},"次":{"docs":{},"运":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.015625},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},")":{"docs":{},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.03296703296703297}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}},"w":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}},"u":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}},"h":{"docs":{},"u":{"docs":{},"i":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}},"a":{"docs":{},"n":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}},"d":{"docs":{},"f":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}},"i":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}},"h":{"docs":{},"z":{"9":{"6":{"0":{"9":{"0":{"4":{"docs":{},"/":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.020618556701030927}}}}}},"n":{"1":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"2":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},")":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}}},"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.025974025974025976},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":3.356862745098039},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.0989010989010989},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.018018018018018018},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.022727272727272728},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.05263157894736842},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.032520325203252036},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.0625},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.031914893617021274},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"p":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"e":{"docs":{},"w":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.025210084033613446},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01818181818181818},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.1},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.04081632653061224},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.024390243902439025},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}},";":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}},")":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.11428571428571428}}}}}}}}},"e":{"docs":{},"d":{"docs":{"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05}},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.04878048780487805}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}}}}}}}}},"u":{"docs":{},"m":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}}}}}}}},"2":{"docs":{},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}}}}}}}},"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.018018018018018018},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.04395604395604396},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.014545454545454545},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}},"s":{"1":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0273972602739726}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}}}}}}}}}},"[":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}},"n":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0273972602739726}}}}},"2":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},",":{"1":{"docs":{},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},",":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}},"[":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}},"n":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.020833333333333332},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}},";":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.024793388429752067},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"i":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},",":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}},";":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}},"docs":{},"i":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}},"]":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}},";":{"docs":{},",":{"docs":{},"a":{"docs":{},"[":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"a":{"docs":{},"[":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"]":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}}}}}}},"+":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}}},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"两":{"docs":{},"端":{"docs":{},"，":{"docs":{},"数":{"docs":{},"字":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}},"，":{"docs":{},"再":{"docs":{},"使":{"docs":{},"用":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}},"−":{"1":{"docs":{},"]":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"结":{"docs":{},"果":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"跳":{"docs":{},"过":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"j":{"docs":{},"]":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"题":{"docs":{},"目":{"docs":{},"给":{"docs":{},"出":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"！":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"]":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}},"l":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}},"docs":{}},"]":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}},"r":{"docs":{},"]":{"docs":{},"，":{"docs":{},"计":{"docs":{},"算":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}},"−":{"1":{"docs":{},"]":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}},"docs":{}},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},")":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}},";":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.013513513513513514}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}}}}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}}},"w":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}},"docs":{}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},")":{"docs":{},":":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"l":{"docs":{},"l":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0392156862745098},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02666666666666667},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},";":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.05454545454545454},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}},")":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.036585365853658534},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0784313725490196},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.0199203187250996},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02666666666666667},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.04285714285714286},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.028368794326241134}},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}},",":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}},"这":{"docs":{},"一":{"docs":{},"句":{"docs":{},"，":{"docs":{},"我":{"docs":{},"想":{"docs":{},"不":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"置":{"docs":{},"成":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"了":{"docs":{},"吗":{"docs":{},"，":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"会":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"都":{"docs":{},"置":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"。":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}},"2":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}},"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.03636363636363636},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},".":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018}},";":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"!":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}},"v":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}},";":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334}}}},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}},"/":{"docs":{},"/":{"docs":{},"哑":{"docs":{},"结":{"docs":{},"点":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}},")":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}},"]":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}},";":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"到":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}}}},"x":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},"y":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},"l":{"docs":{},"g":{"docs":{},"n":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744}}}}},",":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"直":{"docs":{},"接":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"可":{"docs":{},"经":{"docs":{},"过":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}},"docs":{},"n":{"docs":{},"k":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}},",":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"递":{"docs":{},"归":{"docs":{},"栈":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{},"l":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.07142857142857142}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}},"b":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988}},"j":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},";":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}},"c":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988}},"c":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}},";":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}},"d":{"docs":{},"d":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.058823529411764705},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353}},";":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144}}}}}}}}}}}}}}}}},"p":{"1":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.029411764705882353},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.054945054945054944}},",":{"docs":{},"p":{"2":{"docs":{},"两":{"docs":{},"个":{"docs":{},"游":{"docs":{},"标":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"每":{"docs":{},"次":{"docs":{},"两":{"docs":{},"步":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"环":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"早":{"docs":{},"晚":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"p":{"1":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"p":{"2":{"docs":{},"走":{"docs":{},"到":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}},";":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}}}}}}}},"2":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.029411764705882353},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.054945054945054944}},")":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}},")":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}}}}}}},";":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}},"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.0625},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02666666666666667},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}},"o":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}},"w":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"d":{"docs":{},">":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"e":{"docs":{},"r":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.04}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}},")":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.02926829268292683}}}}},"p":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"a":{"docs":{},"t":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},";":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.0851063829787234},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}},"s":{"docs":{},")":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},")":{"docs":{},";":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.014760147601476014}}}},"：":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"股":{"docs":{},"，":{"docs":{},"就":{"docs":{},"在":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01845018450184502}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},"e":{"docs":{},":":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421}}}}}}}},"e":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.06},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.057971014492753624}},"v":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01593625498007968}},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025}},"s":{"docs":{},";":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025}}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948}}}}}}}},")":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}},";":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}},"，":{"docs":{},"该":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"向":{"docs":{},"真":{"docs":{},"正":{"docs":{},"的":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"预":{"docs":{},"先":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"在":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"时":{"docs":{},"无":{"docs":{},"可":{"docs":{},"用":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"链":{"docs":{},"表":{"docs":{},"构":{"docs":{},"造":{"docs":{},"过":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"针":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"进":{"docs":{},"而":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332}},")":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"上":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"算":{"docs":{},"法":{"docs":{},"描":{"docs":{},"述":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"即":{"docs":{},"只":{"docs":{},"需":{"docs":{},"用":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"）":{"docs":{},"，":{"docs":{},"因":{"docs":{},"而":{"docs":{},"在":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"反":{"docs":{},"复":{"docs":{},"把":{"docs":{},"已":{"docs":{},"排":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"向":{"docs":{},"后":{"docs":{},"挪":{"docs":{},"位":{"docs":{},"，":{"docs":{},"为":{"docs":{},"最":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"提":{"docs":{},"供":{"docs":{},"插":{"docs":{},"入":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}},"docs":{}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}}}}}}}}}},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"_":{"1":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}},"2":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}},"3":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}},"4":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}},"docs":{}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0425531914893617}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.03296703296703297}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}}}}}}}}}}},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}},"i":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}},"a":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.020618556701030927}}}}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01090909090909091}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.02181818181818182}},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.03125},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},":":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}},"t":{"docs":{},"r":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02666666666666667}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}},")":{"docs":{"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}},",":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.05154639175257732}}}},"s":{"1":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}},".":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}},",":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927}}}}},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}},"2":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.04},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}},")":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078}}}}}}}},"docs":{}},"，":{"docs":{},"则":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"由":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}},"l":{"docs":{},"a":{"docs":{},"/":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}},"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.07547169811320754},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.06666666666666667},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"t":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125}}}}}}}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}},";":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}},",":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198}}}}}},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"置":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}},"删":{"docs":{},"除":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},";":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}}}}}}}}}},"v":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}},")":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.022857142857142857}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"5":{"2":{"docs":{},"/":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}},"docs":{}},"docs":{}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905}}}}},"i":{"docs":{},"d":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}},",":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}},";":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"提":{"docs":{},"出":{"docs":{},"的":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.043478260869565216},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.10526315789473684},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":5.048780487804878}}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571}}}},"docs":{}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"3":{"2":{"docs":{},",":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"b":{"docs":{},"(":{"docs":{},"?":{"docs":{},"=":{"docs":{},"(":{"docs":{},"?":{"docs":{},":":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"3":{"docs":{},"}":{"docs":{},")":{"docs":{},"+":{"docs":{},"\\":{"docs":{},"b":{"docs":{},")":{"docs":{},"/":{"docs":{},"g":{"docs":{},",":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}},"docs":{}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"docs":{}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"z":{"docs":{},"i":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812}},"e":{"docs":{},";":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}},"e":{"docs":{},"p":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"o":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"p":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.03305785123966942},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},")":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}},",":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.06818181818181818}}}}},"c":{"docs":{},"k":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224}}}}},"o":{"docs":{},"f":{"docs":{},"p":{"docs":{},"l":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.05357142857142857}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.04878048780487805}}}}}}},"i":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"g":{"docs":{},"n":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.04081632653061224}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}},",":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}},";":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248}}},">":{"0":{"docs":{},")":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}},"docs":{}},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"[":{"docs":{},"^":{"docs":{},"a":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}},"docs":{}}}},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248}}}}}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0392156862745098}}}},"docs":{}}}}}}}},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}},"docs":{}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}},"n":{"docs":{},"]":{"docs":{},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"m":{"docs":{},",":{"docs":{},"n":{"docs":{},")":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}},")":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.03773584905660377}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"v":{"docs":{},"e":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}},"n":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}},"a":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"就":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.01327433628318584}},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}},"o":{"docs":{},"p":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"直":{"docs":{},"观":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"：":{"docs":{},"首":{"docs":{},"先":{"docs":{},"在":{"docs":{},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"小":{"docs":{},"（":{"docs":{},"大":{"docs":{},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"存":{"docs":{},"放":{"docs":{},"到":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"从":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"继":{"docs":{},"续":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"最":{"docs":{},"小":{"docs":{},"（":{"docs":{},"大":{"docs":{},"）":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"放":{"docs":{},"到":{"docs":{},"已":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"以":{"docs":{},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"排":{"docs":{},"序":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"：":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"服":{"docs":{},"从":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"到":{"docs":{},"有":{"docs":{},"限":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"里":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"再":{"docs":{},"分":{"docs":{},"别":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"再":{"docs":{},"使":{"docs":{},"用":{"docs":{},"别":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"或":{"docs":{},"是":{"docs":{},"以":{"docs":{},"递":{"docs":{},"归":{"docs":{},"方":{"docs":{},"式":{"docs":{},"继":{"docs":{},"续":{"docs":{},"使":{"docs":{},"用":{"docs":{},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"）":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.017271157167530225}},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"描":{"docs":{},"述":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"直":{"docs":{},"观":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"建":{"docs":{},"有":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"未":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"在":{"docs":{},"已":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"位":{"docs":{},"置":{"docs":{},"并":{"docs":{},"插":{"docs":{},"入":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.018018018018018018},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}},"/":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}},":":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}}}}}}}}}}},"u":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"m":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.01818181818181818},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"为":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}},")":{"docs":{"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.05357142857142857}}}},"c":{"docs":{},"h":{"docs":{},":":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}},"a":{"docs":{},"n":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"z":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}},"o":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}},"(":{"0":{"docs":{},")":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}},"docs":{},"i":{"docs":{},")":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}},"为":{"docs":{},"以":{"docs":{},"第":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}}}}}},"h":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},"u":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}},"i":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.08461538461538462},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}},"，":{"docs":{},"则":{"docs":{},"替":{"docs":{},"换":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"若":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}}}}}},"=":{"docs":{},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}},"o":{"docs":{},"w":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334}}}}}}},")":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334}}}}}},"c":{"8":{"8":{"1":{"6":{"docs":{},"/":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}},")":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152}}}}}},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857}}}},":":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266}}},"r":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857}}}}},"t":{"1":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}},"2":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}},")":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.07857142857142857}},";":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}},";":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}}}}}},"8":{"docs":{},"h":{"docs":{},"l":{"docs":{},"/":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.05660377358490566},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.03260869565217391},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},")":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.03260869565217391},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.045454545454545456},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332}},";":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.03296703296703297}},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.03125}}}}}}}}}},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}}},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}},"x":{"docs":{},"t":{"1":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.03076923076923077}}}}}},"2":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},")":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385}},"时":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"看":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"分":{"docs":{},"别":{"docs":{},"单":{"docs":{},"独":{"docs":{},"往":{"docs":{},"回":{"docs":{},"撤":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"对":{"docs":{},"比":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"获":{"docs":{},"取":{"docs":{},"两":{"docs":{},"者":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"有":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"明":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}},"docs":{}}}},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.025210084033613446}}}},"e":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}},"u":{"docs":{},"m":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}},";":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}},"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.01327433628318584}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}},"c":{"docs":{},"k":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.018292682926829267},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.03333333333333333},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01593625498007968},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}},";":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.015384615384615385},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}},")":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}},"：":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}},"i":{"docs":{},"f":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}},"。":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"，":{"docs":{},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"环":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"节":{"docs":{},"点":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"2":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125}}}}}},"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}},"x":{"docs":{},")":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988}}}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}},"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}}}},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.03409090909090909}}}}}}},")":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.05660377358490566},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025}},";":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}}}}},"n":{"docs":{},"g":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":5.019607843137255}}}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}}}}}}}}}},"x":{"1":{"docs":{},",":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}},"2":{"docs":{},",":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}},"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}},"g":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"n":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},")":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}},";":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}},",":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}},"一":{"docs":{},"次":{"docs":{},"编":{"docs":{},"辑":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":10.005714285714285}}}}},"提":{"docs":{},"交":{"docs":{},"，":{"docs":{},"又":{"docs":{},"超":{"docs":{},"时":{"docs":{},"了":{"docs":{},"，":{"docs":{},"好":{"docs":{},"像":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"算":{"docs":{},"法":{"docs":{},"在":{"docs":{},"中":{"docs":{},"级":{"docs":{},"里":{"docs":{},"面":{"docs":{},"总":{"docs":{},"是":{"docs":{},"不":{"docs":{},"通":{"docs":{},"过":{"docs":{},"。":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"每":{"docs":{},"一":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"并":{"docs":{},"递":{"docs":{},"归":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"都":{"docs":{},"采":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"定":{"docs":{},"包":{"docs":{},"含":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}},"致":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"去":{"docs":{},"找":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}},"开":{"docs":{},"始":{"docs":{},"写":{"docs":{},"错":{"docs":{},"了":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"这":{"docs":{},"步":{"docs":{},"，":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"负":{"docs":{},"数":{"docs":{"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}}}}}}}}}}}}}}}}}},"三":{"docs":{},"合":{"docs":{},"一":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":10.020408163265307}}}},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":10.008849557522124}}}}},"步":{"docs":{},"问":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":10.035714285714286}}}}}},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/下一个数.html":{"ref":"程序员面试金典/位操作/下一个数.html","tf":11}}}}},"面":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"设":{"docs":{},"置":{"docs":{},"和":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"均":{"docs":{},"写":{"docs":{},"在":{"docs":{},"代":{"docs":{},"码":{"docs":{},"注":{"docs":{},"释":{"docs":{},"中":{"docs":{},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"路":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"到":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}}},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"j":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"以":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"想":{"docs":{},"写":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"不":{"docs":{},"难":{"docs":{},"，":{"docs":{},"但":{"docs":{},"费":{"docs":{},"时":{"docs":{},"间":{"docs":{},"理":{"docs":{},"解":{"docs":{},"题":{"docs":{},"意":{"docs":{},"。":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"理":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"交":{"docs":{},"集":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":10.018518518518519}}}}}}},"游":{"docs":{},"标":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"。":{"docs":{},"都":{"docs":{},"指":{"docs":{},"向":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}}}},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":10.016129032258064}}}},"相":{"docs":{},"加":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":10.007407407407408}}},"除":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"整":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"条":{"docs":{},"链":{"docs":{},"表":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"一":{"docs":{},"样":{"docs":{},"长":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"都":{"docs":{},"走":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}},"个":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":3.3385416666666665}}}}}},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":3.333333333333333},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":3.3466666666666662}}}},"高":{"docs":{},"频":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"字":{"docs":{},"符":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}},"节":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"台":{"docs":{},"阶":{"docs":{},"上":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"果":{"docs":{},"用":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"停":{"docs":{},"留":{"docs":{},"在":{"docs":{},"第":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}}}},"的":{"docs":{},"走":{"docs":{},"法":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"上":{"docs":{},"到":{"docs":{},"第":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}},"值":{"docs":{},"：":{"0":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"docs":{}}},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"状":{"docs":{},"态":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"我":{"docs":{},"个":{"docs":{},"人":{"docs":{},"认":{"docs":{},"为":{"docs":{},"更":{"docs":{},"加":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"数":{"docs":{},"为":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"。":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}}}}}}}}},"皇":{"docs":{},"后":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"只":{"docs":{},"用":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{},"：":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"置":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":10.015625}}}}}}},"：":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"，":{"docs":{},"即":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"后":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"若":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"级":{"docs":{},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"的":{"docs":{},"头":{"docs":{},"有":{"docs":{},"点":{"docs":{},"疼":{"docs":{},"了":{"docs":{},"，":{"docs":{},"题":{"docs":{},"解":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}},"的":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}},"所":{"docs":{},"有":{"docs":{},"相":{"docs":{},"加":{"docs":{},"等":{"docs":{},"于":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"找":{"docs":{},"到":{"docs":{},"小":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"，":{"docs":{},"往":{"docs":{},"下":{"docs":{},"递":{"docs":{},"归":{"docs":{},"相":{"docs":{},"加":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}}}}}}}}}}}}},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"直":{"docs":{},"接":{"docs":{},"放":{"docs":{},"到":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}}}}}}},"买":{"docs":{},"卖":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"机":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":10.00369003690037}}}}}}}}}},"股":{"docs":{},"票":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"机":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":10},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"期":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"众":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":10.012658227848101}}}}},"第":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"ref":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","tf":3.333333333333333}},"k":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"ref":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","tf":0.5}}}}}}}}},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":10.008928571428571}}}},"最":{"docs":{},"小":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"差":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":10.02}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"坡":{"docs":{},"度":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉树的坡度.html":{"ref":"easy/Tree/二叉树的坡度.html","tf":10.5}}}},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":10.01388888888889}}}}}},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"与":{"docs":{},"反":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":10.00709219858156}}}}}},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":10.013698630136986}}}}},"小":{"docs":{},"深":{"docs":{},"度":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":10.019607843137255}}}}}},"直":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":10.018181818181818}}}},"锯":{"docs":{},"齿":{"docs":{},"形":{"docs":{},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":10.020408163265307}}}}}}}}}}}},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":10.026315789473685}}}}}}}}},"分":{"docs":{},"法":{"docs":{"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}},"递":{"docs":{},"归":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"从":{"docs":{},"前":{"docs":{},"序":{"docs":{},"与":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"构":{"docs":{},"造":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":10.003636363636364}}}}}}}}}}}}}}}},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/从叶结点开始的最小字符串.html":{"ref":"程序员面试金典/树与图/从叶结点开始的最小字符串.html","tf":10.5}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"天":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"都":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"了":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"在":{"docs":{},"只":{"docs":{},"发":{"docs":{},"生":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"持":{"docs":{},"有":{"docs":{},"这":{"docs":{},"支":{"docs":{},"股":{"docs":{},"票":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"我":{"docs":{},"们":{"docs":{},"获":{"docs":{},"得":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"剩":{"docs":{},"下":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}},"不":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"里":{"docs":{},"把":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"挑":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"务":{"docs":{},"调":{"docs":{},"度":{"docs":{},"器":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}},"位":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"easy/Other/位1的个数.html":{"ref":"easy/Other/位1的个数.html","tf":0.5}}}}}},"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/位1的个数.html":{"ref":"easy/Other/位1的个数.html","tf":3.333333333333333},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}},"操":{"docs":{},"作":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"运":{"docs":{},"算":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}},"上":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"变":{"docs":{},"成":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266}}}},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"里":{"docs":{},"只":{"docs":{},"有":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}},"的":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}}}},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"，":{"docs":{},"回":{"docs":{},"溯":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903}}}}}}}},"八":{"docs":{},"皇":{"docs":{},"后":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":10.016949152542374}},"问":{"docs":{},"题":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"其":{"docs":{},"他":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}},"相":{"docs":{},"关":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"(":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}},"余":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}},"实":{"docs":{},"是":{"docs":{},"被":{"docs":{},"递":{"docs":{},"归":{"docs":{},"绕":{"docs":{},"进":{"docs":{},"去":{"docs":{},"了":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"会":{"docs":{},"先":{"docs":{},"执":{"docs":{},"行":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"当":{"docs":{},"开":{"docs":{},"始":{"docs":{},"节":{"docs":{},"点":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"3":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"被":{"docs":{},"置":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"等":{"docs":{},"于":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"，":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"法":{"docs":{},"跟":{"docs":{},"之":{"docs":{},"前":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"上":{"docs":{},"面":{"docs":{},"用":{"docs":{},"了":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"已":{"docs":{},"经":{"docs":{},"确":{"docs":{},"定":{"docs":{},"同":{"docs":{},"一":{"docs":{},"行":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"割":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":10.009803921568627}}}}},"数":{"docs":{},"到":{"docs":{},"小":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"治":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}},"智":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"我":{"docs":{},"还":{"docs":{},"没":{"docs":{},"看":{"docs":{},"懂":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"研":{"docs":{},"究":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}},"别":{"docs":{},"没":{"docs":{},"有":{"docs":{},"上":{"docs":{},"项":{"docs":{},"与":{"docs":{},"左":{"docs":{},"项":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"初":{"docs":{},"级":{"docs":{},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"始":{"docs":{},"化":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"一":{"docs":{},"步":{"docs":{},"错":{"docs":{},"，":{"docs":{},"步":{"docs":{},"步":{"docs":{},"错":{"docs":{},"。":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"状":{"docs":{},"态":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"设":{"docs":{},"置":{"docs":{},"对":{"docs":{},"，":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"得":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}},"值":{"docs":{},"，":{"docs":{},"即":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"为":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"]":{"docs":{},"，":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"为":{"docs":{},"空":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"重":{"docs":{},"复":{"docs":{},"项":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":10}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":10.016949152542374}}}}}},"的":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":3.333333333333333}},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}},"的":{"docs":{},"是":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}},"判":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"互":{"docs":{},"为":{"docs":{},"字":{"docs":{},"符":{"docs":{},"重":{"docs":{},"排":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":10.015873015873016}}}}}}}}}}},"断":{"docs":{},"范":{"docs":{},"围":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"不":{"docs":{},"同":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"唯":{"docs":{},"一":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"判":{"docs":{},"断":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"回":{"docs":{},"文":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}},"刷":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"按":{"docs":{},"公":{"docs":{},"司":{"docs":{},"其":{"docs":{},"他":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}},"前":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"面":{"docs":{},"元":{"docs":{},"素":{"docs":{},"里":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}},"缀":{"docs":{},"和":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"知":{"docs":{},"识":{"docs":{},"点":{"docs":{},",":{"docs":{},"d":{"docs":{},"f":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}}}}}}},"加":{"docs":{},"一":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":10.017857142857142}}},"入":{"docs":{},"解":{"docs":{},"集":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},"的":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"，":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}}}}}}}}},"物":{"docs":{},"收":{"docs":{},"容":{"docs":{},"所":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":10.014705882352942}}}}}},"图":{"docs":{},"演":{"docs":{},"示":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.015544041450777202}}}}}},"化":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":5.019607843137255}},"栈":{"docs":{},"为":{"docs":{},"队":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"十":{"docs":{},"大":{"docs":{},"排":{"docs":{},"序":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":10}}}}},"种":{"docs":{},"常":{"docs":{},"见":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"大":{"docs":{},"类":{"docs":{},"：":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"单":{"docs":{},"词":{"docs":{},"搜":{"docs":{},"索":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"反":{"docs":{},"转":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":10.018181818181818}}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":10.012195121951219}}}},"数":{"docs":{},"组":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"向":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}},"填":{"docs":{},"充":{"docs":{},"目":{"docs":{},"标":{"docs":{},"数":{"docs":{},"组":{"docs":{},"：":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"i":{"docs":{},"放":{"docs":{},"在":{"docs":{},"新":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"项":{"docs":{},"，":{"docs":{},"每":{"docs":{},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"将":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"减":{"docs":{},"去":{"1":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":10.024390243902438}}}}}}}}},"有":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"是":{"1":{"0":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"才":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"0":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"但":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"docs":{},"=":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"进":{"docs":{},"位":{"docs":{},"到":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"了":{"docs":{},"，":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"数":{"docs":{},"组":{"docs":{},"一":{"docs":{},"个":{"1":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},",":{"docs":{},"不":{"docs":{},"然":{"docs":{},"走":{"docs":{},"到":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"就":{"docs":{},"又":{"docs":{},"多":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"1":{"docs":{},"。":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}},"左":{"docs":{},"括":{"docs":{},"号":{"docs":{},"有":{"docs":{},"剩":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"它":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"继":{"docs":{},"续":{"docs":{},"做":{"docs":{},"选":{"docs":{},"择":{"docs":{},"（":{"docs":{},"递":{"docs":{},"归":{"docs":{},"）":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"心":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"能":{"docs":{},"交":{"docs":{},"易":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"合":{"docs":{},"并":{"docs":{},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":10.013698630136986}}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":10.018181818181818}}}}}}}},"区":{"docs":{},"间":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"法":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":10.022727272727273}}}}}}}}},"后":{"docs":{},"继":{"docs":{},"者":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":10.047619047619047}}}},"面":{"docs":{},"方":{"docs":{},"案":{"3":{"docs":{},"和":{"4":{"docs":{},"，":{"docs":{},"转":{"docs":{},"置":{"docs":{},"再":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"再":{"docs":{},"转":{"docs":{},"置":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"和":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"交":{"docs":{},"换":{"docs":{},",":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"再":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"一":{"docs":{},"下":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"严":{"docs":{},"格":{"docs":{},"遵":{"docs":{},"守":{"docs":{},"递":{"docs":{},"增":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"着":{"docs":{},"的":{"docs":{},"真":{"docs":{},"相":{"docs":{},"是":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"：":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"，":{"docs":{},"即":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"时":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"续":{"docs":{},"还":{"docs":{},"有":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"看":{"docs":{},"上":{"docs":{},"面":{"docs":{},"链":{"docs":{},"接":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}}}}}}}}}},"再":{"docs":{},"看":{"docs":{},"看":{"docs":{},"题":{"docs":{},"解":{"docs":{},"里":{"docs":{},"的":{"docs":{},"大":{"docs":{},"神":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"解":{"docs":{},"的":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}},"回":{"docs":{},"文":{"docs":{},"排":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":10.00632911392405}}}},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":10.014492753623188},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":10.00398406374502}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}}},"溯":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664}},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},",":{"docs":{},"看":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"纯":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"，":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"情":{"docs":{},"况":{"docs":{},"列":{"docs":{},"举":{"docs":{},"下":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"列":{"docs":{},"举":{"docs":{},"到":{"docs":{},"一":{"docs":{},"半":{"docs":{},"发":{"docs":{},"现":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"了":{"docs":{},"及":{"docs":{},"时":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"把":{"docs":{},"之":{"docs":{},"前":{"docs":{},"做":{"docs":{},"出":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"撤":{"docs":{},"销":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"本":{"docs":{},"题":{"docs":{},"如":{"docs":{},"果":{"docs":{},"列":{"docs":{},"举":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"把":{"docs":{},"之":{"docs":{},"前":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"全":{"docs":{},"部":{"docs":{},"改":{"docs":{},"回":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"法":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"树":{"docs":{},"很":{"docs":{},"大":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}},"模":{"docs":{},"板":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},",":{"docs":{},"不":{"docs":{},"要":{"docs":{},"想":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"置":{"docs":{},"为":{"docs":{},"*":{"docs":{},"等":{"docs":{},"手":{"docs":{},"段":{"docs":{},"，":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"走":{"docs":{},"回":{"docs":{},"头":{"docs":{},"路":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"下":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"头":{"docs":{},"再":{"docs":{},"看":{"docs":{},"看":{"docs":{},"题":{"docs":{},"解":{"docs":{},"里":{"docs":{},"的":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"思":{"docs":{},"路":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"困":{"docs":{},"难":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"在":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"j":{"docs":{},"o":{"docs":{},"h":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"u":{"1":{"2":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"/":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"只":{"docs":{},"针":{"docs":{},"对":{"docs":{},"大":{"docs":{},"于":{"docs":{},"“":{"docs":{},"当":{"docs":{},"前":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"”":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"进":{"docs":{},"行":{"docs":{},"“":{"docs":{},"回":{"docs":{},"文":{"docs":{},"验":{"docs":{},"证":{"docs":{},"”":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"最":{"docs":{},"长":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"只":{"docs":{},"记":{"docs":{},"录":{"docs":{},"“":{"docs":{},"当":{"docs":{},"前":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"”":{"docs":{},"和":{"docs":{},"“":{"docs":{},"子":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"”":{"docs":{},"，":{"docs":{},"不":{"docs":{},"必":{"docs":{},"做":{"docs":{},"截":{"docs":{},"取":{"docs":{},"。":{"docs":{},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"我":{"docs":{},"们":{"docs":{},"放":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"索":{"docs":{},"引":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"呀":{"docs":{},"？":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}},"把":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}},"地":{"docs":{},"址":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":3.3428571428571425}},"只":{"docs":{},"能":{"docs":{},"为":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}},"就":{"docs":{},"已":{"docs":{},"经":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"了":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"提":{"docs":{},"前":{"docs":{},"回":{"docs":{},"溯":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"且":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"了":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"答":{"docs":{},"案":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{},"盘":{"docs":{},"子":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":10.018867924528301}}}},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"好":{"docs":{},"好":{"docs":{},"研":{"docs":{},"究":{"docs":{},"下":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}},"（":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"）":{"docs":{},"是":{"docs":{},"指":{"docs":{},"利":{"docs":{},"用":{"docs":{},"堆":{"docs":{},"这":{"docs":{},"种":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"所":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"近":{"docs":{},"似":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"并":{"docs":{},"同":{"docs":{},"时":{"docs":{},"满":{"docs":{},"足":{"docs":{},"堆":{"docs":{},"积":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"：":{"docs":{},"即":{"docs":{},"子":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"键":{"docs":{},"值":{"docs":{},"或":{"docs":{},"索":{"docs":{},"引":{"docs":{},"总":{"docs":{},"是":{"docs":{},"小":{"docs":{},"于":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"大":{"docs":{},"于":{"docs":{},"）":{"docs":{},"它":{"docs":{},"的":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"整":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"填":{"docs":{},"充":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"节":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html":{"ref":"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html","tf":10.5}}}}}}}}}}}}}}}}}},"复":{"docs":{},"原":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":3.3428571428571425}}},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.014760147601476014}}}}}}}},"外":{"docs":{},"观":{"docs":{},"数":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":10.007299270072993}}}}}},"多":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"奇":{"docs":{},"偶":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":10.014705882352942}}}}}},"子":{"docs":{},"集":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"分":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":10.010309278350515}}}}}}}},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.011194029850746268},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"字":{"docs":{},"符":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":10.024390243902438}}}}}}}}}}},"压":{"docs":{},"缩":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":10.015151515151516}}}},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":10}}}},"字":{"docs":{},"符":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"他":{"docs":{},"，":{"2":{"6":{"docs":{},"个":{"docs":{},"小":{"docs":{},"写":{"docs":{},"英":{"docs":{},"文":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"那":{"docs":{},"可":{"docs":{},"能":{"docs":{},"一":{"docs":{},"开":{"docs":{},"头":{"docs":{},"直":{"docs":{},"接":{"docs":{},"判":{"docs":{},"断":{"docs":{},"如":{"docs":{},"果":{"docs":{},"字":{"docs":{},"符":{"docs":{},"长":{"docs":{},"度":{"docs":{},">":{"2":{"6":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"相":{"docs":{},"乘":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":10.004878048780487}}}},"转":{"docs":{},"换":{"docs":{},"整":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":10.019607843137255}}}}},"数":{"docs":{},"组":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"轮":{"docs":{},"转":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":10.013333333333334}}}},"一":{"docs":{},"个":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"到":{"docs":{},"后":{"docs":{},"边":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"到":{"docs":{},"前":{"docs":{},"面":{"docs":{},"。":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}}}}}}}}}}}}}}}}}},"截":{"docs":{},"取":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"排":{"docs":{},"列":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}},"长":{"docs":{},"度":{"docs":{},"在":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}},"docs":{}}}}},"构":{"docs":{},"建":{"docs":{},"完":{"docs":{},"成":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}},"是":{"docs":{},"否":{"docs":{},"唯":{"docs":{},"一":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":10}}}}}},"集":{"docs":{},"，":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}},"节":{"docs":{},"跳":{"docs":{},"动":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":10.03125}}}}}},"实":{"docs":{},"现":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":5}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}},"对":{"docs":{},"称":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":10.00609756097561}}}}}},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"树":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"停":{"docs":{},"止":{"docs":{},"点":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}},"已":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"修":{"docs":{},"改":{"docs":{},"其":{"docs":{},"值":{"docs":{},"为":{"docs":{},"'":{"docs":{},"/":{"docs":{},"'":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"后":{"docs":{},"要":{"docs":{},"将":{"docs":{},"值":{"docs":{},"改":{"docs":{},"回":{"docs":{},"来":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"有":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"象":{"docs":{},"不":{"docs":{},"算":{"docs":{},"吧":{"docs":{},"(":{"docs":{},"⊙":{"docs":{},"︿":{"docs":{},"⊙":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"利":{"docs":{},"用":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"小":{"docs":{},"范":{"docs":{},"围":{"docs":{},"数":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"）":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"计":{"docs":{},"数":{"docs":{},"累":{"docs":{},"加":{"docs":{},"（":{"docs":{},"从":{"docs":{},"c":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"项":{"docs":{},"和":{"docs":{},"前":{"docs":{},"一":{"docs":{},"项":{"docs":{},"相":{"docs":{},"加":{"docs":{},"）":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"对":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"，":{"docs":{},"从":{"docs":{},"开":{"docs":{},"始":{"docs":{},"第":{"docs":{},"一":{"docs":{},"对":{"docs":{},"到":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"对":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"应":{"docs":{},"该":{"docs":{},"会":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"不":{"docs":{},"是":{"docs":{},"空":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"别":{"docs":{},"采":{"docs":{},"用":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"峰":{"docs":{},"值":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"将":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":10.012987012987013}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"看":{"docs":{},"成":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"进":{"docs":{},"行":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"较":{"docs":{},"短":{"docs":{},"则":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"补":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"好":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"合":{"docs":{},"并":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"序":{"docs":{},"列":{"docs":{},"(":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{},"r":{"2":{"docs":{},"…":{"docs":{},".":{"docs":{},"r":{"docs":{},"n":{"docs":{},")":{"docs":{},"构":{"docs":{},"建":{"docs":{},"成":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"此":{"docs":{},"堆":{"docs":{},"为":{"docs":{},"初":{"docs":{},"始":{"docs":{},"的":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"与":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"r":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"(":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{},"r":{"2":{"docs":{},",":{"docs":{},"…":{"docs":{},"…":{"docs":{},"r":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"后":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"ref":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","tf":3.333333333333333}}}},"前":{"docs":{},"·":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}},"技":{"docs":{},"巧":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"时":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"预":{"docs":{},"先":{"docs":{},"指":{"docs":{},"针":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"岛":{"docs":{},"屿":{"docs":{},"数":{"docs":{},"量":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Tree&Graph/numIslands.html":{"ref":"normal/Tree&Graph/numIslands.html","tf":10.5}}}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"面":{"docs":{},"积":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":10.052631578947368}}}}}}}}},"左":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"之":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":10.019607843137255}}}}}},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}}},"移":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"行":{"docs":{},"与":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"其":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"位":{"docs":{},"都":{"docs":{},"是":{"1":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"重":{"docs":{},"复":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}}}},"括":{"docs":{},"号":{"docs":{},"所":{"docs":{},"剩":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"是":{"docs":{},"当":{"docs":{},"前":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}},"帕":{"docs":{},"斯":{"docs":{},"卡":{"docs":{},"三":{"docs":{},"角":{"docs":{},"形":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/帕斯卡三角形.html":{"ref":"easy/Other/帕斯卡三角形.html","tf":11}}}}}}}},"幂":{"docs":{},"集":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":10.041666666666666}}}},"开":{"docs":{},"始":{"docs":{},"按":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"中":{"docs":{},"级":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}},"写":{"docs":{},"的":{"docs":{},"，":{"docs":{},"没":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"吧":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}}}}}}}}}}}}}}}}}}},"错":{"docs":{},"了":{"docs":{},"，":{"docs":{},"忘":{"docs":{},"了":{"1":{"docs":{},"也":{"docs":{},"是":{"3":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"。":{"docs":{"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}}}},"docs":{}}}},"docs":{}}}}}}},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"照":{"docs":{},"着":{"docs":{},"规":{"docs":{},"则":{"docs":{},"验":{"docs":{},"证":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}},"话":{"docs":{},"，":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"1":{"docs":{},",":{"docs":{},"然":{"docs":{},"后":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}}},"docs":{}}}}},"docs":{}}}}}},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"都":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}},"快":{"docs":{},"乐":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"以":{"docs":{},"检":{"docs":{},"测":{"docs":{},"环":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"给":{"docs":{},"出":{"docs":{},"环":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"我":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"链":{"docs":{},"表":{"docs":{},"里":{"docs":{},"加":{"docs":{},"个":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{},"当":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"使":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"来":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"串":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"）":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"想":{"docs":{},"：":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"将":{"docs":{},"待":{"docs":{},"排":{"docs":{},"记":{"docs":{},"录":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"成":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"记":{"docs":{},"录":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"均":{"docs":{},"比":{"docs":{},"另":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"小":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"这":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"记":{"docs":{},"录":{"docs":{},"继":{"docs":{},"续":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"以":{"docs":{},"达":{"docs":{},"到":{"docs":{},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"序":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"戳":{"docs":{},"气":{"docs":{},"球":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":10.007575757575758}}}}},"打":{"docs":{},"乱":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":10.004504504504505}}}}},"家":{"docs":{},"劫":{"docs":{},"舍":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":10.023809523809524}}}}}},"括":{"docs":{},"号":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":10.019607843137255}},"生":{"docs":{},"成":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"排":{"docs":{},"序":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}},"和":{"docs":{},"搜":{"docs":{},"索":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}}}}},"后":{"docs":{},"再":{"docs":{},"看":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125}}}}},"算":{"docs":{},"法":{"docs":{},"整":{"docs":{},"理":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"插":{"docs":{},"入":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":10.020833333333334}},"排":{"docs":{},"序":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"采":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"旋":{"docs":{},"转":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":10.01086956521739}}}}}}}}}},"数":{"docs":{},"学":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}}},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"底":{"docs":{},"层":{"docs":{},"原":{"docs":{},"理":{"docs":{},"模":{"docs":{},"拟":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":5}}}}}}}}}}},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}},"与":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":3.3385416666666665}}}},"可":{"docs":{},"以":{"docs":{},"成":{"docs":{},"为":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}},"寻":{"docs":{},"找":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"性":{"docs":{},"能":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}},"第":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"排":{"docs":{},"序":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"4":{"docs":{},"，":{"docs":{},"第":{"7":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"5":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"和":{"docs":{},"是":{"9":{"docs":{},"。":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}}}}},"删":{"docs":{},"除":{"docs":{},"重":{"docs":{},"复":{"docs":{},"项":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}},"的":{"docs":{},"项":{"docs":{},"和":{"docs":{},"索":{"docs":{},"引":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}},"笛":{"docs":{},"卡":{"docs":{},"尔":{"docs":{},"积":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}},"真":{"docs":{},"的":{"docs":{},"切":{"docs":{},"割":{"docs":{},"出":{"docs":{},"来":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"分":{"docs":{},"成":{"docs":{},"和":{"docs":{},"等":{"docs":{},"值":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}},"可":{"docs":{},"否":{"docs":{},"分":{"docs":{},"成":{"docs":{},"和":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"三":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}},"题":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}},"整":{"docs":{},"数":{"docs":{},"反":{"docs":{},"转":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":10.020408163265307}}}},"转":{"docs":{},"换":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":10.03225806451613}}}}},"个":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"再":{"docs":{},"转":{"docs":{},"置":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}},"体":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}},"文":{"docs":{},"件":{"docs":{},"夹":{"docs":{},"下":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"旋":{"docs":{},"转":{"docs":{},"图":{"docs":{},"像":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":10.012987012987013}}}},"数":{"docs":{},"组":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":10.05}}}},"矩":{"docs":{},"阵":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":10.030303030303031}}}},"而":{"docs":{},"成":{"docs":{},"，":{"docs":{},"则":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"后":{"docs":{},"的":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"组":{"docs":{},"合":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":10.03225806451613}}}}}}}},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":10.018181818181818}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"序":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":10.008264462809917}}}}}},"小":{"docs":{},"栈":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":10.011363636363637}}},"覆":{"docs":{},"盖":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":10.05}}}}}},"高":{"docs":{},"度":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":10.026315789473685}}}}},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"短":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":10.026315789473685}}}}}}},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"前":{"docs":{},"缀":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":10.035714285714286}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":10.007692307692308}}}}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":10.007751937984496}}}}}},"上":{"docs":{},"升":{"docs":{},"子":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464}}}}},"序":{"docs":{},"列":{"docs":{"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":10}}}}}}},"连":{"docs":{},"续":{"docs":{},"递":{"docs":{},"增":{"docs":{},"序":{"docs":{},"列":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":10.014705882352942}}}}}},"序":{"docs":{},"列":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":10.010989010989011}}}}}}},"后":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}},"一":{"docs":{},"对":{"docs":{},"比":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}}}}}}}},"行":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},",":{"docs":{},"从":{"docs":{},"下":{"docs":{},"往":{"docs":{},"上":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"右":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"左":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"相":{"docs":{},"加":{"docs":{},"得":{"docs":{},"结":{"docs":{},"果":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}},"骚":{"docs":{},"的":{"docs":{},"是":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}},"粗":{"docs":{},"暴":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"保":{"docs":{},"存":{"docs":{},"到":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"或":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"，":{"docs":{},"看":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":10.018867924528301}}}}}}},"括":{"docs":{},"号":{"docs":{"./":{"ref":"./","tf":0.007462686567164179},"easy/Other/有效的括号.html":{"ref":"easy/Other/有效的括号.html","tf":11}}}},"数":{"docs":{},"独":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":10}}}}},"数":{"docs":{},"独":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"组":{"docs":{},"合":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":10.018867924528301}}}}}}}}}}}},"些":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"综":{"docs":{},"合":{"docs":{},"之":{"docs":{},"前":{"docs":{},"所":{"docs":{},"有":{"docs":{},"计":{"docs":{},"算":{"docs":{},"过":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"空":{"docs":{},"串":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}}}}}}}}}},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},",":{"docs":{},"一":{"docs":{},"直":{"docs":{},"找":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"与":{"docs":{},"队":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"排":{"docs":{},"序":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":10.004424778761061}}}},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":10.008695652173913}}}}}}},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"与":{"docs":{},"图":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"和":{"docs":{},"图":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"根":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}},"据":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"创":{"docs":{},"建":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":10.125}}}}}}}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"所":{"docs":{},"有":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"得":{"docs":{},"出":{"docs":{},"长":{"docs":{},"度":{"docs":{},"差":{"docs":{},"n":{"docs":{},",":{"docs":{},"让":{"docs":{},"长":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"先":{"docs":{},"走":{"docs":{},"n":{"docs":{},"步":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}},"检":{"docs":{},"查":{"docs":{},"子":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":10.007142857142858}}}},"平":{"docs":{},"衡":{"docs":{},"性":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":10.018867924528301}}}}},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"小":{"docs":{},"九":{"docs":{},"宫":{"docs":{},"格":{"docs":{},"是":{"docs":{},"否":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"和":{"docs":{},"路":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":10.021739130434783}}}}}},"汉":{"docs":{},"明":{"docs":{},"距":{"docs":{},"离":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":10.03225806451613}}}}},"诺":{"docs":{},"塔":{"docs":{},"问":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":10.01063829787234}}}}}}},"爬":{"docs":{},"楼":{"docs":{},"梯":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":10.010989010989011}}}}},"特":{"docs":{},"定":{"docs":{},"节":{"docs":{},"点":{"docs":{},"深":{"docs":{},"度":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":10}}}}}}}},"深":{"docs":{},"度":{"docs":{},"节":{"docs":{},"点":{"docs":{},"链":{"docs":{},"表":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}},"指":{"docs":{},"：":{"docs":{},"“":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"以":{"docs":{},"后":{"docs":{},"不":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"”":{"docs":{},"，":{"docs":{},"请":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"“":{"docs":{},"没":{"docs":{},"有":{"docs":{},"进":{"docs":{},"行":{"docs":{},"过":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"的":{"docs":{},"不":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"”":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":10.014705882352942}}}}},"路":{"docs":{},"检":{"docs":{},"测":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":10.006666666666666}}}}}},"电":{"docs":{},"话":{"docs":{},"号":{"docs":{},"码":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"组":{"docs":{},"合":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}},"的":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}},"个":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/位1的个数.html":{"ref":"easy/Other/位1的个数.html","tf":3.333333333333333},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903}}}},"幂":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":5}}},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"重":{"docs":{},"复":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"办":{"docs":{},"法":{"docs":{},"发":{"docs":{},"现":{"docs":{},"这":{"docs":{},"个":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"值":{"docs":{},"为":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"天":{"docs":{},"把":{"docs":{},"股":{"docs":{},"票":{"docs":{},"抛":{"docs":{},"售":{"docs":{},"了":{"docs":{},"；":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"了":{"docs":{},"股":{"docs":{},"票":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"由":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}},"执":{"docs":{},"行":{"docs":{},"买":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"收":{"docs":{},"益":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"因":{"docs":{},"为":{"docs":{},"题":{"docs":{},"目":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"一":{"docs":{},"次":{"docs":{},"交":{"docs":{},"易":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"不":{"docs":{},"能":{"docs":{},"加":{"docs":{},"上":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"户":{"docs":{},"手":{"docs":{},"上":{"docs":{},"持":{"docs":{},"股":{"docs":{},"状":{"docs":{},"态":{"docs":{},"为":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"依":{"docs":{},"次":{"docs":{},"判":{"docs":{},"断":{"docs":{},"它":{"docs":{},"们":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"对":{"docs":{},"各":{"docs":{},"子":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"仅":{"docs":{},"增":{"docs":{},"量":{"docs":{},"因":{"docs":{},"子":{"docs":{},"为":{"1":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"和":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"。":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"又":{"docs":{},"来":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"了":{"docs":{},"！":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"替":{"docs":{},"换":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"后":{"docs":{},"续":{"docs":{},"能":{"docs":{},"够":{"docs":{},"更":{"docs":{},"好":{"docs":{},"地":{"docs":{},"更":{"docs":{},"新":{"docs":{},"中":{"docs":{},"间":{"docs":{},"值":{"docs":{},"！":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"！":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}},"代":{"docs":{},"码":{"docs":{},"还":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"番":{"docs":{},"思":{"docs":{},"索":{"docs":{},"的":{"docs":{},"。":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"们":{"docs":{},"的":{"docs":{},"开":{"docs":{},"头":{"docs":{},"那":{"docs":{},"个":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}},"值":{"docs":{},"不":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}},"都":{"docs":{},"为":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385}},"的":{"docs":{},"值":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"m":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"与":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"把":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"置":{"docs":{},"为":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}},"地":{"docs":{},"方":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}},"设":{"docs":{},"置":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{},"？":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}},"相":{"docs":{},"交":{"docs":{},"链":{"docs":{},"表":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":10.027777777777779}}}}},"比":{"docs":{},"，":{"docs":{},"若":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}},"邻":{"docs":{},"元":{"docs":{},"素":{"docs":{},"两":{"docs":{},"两":{"docs":{},"对":{"docs":{},"比":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":10.016666666666667}}}}}},"置":{"docs":{},"零":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":10.033333333333333}}}}}},"硬":{"docs":{},"币":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/硬币.html":{"ref":"程序员面试金典/递归与动态规划/硬币.html","tf":10.333333333333334}}}},"移":{"docs":{},"动":{"docs":{},"零":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":10.03125}}}},"除":{"docs":{},"重":{"docs":{},"复":{"docs":{},"节":{"docs":{},"点":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":10.006493506493506}}}}}}},"到":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"面":{"docs":{},"试":{"docs":{},"金":{"docs":{},"典":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}},"第":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}},"一":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":10.015151515151516}}}}}}}},"种":{"docs":{},"是":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}},"反":{"docs":{},"应":{"docs":{},"就":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}},"二":{"docs":{},"种":{"docs":{},"比":{"docs":{},"较":{"docs":{},"巧":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{},"j":{"docs":{},"s":{"docs":{},"里":{"docs":{},"没":{"docs":{},"有":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"达":{"docs":{},"到":{"docs":{},"同":{"docs":{},"样":{"docs":{},"作":{"docs":{},"用":{"docs":{},"。":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"被":{"docs":{},"选":{"docs":{},"中":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"为":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}},"i":{"docs":{},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"(":{"docs":{},"i":{"docs":{},"=":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"…":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"简":{"docs":{},"化":{"docs":{},"路":{"docs":{},"径":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":10.018518518518519}}}}},"单":{"docs":{},"明":{"docs":{},"了":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"分":{"docs":{},"析":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.012089810017271158}}},"类":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"描":{"docs":{},"述":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.017271157167530225}}}}}},"绘":{"docs":{},"制":{"docs":{},"直":{"docs":{},"线":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":10.041666666666666}}}}}},"缺":{"docs":{},"失":{"docs":{},"数":{"docs":{},"字":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/缺失数字.html":{"ref":"easy/Other/缺失数字.html","tf":11}}}}}},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"整":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":10.019607843137255}}}}}}}}},"翻":{"docs":{},"转":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":10.018181818181818}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"里":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":10.029411764705882}}}}}}}}},"数":{"docs":{},"位":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":10}}}},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"节":{"docs":{},"点":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"(":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"就":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"数":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}}}}},"腾":{"docs":{},"讯":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"理":{"docs":{},"一":{"docs":{},"下":{"docs":{},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{},"语":{"docs":{},"言":{"docs":{},"是":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}}}}}}}}},"写":{"docs":{},"的":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}},",":{"docs":{},"调":{"docs":{},"试":{"docs":{},"过":{"docs":{},"几":{"docs":{},"次":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"细":{"docs":{},"节":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"写":{"docs":{},"的":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}},"，":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"不":{"docs":{},"优":{"docs":{},"雅":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"间":{"docs":{},"通":{"docs":{},"路":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":10.011363636363637}}}}}}},"表":{"docs":{},"列":{"docs":{},"名":{"docs":{},"称":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"序":{"docs":{},"号":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}},"示":{"docs":{},"不":{"docs":{},"持":{"docs":{},"股":{"docs":{},"（":{"docs":{},"特":{"docs":{},"指":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"以":{"docs":{},"后":{"docs":{},"的":{"docs":{},"不":{"docs":{},"持":{"docs":{},"股":{"docs":{},"状":{"docs":{},"态":{"docs":{},"）":{"docs":{},"，":{"1":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"持":{"docs":{},"股":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"：":{"docs":{},"在":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}},"s":{"1":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}},"docs":{}}},"docs":{}}}},"现":{"docs":{},"最":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"之":{"docs":{},"一":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"无":{"docs":{},"论":{"docs":{},"什":{"docs":{},"么":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"去":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"2":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"规":{"docs":{},"模":{"docs":{},"越":{"docs":{},"小":{"docs":{},"越":{"docs":{},"好":{"docs":{},"。":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"占":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"了":{"docs":{},"吧":{"docs":{},"。":{"docs":{},"理":{"docs":{},"论":{"docs":{},"上":{"docs":{},"讲":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"可":{"docs":{},"能":{"docs":{},"也":{"docs":{},"是":{"docs":{},"平":{"docs":{},"时":{"docs":{},"排":{"docs":{},"序":{"docs":{},"一":{"docs":{},"般":{"docs":{},"人":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"了":{"docs":{},"吧":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"计":{"docs":{},"数":{"docs":{},"质":{"docs":{},"数":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":10.025}}}},"排":{"docs":{},"序":{"docs":{},"不":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"其":{"docs":{},"核":{"docs":{},"心":{"docs":{},"在":{"docs":{},"于":{"docs":{},"将":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"键":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"额":{"docs":{},"外":{"docs":{},"开":{"docs":{},"辟":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"当":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"第":{"docs":{},"一":{"docs":{},"列":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"行":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"设":{"docs":{},"计":{"docs":{},"问":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.007462686567164179}}}}},"定":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"置":{"docs":{},"一":{"docs":{},"个":{"docs":{},"定":{"docs":{},"量":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"当":{"docs":{},"作":{"docs":{},"空":{"docs":{},"桶":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"桶":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"数":{"docs":{},"量":{"docs":{},"为":{"5":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"docs":{}}}}}}}}}},"路":{"docs":{},"径":{"docs":{},"总":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.014925373134328358},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":10},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":5.017857142857143},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":5.010416666666667}}}}},"劲":{"docs":{},"总":{"docs":{},"和":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}},"归":{"docs":{},"并":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"跳":{"docs":{},"跃":{"docs":{},"游":{"docs":{},"戏":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"返":{"docs":{},"回":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.03333333333333333}},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":3.3466666666666662}}}}},"自":{"docs":{},"身":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"供":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"使":{"docs":{},"用":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}}}}}}}}},"迷":{"docs":{},"路":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"人":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":10.011363636363637}}}}}}}},"逆":{"docs":{},"波":{"docs":{},"兰":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"求":{"docs":{},"值":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}}}}},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"三":{"docs":{},"元":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":10.007692307692308}}}}}}}}},"归":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}},"与":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}},"乘":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":10.012820512820513}}}},"方":{"docs":{},"案":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}},"写":{"docs":{},"法":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}}},"回":{"docs":{},"溯":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}},"，":{"docs":{},"很":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}},"加":{"docs":{},"法":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}},"：":{"docs":{},"一":{"docs":{},"直":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}}}}}},"地":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"）":{"docs":{},"把":{"docs":{},"小":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"值":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"值":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"配":{"docs":{},"对":{"docs":{},"交":{"docs":{},"换":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":10.020408163265307}}}}}},"链":{"docs":{},"表":{"1":{"docs":{},"值":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}},"2":{"docs":{},"值":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}},"docs":{"./":{"ref":"./","tf":0.011194029850746268}},"求":{"docs":{},"和":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":10.008130081300813}}}},"相":{"docs":{},"交":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":10.010989010989011}}}},"确":{"docs":{},"实":{"docs":{},"有":{"docs":{},"点":{"docs":{},"绕":{"docs":{},"，":{"docs":{},"不":{"docs":{},"太":{"docs":{},"熟":{"docs":{},"悉":{"docs":{},"，":{"docs":{},"提":{"docs":{},"交":{"docs":{},"错":{"docs":{},"了":{"docs":{},"好":{"docs":{},"几":{"docs":{},"次":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"乘":{"docs":{},"后":{"docs":{},"的":{"docs":{},"零":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}}},"阿":{"docs":{},"里":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}},"面":{"docs":{},"试":{"docs":{},"一":{"docs":{},"面":{"docs":{},"题":{"docs":{},"目":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}},"零":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":10.010989010989011}}}},"钱":{"docs":{},"兑":{"docs":{},"换":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":10}}}}},"题":{"docs":{},"集":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":10.001818181818182}}},"目":{"docs":{},"不":{"docs":{},"难":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"细":{"docs":{},"节":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}}}}}}},"解":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}},"里":{"docs":{},"的":{"docs":{},"，":{"docs":{},"很":{"docs":{},"巧":{"docs":{},"妙":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025}}}},"秀":{"docs":{},"，":{"docs":{},"用":{"docs":{},"正":{"docs":{},"则":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},":":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}},"有":{"docs":{},"个":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},",":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"和":{"docs":{},"上":{"docs":{},"面":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}},"答":{"docs":{},"案":{"docs":{},"其":{"docs":{},"实":{"docs":{},"本":{"docs":{},"质":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"写":{"docs":{},"的":{"docs":{},"好":{"docs":{},"多":{"docs":{},"了":{"docs":{},",":{"docs":{},"用":{"docs":{},"了":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"判":{"docs":{},"断":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"是":{"docs":{},"否":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"是":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"这":{"docs":{},"里":{"docs":{},"也":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"第":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}},"颜":{"docs":{},"色":{"docs":{},"分":{"docs":{},"类":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895}}}},"填":{"docs":{},"充":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}},"]":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":10}}}}}}},"颠":{"docs":{},"倒":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"位":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":10.007874015748031}}}}}}}},"首":{"docs":{},"个":{"docs":{},"共":{"docs":{},"同":{"docs":{},"祖":{"docs":{},"先":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":10.010309278350515}}}}}}},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}},"空":{"docs":{},"数":{"docs":{},"组":{"docs":{},"判":{"docs":{},"断":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05}}}}}}},"看":{"docs":{},"到":{"docs":{},"题":{"docs":{},"目":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"我":{"docs":{},"是":{"docs":{},"懵":{"docs":{},"逼":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"像":{"docs":{},"做":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"题":{"docs":{},"，":{"docs":{},"试":{"docs":{},"试":{"docs":{},"找":{"docs":{},"一":{"docs":{},"下":{"docs":{},"规":{"docs":{},"律":{"docs":{},"。":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"数":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"固":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"破":{"docs":{},"解":{"docs":{},"试":{"docs":{},"试":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333}}}}}}}},"，":{"docs":{},"新":{"docs":{},"建":{"docs":{},"两":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}},"要":{"docs":{},"在":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"中":{"docs":{},"找":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"后":{"docs":{},"进":{"docs":{},"入":{"docs":{},"递":{"docs":{},"归":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}}}},"找":{"docs":{},"到":{"docs":{},"有":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}},"想":{"docs":{},"到":{"docs":{},"用":{"docs":{},"个":{"docs":{},"缓":{"docs":{},"存":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}},"验":{"docs":{},"证":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":10.013333333333334}}}}}}},"回":{"docs":{},"文":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":10}}}}}}},"子":{"docs":{},"串":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}},"魔":{"docs":{},"术":{"docs":{},"索":{"docs":{},"引":{"docs":{"./":{"ref":"./","tf":0.0037313432835820895},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":10.05}}}}}},"!":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}},"=":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.025210084033613446},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0392156862745098},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},"=":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.0199203187250996},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02666666666666667},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}},"p":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}},"(":{"1":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}},"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.06593406593406594}},"n":{"1":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.013513513513513514},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}},"u":{"docs":{},"m":{"1":{"docs":{},",":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}},"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0392156862745098},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}},"s":{"1":{"docs":{},",":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}},"[":{"docs":{},"m":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}},",":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}},")":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.024793388429752067},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608}}}}}}},":":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}}}}}},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.023622047244094488},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}},"2":{"docs":{},")":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}},"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}},")":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}},",":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567}},")":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},")":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}},"v":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}},",":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}},"+":{"docs":{},"+":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}},"i":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.037037037037037035},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}},"t":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}}}}}}}},"l":{"1":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},",":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818}}}}}},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}},"2":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815}},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}},"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"e":{"docs":{},"t":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.03636363636363636},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.022727272727272728},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.023636363636363636},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}},"f":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"docs":{}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}}}}},"n":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.01845018450184502},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"b":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0392156862745098}},",":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}},"p":{"1":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}},"2":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176}}},"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"s":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}}}}}}},"e":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01090909090909091}}}}}}}}}},")":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"o":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}},"docs":{}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}},",":{"docs":{"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664}}}}}},"t":{"docs":{},"r":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.03896103896103896},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.04878048780487805},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.024793388429752067},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.015544041450777202}}},"l":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.03896103896103896},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198}}}}}},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"1":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}},"docs":{}}}}},"f":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}},"n":{"1":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},"docs":{}}}}}}}}},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},",":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}},"b":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}},",":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253}}}}}},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},")":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}},"r":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"e":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}},".":{"docs":{},"v":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}},"n":{"docs":{},"d":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}},"r":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"e":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}},"g":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}},"docs":{}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.04},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0392156862745098},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549}},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}}}}},",":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.020618556701030927},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}},"w":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}},"s":{"1":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}},",":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}},"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.03636363636363636},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.04878048780487805},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}},",":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705}}},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}},"s":{"docs":{},")":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905}}}}}}}},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"就":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"'":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},")":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},")":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}},"p":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},")":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334}},",":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.02666666666666667},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}}},")":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.0199203187250996},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.02}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"a":{"docs":{},",":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"f":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}},",":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}},"(":{"1":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}},"n":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.03937007874015748}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}}}}}},"q":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}}}}}}},"o":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}},"b":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}},"c":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},".":{"docs":{},"v":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}},"x":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}},",":{"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903}}}},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.045454545454545456},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.034782608695652174},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.04411764705882353}}},"t":{"1":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.04285714285714286}},",":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}},"2":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}}},"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}}},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}},"a":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.038461538461538464}},"b":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886}}}}}},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}},",":{"docs":{"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"k":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}},"e":{"docs":{},"y":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},")":{"docs":{},"{":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}},"?":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},")":{"docs":{},"匹":{"docs":{},"配":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}},"=":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},")":{"docs":{},"匹":{"docs":{},"配":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}},"j":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}},"=":{"0":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}},";":{"docs":{},"i":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}},"5":{"docs":{},",":{"docs":{},"a":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"a":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.125},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.14285714285714285},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.11290322580645161},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.0851063829787234},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.1},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.15584415584415584},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.07563025210084033},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.17073170731707318},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.1111111111111111},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.16363636363636364},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.061224489795918366},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.17073170731707318},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.16981132075471697},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.1},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.13725490196078433},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.14634146341463414},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.08759124087591241},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.10714285714285714},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.1016949152542373},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.11764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.15853658536585366},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.05454545454545454},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.10144927536231885},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.10294117647058823},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.04878048780487805},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.08333333333333333},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.09090909090909091},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0958904109589041},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0784313725490196},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.13924050632911392},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.14},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.12727272727272726},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.1038961038961039},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.03296703296703297},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.08},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0410958904109589},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.06060606060606061},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.06593406593406594},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.07380073800738007},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.1652892561983471},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.14285714285714285},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0945945945945946},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.07954545454545454},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.17647058823529413},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.15},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.09803921568627451},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.12903225806451613},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.10236220472440945},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.05309734513274336},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.2},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.13402061855670103},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.18181818181818182},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.06976744186046512},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.046153846153846156},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.1259259259259259},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.1323529411764706},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.08333333333333333},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.078125},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.08163265306122448},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.10181818181818182},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.15},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.15384615384615385},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.06923076923076923},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.2},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.10606060606060606},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.10526315789473684},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.12244897959183673},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.11707317073170732},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.058823529411764705},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.05555555555555555},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0761904761904762},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.10526315789473684},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.07608695652173914},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.14705882352941177},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.06770833333333333},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.13186813186813187},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.13090909090909092},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.11023622047244094},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.0660377358490566},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.07936507936507936},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.056962025316455694},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.10285714285714286},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.13636363636363635},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.12121212121212122},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.12087912087912088},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.08},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.1038961038961039},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.16},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.12745098039215685},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.17886178861788618},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.13545816733067728},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.15384615384615385},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.10666666666666667},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.10204081632653061},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.08695652173913043},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.07547169811320754},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.061946902654867256},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.10294117647058823},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.06818181818181818},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.15789473684210525},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.13793103448275862},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.11320754716981132},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.06818181818181818},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.14285714285714285},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.05154639175257732},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.08035714285714286},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.08695652173913043},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.05673758865248227},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.041666666666666664},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.041666666666666664},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.10526315789473684},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.11594202898550725},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.12244897959183673},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.16129032258064516},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.031914893617021274},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.03409090909090909},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.16666666666666666},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.15},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.10714285714285714},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.0967741935483871},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.07547169811320754},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.058823529411764705},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.05714285714285714},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.15254237288135594},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.08808290155440414},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.13513513513513514}},"=":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.03571428571428571},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.04878048780487805},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.04878048780487805},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.03048780487804878},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.03636363636363636},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.058823529411764705},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.05309734513274336},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.03260869565217391},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.026785714285714284},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.08571428571428572},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.03409090909090909},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285}},"=":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.024390243902439025},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.04395604395604396},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.05555555555555555},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0380952380952381},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.05154639175257732},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},">":{"5":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.0625},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.05511811023622047},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01593625498007968},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.034482758620689655},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}},"r":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.03636363636363636},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"e":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.04081632653061224},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.022727272727272728},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.03937007874015748},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.024390243902439025},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.06451612903225806},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.05660377358490566},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.04878048780487805},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.03773584905660377},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.06666666666666667},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.058823529411764705},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.07317073170731707},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0364963503649635},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.036585365853658534},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.04411764705882353},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.06097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.05454545454545454},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.058823529411764705},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.04},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.03896103896103896},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.04395604395604396},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.05333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.03296703296703297},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.036036036036036036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.022727272727272728},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.03076923076923077},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.046875},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.03636363636363636},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.058823529411764705},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.03260869565217391},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.020833333333333332},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.016363636363636365},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.023622047244094488},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.047619047619047616},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.045714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.05333333333333334},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.043824701195219126},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.05333333333333334},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.017391304347826087},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.02654867256637168},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.029411764705882353},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.05263157894736842},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.07547169811320754},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.09090909090909091},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.03571428571428571},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.08571428571428572},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.05263157894736842},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.03409090909090909},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.06451612903225806},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.07547169811320754},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.05084745762711865},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.008635578583765112}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}},"s":{"docs":{},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.03125},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}},"[":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"]":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}}}}}}}}}},"r":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.024390243902439025}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}}}},"docs":{}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.03164556962025317},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"e":{"docs":{},"t":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}},"=":{"docs":{},"[":{"docs":{},"]":{"docs":{},";":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.03125}}}}}},",":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.08163265306122448},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.026785714285714284}}},"[":{"0":{"docs":{},"]":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.014634146341463415},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}},"v":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.023622047244094488}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}},"docs":{}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.05454545454545454},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.023622047244094488},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}}}},"(":{"docs":{},"l":{"1":{"docs":{},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}},"2":{"docs":{},")":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}},"docs":{}}}}}}}},"g":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0392156862745098}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"{":{"3":{"docs":{},"}":{"docs":{},"/":{"docs":{},"g":{"docs":{},",":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}},"docs":{}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.06493506493506493},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}},"w":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.054945054945054944}},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},":":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}},"o":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.03636363636363636},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.05263157894736842},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.06},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},")":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421}},";":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}}}}}},"b":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.018292682926829267},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.03773584905660377},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},">":{"0":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"docs":{}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726}},";":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}}}}}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}}},")":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"k":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.020618556701030927}},")":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}},")":{"docs":{},")":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0392156862745098}}}}}}}}},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},"，":{"docs":{},"将":{"docs":{},"它":{"docs":{},"与":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"的":{"docs":{},"第":{"1":{"docs":{},"个":{"docs":{},"记":{"docs":{},"录":{"docs":{},"r":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"使":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"和":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},")":{"docs":{},"分":{"docs":{},"别":{"docs":{},"变":{"docs":{},"为":{"docs":{},"记":{"docs":{},"录":{"docs":{},"个":{"docs":{},"数":{"docs":{},"增":{"docs":{},"加":{"1":{"docs":{},"个":{"docs":{},"的":{"docs":{},"新":{"docs":{},"有":{"docs":{},"序":{"docs":{},"区":{"docs":{},"和":{"docs":{},"记":{"docs":{},"录":{"docs":{},"个":{"docs":{},"数":{"docs":{},"减":{"docs":{},"少":{"1":{"docs":{},"个":{"docs":{},"的":{"docs":{},"新":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.09375},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.10714285714285714},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.1038961038961039},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.09375},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.05042016806722689},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.0975609756097561},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.044444444444444446},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.05454545454545454},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.07317073170731707},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.07547169811320754},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0784313725490196},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.04878048780487805},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.058394160583941604},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.036585365853658534},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.024390243902439025},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.07272727272727272},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0410958904109589},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.03896103896103896},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.03296703296703297},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.04059040590405904},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.09090909090909091},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.07142857142857142},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.036036036036036036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.11764705882352941},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.1},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0784313725490196},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.0967741935483871},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.031496062992125984},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.16666666666666666},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.09278350515463918},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.07272727272727272},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.03875968992248062},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.023076923076923078},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.09375},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01818181818181818},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.05},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.11538461538461539},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.07894736842105263},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.03260869565217391},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.08823529411764706},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.03296703296703297},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.02},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.047619047619047616},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.02531645569620253},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.07575757575757576},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.09090909090909091},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.054945054945054944},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.08},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.01948051948051948},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.05333333333333334},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.056910569105691054},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.0199203187250996},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.03333333333333333},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.034782608695652174},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.14285714285714285},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.03571428571428571},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.12244897959183673},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.12903225806451613},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.1},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.07142857142857142},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.037996545768566495}}},"l":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.022123893805309734},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}},";":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}},"e":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}},")":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.06060606060606061}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}},"g":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}},"docs":{}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.015625},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.013333333333333334},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"{":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.09375},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.05357142857142857},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.06382978723404255},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.06493506493506493},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.0625},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.07563025210084033},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.04878048780487805},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.044444444444444446},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.07272727272727272},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.04878048780487805},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.05660377358490566},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.1},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.058823529411764705},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.04878048780487805},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.058394160583941604},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.047058823529411764},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.036585365853658534},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.043478260869565216},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.04411764705882353},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.04878048780487805},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.041666666666666664},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.05454545454545454},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0547945205479452},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.09803921568627451},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.10126582278481013},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.1},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.09090909090909091},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.05194805194805195},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.08791208791208792},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.05333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0547945205479452},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.04395604395604396},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.02214022140221402},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.049586776859504134},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.036036036036036036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.09090909090909091},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.05},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0392156862745098},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.031496062992125984},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.061855670103092786},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.03875968992248062},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.03076923076923077},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.05555555555555555},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.046875},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.025454545454545455},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.07692307692307693},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.03787878787878788},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.05263157894736842},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.04081632653061224},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.03902439024390244},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.058823529411764705},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.05555555555555555},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.05714285714285714},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.10526315789473684},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.05434782608695652},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.058823529411764705},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.078125},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.06593406593406594},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.04909090909090909},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.06299212598425197},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.02830188679245283},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.02531645569620253},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.02857142857142857},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.04395604395604396},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.02666666666666667},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.07142857142857142},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.06666666666666667},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.049019607843137254},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.032520325203252036},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.055776892430278883},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.054945054945054944},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.09333333333333334},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.061224489795918366},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.043478260869565216},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.10619469026548672},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.08823529411764706},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.045454545454545456},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.05172413793103448},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.03773584905660377},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.06818181818181818},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.05357142857142857},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.02857142857142857},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.07801418439716312},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.10714285714285714},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.03125},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.10526315789473684},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.057971014492753624},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.08333333333333333},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.0641025641025641},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.056818181818181816},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.08333333333333333},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.0967741935483871},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.05660377358490566},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0784313725490196},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.05084745762711865},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.04317789291882556}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0273972602739726},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.02702702702702703},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.04411764705882353},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.031914893617021274}}},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}},"}":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0273972602739726},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.03409090909090909},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.061224489795918366},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.02608695652173913},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.043478260869565216},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.10416666666666667},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.07692307692307693},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.07142857142857142}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"}":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"}":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.058823529411764705},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.037037037037037035},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0392156862745098},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304}}},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"}":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.05454545454545454},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.022727272727272728},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.017391304347826087},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"}":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}}}}}}},"}":{"docs":{"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}},",":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"}":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.030303030303030304}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"}":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456}}}}}}}}}},"*":{"docs":{},"}":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332}}}}},"}":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.03571428571428571},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.0425531914893617},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.04201680672268908},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.03773584905660377},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.06666666666666667},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0392156862745098},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0364963503649635},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.03529411764705882},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.029411764705882353},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.04878048780487805},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.05454545454545454},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0410958904109589},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.09803921568627451},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.10126582278481013},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.1},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.09090909090909091},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.03896103896103896},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.08791208791208792},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.04},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.058823529411764705},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0410958904109589},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.03296703296703297},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.022727272727272728},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.06451612903225806},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.031496062992125984},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.041237113402061855},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.06201550387596899},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.03076923076923077},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.0625},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.01818181818181818},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.030303030303030304},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.03902439024390244},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.05555555555555555},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0380952380952381},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.0625},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.054945054945054944},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.02909090909090909},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.02857142857142857},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.07142857142857142},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.05333333333333334},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.032520325203252036},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.055776892430278883},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.054945054945054944},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.09333333333333334},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.043478260869565216},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.10176991150442478},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.07352941176470588},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.03773584905660377},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.06818181818181818},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.05357142857142857},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.02857142857142857},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.07801418439716312},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.10714285714285714},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.03125},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.13157894736842105},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.057971014492753624},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.056818181818181816},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.03773584905660377},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0392156862745098},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.06779661016949153},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.037996545768566495}},";":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.03636363636363636},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.024390243902439025},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.02252252252252252},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.045454545454545456},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.015384615384615385},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}},")":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.023622047244094488}},";":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}},"利":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"乘":{"docs":{},"以":{"2":{"docs":{},"减":{"docs":{},"去":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"和":{"docs":{},"就":{"docs":{},"得":{"docs":{},"出":{"docs":{},"那":{"docs":{},"个":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"本":{"docs":{},"地":{"docs":{},"测":{"docs":{},"可":{"docs":{},"以":{"docs":{},"。":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988},"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886},"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/二叉树的坡度.html":{"ref":"easy/Tree/二叉树的坡度.html","tf":0.5},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/根据二叉树创建字符串.html":{"ref":"easy/Tree/根据二叉树创建字符串.html","tf":0.125},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025},"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549},"easy/Other/位1的个数.html":{"ref":"easy/Other/位1的个数.html","tf":0.5},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html":{"ref":"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html","tf":0.5},"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"ref":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","tf":0.5},"normal/Tree&Graph/numIslands.html":{"ref":"normal/Tree&Graph/numIslands.html","tf":0.5},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/树与图/从叶结点开始的最小字符串.html":{"ref":"程序员面试金典/树与图/从叶结点开始的最小字符串.html","tf":0.5},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.014285714285714285},"程序员面试金典/递归与动态规划/硬币.html":{"ref":"程序员面试金典/递归与动态规划/硬币.html","tf":0.3333333333333333}},"，":{"docs":{},"快":{"docs":{},"排":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}}}}}}},"考":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"（":{"docs":{},"核":{"docs":{},"心":{"docs":{},"、":{"docs":{},"难":{"docs":{},"点":{"docs":{},"）":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}},"（":{"docs":{},"重":{"docs":{},"点":{"docs":{},"）":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}},"输":{"docs":{},"出":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"优":{"docs":{},"化":{"docs":{},"空":{"docs":{},"间":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"表":{"docs":{},"格":{"docs":{},"复":{"docs":{},"用":{"docs":{},"）":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"检":{"docs":{},"查":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125},"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}},"遍":{"docs":{},"历":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}},"枚":{"docs":{},"举":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"破":{"docs":{},"解":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}}},"匹":{"docs":{},"配":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"解":{"docs":{},"决":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"递":{"docs":{},"归":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"这":{"docs":{},"题":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"3":{"docs":{},"种":{"docs":{},"方":{"docs":{},"案":{"docs":{"easy/Array/存在重复.html":{"ref":"easy/Array/存在重复.html","tf":0.03125}}}}}},"docs":{},"使":{"docs":{},"用":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"后":{"docs":{},"面":{"docs":{},"一":{"docs":{},"天":{"docs":{},"比":{"docs":{},"前":{"docs":{},"面":{"docs":{},"一":{"docs":{},"天":{"docs":{},"价":{"docs":{},"格":{"docs":{},"高":{"docs":{},"，":{"docs":{},"就":{"docs":{},"进":{"docs":{},"行":{"docs":{},"买":{"docs":{},"卖":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"先":{"docs":{},"走":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}},"相":{"docs":{},"对":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"方":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"照":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"写":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"第":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}},"我":{"docs":{},"貌":{"docs":{},"似":{"docs":{},"之":{"docs":{},"前":{"docs":{},"做":{"docs":{},"过":{"docs":{},"，":{"docs":{},"反":{"docs":{},"正":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"先":{"docs":{},"转":{"docs":{},"置":{"docs":{},"下":{"docs":{},"，":{"docs":{},"转":{"docs":{},"置":{"docs":{},"就":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"好":{"docs":{},"像":{"docs":{},"也":{"docs":{},"做":{"docs":{},"过":{"docs":{},"，":{"docs":{},"这":{"docs":{},"几":{"docs":{},"题":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"原":{"docs":{},"先":{"docs":{},"简":{"docs":{},"单":{"docs":{},"那":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"就":{"docs":{},"是":{"docs":{},"各":{"docs":{},"种":{"docs":{},"边":{"docs":{},"界":{"docs":{},"情":{"docs":{},"况":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"，":{"docs":{},"没":{"docs":{},"啥":{"docs":{},"难":{"docs":{},"的":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"题":{"docs":{},"目":{"docs":{},"没":{"docs":{},"看":{"docs":{},"懂":{"docs":{},",":{"docs":{},"图":{"docs":{},"的":{"docs":{},"知":{"docs":{},"识":{"docs":{},"要":{"docs":{},"加":{"docs":{},"强":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"看":{"docs":{},"题":{"docs":{},"解":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"原":{"docs":{},"理":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"只":{"docs":{},"不":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"e":{"docs":{},"s":{"6":{"docs":{},"的":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"等":{"docs":{},"方":{"docs":{},"法":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"解":{"docs":{},"法":{"docs":{},"非":{"docs":{},"常":{"docs":{},"符":{"docs":{},"合":{"docs":{},"直":{"docs":{},"觉":{"docs":{},"思":{"docs":{},"路":{"docs":{},"也":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"精":{"docs":{},"确":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"最":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"相":{"docs":{},"等":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"来":{"docs":{},"看":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"就":{"docs":{},"是":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"拉":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"吗":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}}}},"道":{"docs":{},"题":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"好":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"下":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842}}}}}}}}}}}},"有":{"docs":{},"个":{"docs":{},"姊":{"docs":{},"妹":{"docs":{},"篇":{"docs":{},"，":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"是":{"docs":{},"：":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}},"么":{"docs":{},"写":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}}}}},"是":{"docs":{},"限":{"docs":{},"定":{"docs":{},"字":{"docs":{},"符":{"docs":{},"都":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"大":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"链":{"docs":{},"表":{"docs":{},"版":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}}}},"种":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"不":{"docs":{},"太":{"docs":{},"合":{"docs":{},"适":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"体":{"docs":{},"现":{"docs":{},"不":{"docs":{},"出":{"docs":{},"查":{"docs":{},"找":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"。":{"docs":{},"就":{"docs":{},"是":{"docs":{},"给":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"好":{"docs":{},"类":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},"/":{"1":{"docs":{},".":{"docs":{},"刚":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"时":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"k":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"递":{"docs":{},"归":{"docs":{},"中":{"docs":{},"间":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}},"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.036585365853658534},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.047244094488188976},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.02654867256637168},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.03636363636363636},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.03636363636363636},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.05303030303030303},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.05263157894736842},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.0380952380952381},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.06521739130434782},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.023622047244094488},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.01195219123505976},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.056818181818181816},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.07547169811320754},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.041237113402061855},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.03571428571428571},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.02857142857142857},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.028368794326241134},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.041666666666666664},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.056818181818181816},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.09803921568627451},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.015544041450777202}},"超":{"docs":{},"出":{"docs":{},"一":{"docs":{},"位":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}}},"[":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},"]":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},"循":{"docs":{},"环":{"docs":{},"几":{"docs":{},"层":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}},"先":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"点":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}},"放":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}},"检":{"docs":{},"查":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"重":{"docs":{},"复":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}},"行":{"docs":{},"是":{"docs":{},"否":{"docs":{},"重":{"docs":{},"复":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}},"验":{"docs":{},"长":{"docs":{},"度":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"正":{"docs":{},"确":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}},"转":{"docs":{},"成":{"docs":{},"数":{"docs":{},"组":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"解":{"docs":{},"码":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.03773584905660377}}}}}}}}}}},"去":{"docs":{},"掉":{"docs":{},"空":{"docs":{},"格":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}},"从":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"一":{"docs":{},"行":{"docs":{},"一":{"docs":{},"行":{"docs":{},"产":{"docs":{},"生":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"上":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}},"字":{"docs":{},"符":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"第":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"输":{"docs":{},"出":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"当":{"docs":{},"前":{"docs":{},"行":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"n":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}},"节":{"docs":{},"点":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"他":{"docs":{},"俩":{"docs":{},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"比":{"docs":{},"较":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"次":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"差":{"docs":{},"大":{"docs":{},"于":{"1":{"docs":{},"，":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"下":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}},"指":{"docs":{},"向":{"docs":{},"赋":{"docs":{},"给":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"空":{"docs":{},"树":{"docs":{},"，":{"docs":{},"则":{"docs":{},"判":{"docs":{},"断":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"也":{"docs":{},"不":{"docs":{},"对":{"docs":{},"称":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"他":{"docs":{},"俩":{"docs":{},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"子":{"docs":{},"树":{"1":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"子":{"docs":{},"树":{"2":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"子":{"docs":{},"树":{"1":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"和":{"docs":{},"子":{"docs":{},"树":{"2":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"空":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"值":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"为":{"docs":{},"空":{"docs":{},"继":{"docs":{},"续":{"docs":{},"循":{"docs":{},"环":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}},"没":{"docs":{},"有":{"docs":{},"的":{"docs":{},"话":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}},"队":{"docs":{},"列":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"就":{"docs":{},"继":{"docs":{},"续":{"docs":{},"循":{"docs":{},"环":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"位":{"docs":{},"是":{"1":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}},"docs":{}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"当":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"对":{"docs":{},"称":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"同":{"docs":{},"时":{"docs":{},"入":{"docs":{},"队":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"同":{"docs":{},"时":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"同":{"docs":{},"时":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"自":{"docs":{},"己":{"docs":{},"去":{"docs":{},"处":{"docs":{},"理":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"规":{"docs":{},"定":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"都":{"docs":{},"跟":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{},"一":{"docs":{},"样":{"docs":{},"即":{"docs":{},"可":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"支":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"出":{"docs":{},"队":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}},"空":{"docs":{},"树":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}},"经":{"docs":{},"过":{"docs":{},"上":{"docs":{},"一":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"出":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"了":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"话":{"docs":{},"不":{"docs":{},"对":{"docs":{},"称":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"记":{"docs":{},"住":{"docs":{},"入":{"docs":{},"队":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"他":{"docs":{},"会":{"docs":{},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"两":{"docs":{},"个":{"docs":{},"的":{"docs":{},"出":{"docs":{},"队":{"docs":{},"。":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"存":{"docs":{},"放":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"只":{"docs":{},"能":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"注":{"docs":{},"意":{"docs":{},"要":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"一":{"docs":{},"致":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"很":{"docs":{},"灵":{"docs":{},"性":{"docs":{},"，":{"docs":{},"理":{"docs":{},"解":{"docs":{},"下":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"总":{"docs":{},"共":{"6":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"第":{"4":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"开":{"docs":{},"始":{"docs":{},"它":{"docs":{},"一":{"docs":{},"直":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}},"注":{"docs":{},"意":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},"等":{"docs":{},"号":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}}},"！":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988}}}}},"为":{"docs":{},"空":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}},"交":{"docs":{},"换":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"两":{"docs":{},"边":{"docs":{},"的":{"docs":{},"子":{"docs":{},"树":{"docs":{},"自":{"docs":{},"己":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"将":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"互":{"docs":{},"换":{"docs":{},"一":{"docs":{},"下":{"docs":{},"就":{"docs":{},"成":{"docs":{},"功":{"docs":{},"了":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}}}}},"初":{"docs":{},"始":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"左":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}},"右":{"docs":{},"分":{"docs":{},"支":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}},"要":{"docs":{},"找":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549}}}}}}}}},"记":{"docs":{},"录":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"取":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}},"有":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"等":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"能":{"docs":{},"继":{"docs":{},"续":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"都":{"docs":{},"为":{"docs":{},"空":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}},"出":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"存":{"docs":{},"放":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}},"按":{"docs":{},"照":{"docs":{},"左":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}},"栈":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}},"直":{"docs":{},"至":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"即":{"docs":{},"没":{"docs":{},"有":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"止":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}},"\"":{"0":{"0":{"0":{"9":{"0":{"0":{"7":{"1":{"9":{"9":{"2":{"5":{"4":{"7":{"4":{"0":{"9":{"9":{"1":{"docs":{},"\"":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"docs":{},"\"":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"进":{"docs":{},"位":{"docs":{},"\"":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"取":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"加":{"docs":{},"法":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"m":{"docs":{},"y":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"执":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"其":{"docs":{},"原":{"docs":{},"型":{"docs":{},"链":{"docs":{},"上":{"docs":{},"写":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"用":{"0":{"docs":{},"去":{"docs":{},"补":{"docs":{},"齐":{"docs":{},"长":{"docs":{},"度":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"docs":{},"来":{"docs":{},"存":{"docs":{},"放":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"k":{"docs":{},"v":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}},"给":{"docs":{},"他":{"docs":{},"一":{"docs":{},"次":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}},"行":{"docs":{},"清":{"docs":{},"零":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}},"包":{"docs":{},"括":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"情":{"docs":{},"况":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"情":{"docs":{},"况":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"往":{"docs":{},"后":{"docs":{},"走":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}},"k":{"docs":{},"步":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}},"把":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"删":{"docs":{},"掉":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"的":{"docs":{},"话":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}},"计":{"docs":{},"算":{"docs":{},"下":{"docs":{},"总":{"docs":{},"长":{"docs":{},"度":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}},"重":{"docs":{},"新":{"docs":{},"置":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}},"进":{"docs":{},"位":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}},"都":{"docs":{},"走":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"回":{"docs":{},"文":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}},"c":{"docs":{},"n":{"docs":{},"t":{"docs":{},"在":{"docs":{},"下":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"循":{"docs":{},"环":{"docs":{},"时":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"0":{"docs":{},"位":{"docs":{},"的":{"docs":{},"左":{"docs":{},"侧":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"1":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"保":{"docs":{},"存":{"0":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"位":{"1":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}},"docs":{}}}}}}}},"docs":{}}}}}},"类":{"docs":{},"似":{"1":{"1":{"1":{"0":{"0":{"1":{"1":{"0":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"需":{"docs":{},"再":{"docs":{},"比":{"docs":{},"较":{"docs":{},"一":{"docs":{},"次":{"docs":{},"；":{"docs":{"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"*":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}},"*":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.029411764705882353},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.02666666666666667},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.036036036036036036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.056818181818181816},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.05217391304347826},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.022123893805309734},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.04411764705882353},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.043478260869565216},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}},"[":{"docs":{},"^":{"1":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}},"docs":{}}},"^":{"docs":{},"[":{"docs":{},"\\":{"docs":{},"+":{"docs":{},"|":{"docs":{},"\\":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}}}}},"[":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}},"1":{"docs":{},",":{"1":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"docs":{}}},"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}},"2":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"3":{"docs":{},",":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}},"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}},"]":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.012727272727272728},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.023622047244094488},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.008849557522123894},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/幂集.html":{"ref":"程序员面试金典/递归与动态规划/幂集.html","tf":0.041666666666666664},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576}},";":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}},"/":{"docs":{},"/":{"9":{"docs":{},"宫":{"docs":{},"格":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}},"docs":{},"行":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}},",":{"docs":{"easy/String/字符串中的第一个唯一字符.html":{"ref":"easy/String/字符串中的第一个唯一字符.html","tf":0.024390243902439025},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}}}}}}}}},")":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},"]":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"2":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"0":{"docs":{},",":{"2":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"]":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}},"docs":{}}}}}},"]":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"]":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{},";":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"]":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}},",":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}},"n":{"docs":{},"]":{"docs":{},",":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"]":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}},",":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.05555555555555555}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},",":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}},"]":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}},"b":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.10256410256410256},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.031914893617021274}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}},"u":{"docs":{},"y":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.06382978723404255},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}},")":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"g":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}},"(":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.014545454545454545}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"s":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}},"docs":{}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"o":{"docs":{},"l":{"docs":{"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947}},":":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.022857142857142857},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.014285714285714285}},"[":{"docs":{},"]":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.031007751937984496}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567}}}}}}}}}}}}}},"t":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"a":{"docs":{},"o":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}},"a":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}},"s":{"docs":{},"e":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}},"d":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.030303030303030304}}},")":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}}}}},"]":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.05555555555555555}}},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.022727272727272728}}}}}}},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903}}},",":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903}}},",":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.05660377358490566}}}}}}}}}}}}},")":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.038461538461538464},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},";":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}}},"f":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}},",":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617}}}},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"先":{"docs":{},"加":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"个":{"docs":{},"位":{"docs":{},"数":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"判":{"docs":{},"断":{"docs":{},"个":{"docs":{},"位":{"docs":{},"+":{"docs":{},"+":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"这":{"docs":{},"时":{"docs":{},"候":{"docs":{},"i":{"docs":{},"是":{"0":{"docs":{},")":{"docs":{},"，":{"docs":{"easy/Array/加一.html":{"ref":"easy/Array/加一.html","tf":0.017857142857142856}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"开":{"docs":{},"始":{"docs":{},",":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}},"docs":{}}}}}},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"相":{"docs":{},"同":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"用":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"去":{"docs":{},"除":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"记":{"docs":{},"得":{"docs":{},"j":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"我":{"docs":{},"们":{"docs":{},"至":{"docs":{},"少":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"作":{"docs":{},"为":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"分":{"docs":{},"割":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"反":{"docs":{},"向":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"下":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"放":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"里":{"docs":{},"去":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.07086614173228346},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}},"&":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0392156862745098},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.03333333333333333},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787},"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.020618556701030927},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.02857142857142857},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.03389830508474576},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}}}},"*":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.05555555555555555},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.04838709677419355},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.0425531914893617},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.025210084033613446},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.044444444444444446},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.07142857142857142},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.11864406779661017},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.09411764705882353},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.14545454545454545},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.10144927536231885},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.10294117647058823},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.042682926829268296},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.09722222222222222},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0958904109589041},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.09090909090909091},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.09333333333333334},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0684931506849315},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.16666666666666666},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0945945945945946},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.06818181818181818},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.020618556701030927},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.015384615384615385},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.05925925925925926},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.046153846153846156},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.058823529411764705},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.037037037037037035},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.03773584905660377},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.047619047619047616},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.058823529411764705},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.02531645569620253},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.045454545454545456},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0784313725490196},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.08163265306122448},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.10434782608695652},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.05660377358490566},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.048672566371681415},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.058823529411764705},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.0625},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.17391304347826086},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.041666666666666664},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.10416666666666667},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.07692307692307693},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.07142857142857142},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"/":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.03389830508474576},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.028985507246376812},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.029411764705882353},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.012195121951219513},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0273972602739726},"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.025974025974025976},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.02666666666666667},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.036036036036036036},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.056818181818181816},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.012987012987012988},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.04081632653061224},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.05217391304347826},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.022123893805309734},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.04411764705882353},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.043478260869565216},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}},"代":{"docs":{},"表":{"docs":{},"匹":{"docs":{},"配":{"0":{"docs":{},"次":{"docs":{},"以":{"docs":{},"上":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}},"docs":{}}}}}},"@":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.037037037037037035},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.03225806451612903},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.023529411764705882},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.03636363636363636},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0547945205479452},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0392156862745098},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.0196078431372549},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.061224489795918366},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.03773584905660377},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.004424778761061947},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.043478260869565216},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.08333333333333333},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.05128205128205128},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.031914893617021274},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516},"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.013888888888888888},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.045454545454545456},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.018018018018018018},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.045454545454545456},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872},"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745},"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.034782608695652174},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.017699115044247787},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.04411764705882353},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425},"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}}}},"e":{"1":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}},"docs":{}},"p":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.010362694300518135}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}},";":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.008635578583765112}}},"a":{"docs":{},"y":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}},".":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}}}}},"(":{"2":{"6":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.04081632653061224}}}},"docs":{}}}}}}}}},"docs":{}},"docs":{},"m":{"docs":{},")":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}},"n":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}},"docs":{}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}},"j":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"docs":{}},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"为":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"从":{"docs":{},"最":{"docs":{},"低":{"docs":{},"位":{"docs":{},"开":{"docs":{},"始":{"docs":{},"取":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"组":{"docs":{},"成":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"x":{"docs":{},"数":{"docs":{},"组":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.07272727272727272},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0784313725490196},"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.06},"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525},"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.030927835051546393},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.03125},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.057971014492753624},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}}}},"s":{"docs":{},")":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0392156862745098}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.0379746835443038}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}}}}}}}}}}},";":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},".":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}},"d":{"docs":{},"o":{"docs":{},"g":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}}}},"d":{"docs":{},"d":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223}},";":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.014814814814814815}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}},"r":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"b":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}}}}},";":{"docs":{"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.027777777777777776}}}},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.020833333333333332},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.0425531914893617}},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"右":{"docs":{},"数":{"docs":{},"第":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}},"j":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}}}}}}}}}}},"q":{"docs":{},"]":{"docs":{},";":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}}}},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"c":{"docs":{},"c":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"w":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886}},")":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}},"便":{"docs":{},"利":{"docs":{},"数":{"docs":{},"组":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"2":{"docs":{},"里":{"docs":{},"面":{"docs":{},"有":{"docs":{},"，":{"docs":{},"则":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"是":{"docs":{},"判":{"docs":{},"断":{"docs":{},"之":{"docs":{},"后":{"docs":{},"要":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{},"把":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"且":{"docs":{},"同":{"docs":{},"时":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"给":{"docs":{},"去":{"docs":{},"掉":{"docs":{"easy/Array/两个数组的交集.html":{"ref":"easy/Array/两个数组的交集.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}},",":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}},"a":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"[":{"docs":{},"a":{"docs":{},"[":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{},",":{"docs":{},"i":{"docs":{},"]":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"k":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"s":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"是":{"docs":{},"外":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"docs":{},"k":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"举":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}},"到":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}},"i":{"docs":{},"=":{"6":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},",":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}},"docs":{}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"3":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},"再":{"docs":{},"次":{"docs":{},"被":{"docs":{},"置":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"2":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"只":{"docs":{},"有":{"docs":{},"头":{"docs":{},"部":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}},"然":{"docs":{},"后":{"docs":{},"后":{"docs":{},"面":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"a":{"docs":{},"[":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{},"就":{"docs":{},"是":{"docs":{},"之":{"docs":{},"前":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"easy/Array/两数之和.html":{"ref":"easy/Array/两数之和.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"面":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"出":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"塞":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{},"面":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"加":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"计":{"docs":{},"数":{"docs":{},"通":{"docs":{},"过":{"docs":{},"了":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}}}}}}}}}}}}}}},"思":{"docs":{},"考":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"如":{"docs":{},"何":{"docs":{},"转":{"docs":{},"移":{"docs":{},"」":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"」":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"得":{"docs":{},"到":{"docs":{},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"修":{"docs":{},"改":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"目":{"docs":{},"的":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"得":{"docs":{},"到":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"」":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"异":{"docs":{},"或":{"docs":{},"就":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"和":{"docs":{},"上":{"docs":{},"面":{"docs":{},"一":{"docs":{},"样":{"docs":{},"消":{"docs":{},"为":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"起":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"者":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"（":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"内":{"docs":{},"存":{"docs":{},"地":{"docs":{},"址":{"docs":{},"）":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"从":{"docs":{},"同":{"docs":{},"类":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"值":{"docs":{},"来":{"docs":{},"分":{"docs":{},"类":{"docs":{},"。":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0364963503649635},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/Tree/二叉树的层序遍历.html":{"ref":"easy/Tree/二叉树的层序遍历.html","tf":0.027777777777777776},"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.05454545454545454},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549},"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0273972602739726},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.02197802197802198},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007},"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.009009009009009009},"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.031007751937984496},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.044444444444444446},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.04081632653061224},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.04727272727272727},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.03787878787878788},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.06829268292682927},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.015625},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.01818181818181818},"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.034482758620689655},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.028368794326241134},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.057971014492753624},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.05660377358490566},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.02857142857142857},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.012089810017271158}},"=":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/Tree/左叶子之和.html":{"ref":"easy/Tree/左叶子之和.html","tf":0.0196078431372549},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.02197802197802198},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.014184397163120567},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.05263157894736842}}},"+":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}},"i":{"docs":{},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}},";":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198}}}},"n":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}}}},"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}}}}}},"docs":{}}}}},">":{"1":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}},"2":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00796812749003984}}},"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.14285714285714285},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941},"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.017142857142857144},"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"程序员面试金典/栈与队列/栈排序.html":{"ref":"程序员面试金典/栈与队列/栈排序.html","tf":0.04424778761061947},"程序员面试金典/栈与队列/动物收容所.html":{"ref":"程序员面试金典/栈与队列/动物收容所.html","tf":0.014705882352941176},"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.05128205128205128},"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},"=":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.021739130434782608},"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},">":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.03937007874015748},"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}},"=":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.014492753623188406}}},">":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992}}}},"'":{"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085}}}},"m":{"1":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992}}}},"2":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992}}}},"4":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992}}}},"8":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}},")":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.015748031496062992}}}},"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0410958904109589},"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.015384615384615385},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.07894736842105263},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.0625}},"a":{"docs":{},"x":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"normal/DP/LIS.html":{"ref":"normal/DP/LIS.html","tf":0.038461538461538464},"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.033210332103321034},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.01090909090909091}},")":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253}},")":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.02531645569620253}}}}}},"i":{"docs":{},"n":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.015151515151515152},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},",":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.04},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.06818181818181818}}},"(":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}},"(":{"docs":{},"m":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}},"s":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}}}}}}}},"docs":{}},")":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}}},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}},"a":{"docs":{},"n":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.01652892561983471}},"s":{"docs":{},";":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/岛屿的最大面积.html":{"ref":"byteDance/array&sort/岛屿的最大面积.html","tf":0.05263157894736842}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.04132231404958678}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.023255813953488372}},")":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}},";":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.015503875968992248}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0036363636363636364}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}},"e":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333},"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}},";":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.03896103896103896}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}},";":{"docs":{"normal/Array&String/矩阵置零.html":{"ref":"normal/Array&String/矩阵置零.html","tf":0.03333333333333333}}}}}}}}}}}},"docs":{}}}}},"h":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}},"j":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}}}},"u":{"docs":{},"m":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}},"t":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/最小高度树.html":{"ref":"程序员面试金典/树与图/最小高度树.html","tf":0.02631578947368421},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"/":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"docs":{}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0392156862745098}}}},"docs":{}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"程序员面试金典/位操作/翻转数位.html":{"ref":"程序员面试金典/位操作/翻转数位.html","tf":0.028985507246376812}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"l":{"docs":{},",":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},",":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"docs":{},"m":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.029411764705882353}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}},"p":{"docs":{},"r":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"easy/Tree/二叉搜索树最小绝对差.html":{"ref":"easy/Tree/二叉搜索树最小绝对差.html","tf":0.02}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"docs":{}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}},"p":{"1":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}},"2":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}},"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.031746031746031744},"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.0189873417721519},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.02197802197802198},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}},"(":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.1},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.018867924528301886}}}},"s":{"docs":{},"k":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"y":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.06382978723404255},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}}}}},"v":{"docs":{},"e":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.0625}}}}}},"(":{"docs":{},"m":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085}}},"n":{"docs":{},",":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}},"d":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"easy/LinkedList/删除链表中的节点.html":{"ref":"easy/LinkedList/删除链表中的节点.html","tf":0.01694915254237288},"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}},"e":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}},",":{"docs":{"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}}}}}},"y":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"i":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"i":{"docs":{},"n":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334},"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.022727272727272728}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"easy/Tree/二叉树的最小深度.html":{"ref":"easy/Tree/二叉树的最小深度.html","tf":0.0196078431372549}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},",":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}}}},"docs":{}}}}}}}}}}}}}},")":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.04},"程序员面试金典/树与图/合法二叉搜索树.html":{"ref":"程序员面试金典/树与图/合法二叉搜索树.html","tf":0.09090909090909091}},";":{"docs":{"easy/Tree/验证二叉搜索树.html":{"ref":"easy/Tree/验证二叉搜索树.html","tf":0.013333333333333334}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{}}}}},"u":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}},"e":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.017391304347826087}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364},"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/翻转二叉树.html":{"ref":"easy/Tree/翻转二叉树.html","tf":0.01818181818181818}}}}}}}}}}}},"d":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.06923076923076923},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.03636363636363636},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},")":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}},")":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}},";":{"docs":{"easy/Tree/将有序数组转换为二叉搜索树.html":{"ref":"easy/Tree/将有序数组转换为二叉搜索树.html","tf":0.012987012987012988}}}}},"，":{"docs":{},"则":{"docs":{},"替":{"docs":{},"换":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"说":{"docs":{},"明":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"，":{"docs":{},"若":{"docs":{},"大":{"docs":{},"于":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}},"]":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},"有":{"docs":{},"序":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}},",":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863},"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}},"]":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}},")":{"docs":{"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.02564102564102564}}}}}}}}},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"可":{"docs":{},"以":{"docs":{},"第":{"docs":{},"一":{"docs":{},"天":{"docs":{},"买":{"docs":{},"入":{"docs":{},"，":{"docs":{},"第":{"3":{"docs":{},"天":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"。":{"docs":{},"得":{"docs":{},"出":{"docs":{},"利":{"docs":{},"润":{"docs":{},"一":{"docs":{},"致":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085}}}}}}}}}}}}},"docs":{}}}}}}}}},"交":{"docs":{},"易":{"docs":{},"多":{"docs":{},"次":{"docs":{},"的":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"能":{"docs":{},"有":{"docs":{},"点":{"docs":{},"偏":{"docs":{},"题":{"docs":{},"，":{"docs":{},"毕":{"docs":{},"竟":{"docs":{},"这":{"docs":{},"里":{"docs":{},"主":{"docs":{},"要":{"docs":{},"就":{"docs":{},"是":{"docs":{},"做":{"docs":{},"题":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"。":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}},"唯":{"docs":{},"一":{"docs":{},"比":{"docs":{},"较":{"docs":{},"绕":{"docs":{},"的":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"同":{"docs":{},"一":{"docs":{},"天":{"docs":{},"进":{"docs":{},"行":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"和":{"docs":{},"买":{"docs":{},"入":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"(":{"docs":{},"首":{"docs":{},"先":{"docs":{},"题":{"docs":{},"目":{"docs":{},"没":{"docs":{},"有":{"docs":{},"规":{"docs":{},"定":{"docs":{},"这":{"docs":{},"样":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},")":{"docs":{},"。":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"如":{"docs":{"easy/Array/买股票最佳时机.html":{"ref":"easy/Array/买股票最佳时机.html","tf":0.02127659574468085},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"当":{"docs":{},"第":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"最":{"docs":{},"后":{"docs":{},"单":{"docs":{},"独":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"0":{"docs":{},"取":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"放":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"后":{"docs":{},"面":{"docs":{"easy/Array/移动零.html":{"ref":"easy/Array/移动零.html","tf":0.03125}}}}}}}}}}}}}}},"docs":{}}}},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/Design/最小栈.html":{"ref":"easy/Design/最小栈.html","tf":0.011363636363636364}}}}}}},"终":{"docs":{},"于":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"对":{"docs":{},"了":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}}}},"了":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"大":{"docs":{},"，":{"docs":{},"就":{"docs":{},"交":{"docs":{},"换":{"docs":{},"它":{"docs":{},"们":{"docs":{},"两":{"docs":{},"个":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"通":{"docs":{},"过":{"docs":{},"比":{"docs":{},"较":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"元":{"docs":{},"素":{"docs":{},"间":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"次":{"docs":{},"序":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"能":{"docs":{},"突":{"docs":{},"破":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"比":{"docs":{},"较":{"docs":{},"类":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"熟":{"docs":{},"悉":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"和":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"用":{"docs":{},"法":{"docs":{"easy/Array/旋转数组.html":{"ref":"easy/Array/旋转数组.html","tf":0.05}}}}}}}}}}}}}}}}},"了":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"写":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{},"组":{"docs":{},"就":{"docs":{},"行":{"docs":{},"了":{"docs":{},"。":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"&":{"docs":{},"结":{"docs":{},"果":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"不":{"docs":{},"为":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}},"。":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"借":{"docs":{},"用":{"docs":{},"局":{"docs":{},"部":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}},"发":{"docs":{},"现":{"docs":{},"把":{"docs":{},"每":{"docs":{},"个":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"项":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"取":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"变":{"docs":{},"成":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"项":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"那":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"下":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"用":{"docs":{},"了":{"docs":{},"局":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"原":{"docs":{},"地":{"docs":{},"，":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"目":{"docs":{},"。":{"docs":{},"方":{"docs":{},"案":{"docs":{},"二":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"我":{"docs":{},"是":{"docs":{},"打":{"docs":{},"算":{"docs":{},"在":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"后":{"docs":{},"面":{"docs":{},"再":{"docs":{},"加":{"docs":{},"两":{"docs":{},"个":{"docs":{},"空":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"也":{"docs":{},"不":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"意":{"docs":{},"的":{"docs":{},"原":{"docs":{},"地":{"docs":{},"旋":{"docs":{},"转":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"，":{"docs":{},"我":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"在":{"docs":{},"纠":{"docs":{},"结":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}},"果":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"docs":{},"就":{"docs":{},"是":{"docs":{},"到":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"是":{"docs":{},"头":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{},"(":{"docs":{},"题":{"docs":{},"目":{"docs":{},"里":{"docs":{},"保":{"docs":{},"证":{"docs":{},"n":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"不":{"docs":{},"会":{"docs":{},"超":{"docs":{},"过":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},")":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"三":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{},"一":{"docs":{},"定":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"结":{"docs":{},"束":{"docs":{},"循":{"docs":{},"环":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}},"是":{"docs":{},"针":{"docs":{},"对":{"docs":{},"面":{"docs":{},"试":{"docs":{},"，":{"docs":{},"请":{"docs":{},"自":{"docs":{},"行":{"docs":{},"把":{"docs":{},"握":{"docs":{},"难":{"docs":{},"度":{"docs":{},"。":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"常":{"docs":{},"见":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"理":{"docs":{},"解":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"是":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"规":{"docs":{},"模":{"docs":{},"问":{"docs":{},"题":{"docs":{},"出":{"docs":{},"发":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"得":{"docs":{},"到":{"docs":{},"大":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"，":{"docs":{},"并":{"docs":{},"记":{"docs":{},"录":{"docs":{},"中":{"docs":{},"间":{"docs":{},"过":{"docs":{},"程":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"全":{"docs":{},"部":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"毕":{"docs":{},"后":{"docs":{},"，":{"docs":{},"进":{"docs":{},"位":{"docs":{},"值":{"docs":{},"为":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}},"我":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"他":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"字":{"docs":{},"符":{"docs":{},"集":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"他":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"里":{"docs":{},"有":{"docs":{},"边":{"docs":{},"界":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"针":{"docs":{},"对":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"侧":{"docs":{},"重":{"docs":{},"点":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"字":{"docs":{},"符":{"docs":{},"集":{"docs":{},"，":{"docs":{},"那":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"1":{"2":{"8":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"，":{"1":{"6":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"的":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"老":{"docs":{},"老":{"docs":{},"实":{"docs":{},"实":{"docs":{},"排":{"docs":{},"序":{"docs":{},"再":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"符":{"docs":{},"合":{"docs":{},"我":{"docs":{},"对":{"docs":{},"工":{"docs":{},"程":{"docs":{},"师":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"算":{"docs":{},"法":{"docs":{},"性":{"docs":{},"能":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"额":{"docs":{},"外":{"docs":{},"资":{"docs":{},"源":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"看":{"docs":{},"出":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"不":{"docs":{},"可":{"docs":{},"预":{"docs":{},"见":{"docs":{},"的":{"docs":{},"风":{"docs":{},"险":{"docs":{},"，":{"1":{"0":{"0":{"docs":{},"分":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"面":{"docs":{},"试":{"docs":{},"官":{"docs":{},"，":{"docs":{},"会":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"主":{"docs":{},"要":{"docs":{},"考":{"docs":{},"察":{"docs":{},"什":{"docs":{},"么":{"docs":{},"，":{"docs":{},"就":{"docs":{},"我":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"经":{"docs":{},"验":{"docs":{},"看":{"docs":{},"，":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"招":{"docs":{},"聘":{"docs":{},"工":{"docs":{},"程":{"docs":{},"师":{"docs":{},"的":{"docs":{},"，":{"docs":{},"面":{"docs":{},"试":{"docs":{},"者":{"docs":{},"如":{"docs":{},"果":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"写":{"docs":{},"个":{"docs":{},"二":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"搞":{"docs":{},"定":{"docs":{},"，":{"docs":{},"会":{"docs":{},"首":{"docs":{},"先":{"docs":{},"给":{"docs":{},"个":{"5":{"0":{"docs":{},"分":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"能":{"docs":{},"写":{"docs":{},"点":{"docs":{},"判":{"docs":{},"断":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"的":{"docs":{},"，":{"6":{"0":{"docs":{},"分":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"会":{"docs":{},"希":{"docs":{},"望":{"docs":{},"看":{"docs":{},"到":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"单":{"docs":{},"独":{"docs":{},"位":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"不":{"docs":{},"止":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}},"正":{"docs":{},"向":{"docs":{},"存":{"docs":{},"放":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"要":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"下":{"docs":{"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"就":{"docs":{},"直":{"docs":{},"接":{"docs":{},"退":{"docs":{},"出":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}}}}}}}}}}}}}}}}},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"（":{"docs":{},"已":{"docs":{},"排":{"docs":{},"序":{"docs":{},"）":{"docs":{},"大":{"docs":{},"于":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"移":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"对":{"docs":{},"于":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"转":{"docs":{},"置":{"docs":{},"一":{"docs":{},"下":{"docs":{},"有":{"docs":{},"奇":{"docs":{},"效":{"docs":{},"！":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}},"概":{"docs":{},"率":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"，":{"docs":{},"都":{"docs":{},"是":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"替":{"docs":{},"换":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"干":{"docs":{},"扰":{"docs":{},"我":{"docs":{},"们":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"！":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"期":{"docs":{},"望":{"docs":{},"面":{"docs":{},"试":{"docs":{},"者":{"docs":{},"不":{"docs":{},"要":{"docs":{},"急":{"docs":{},"于":{"docs":{},"解":{"docs":{},"答":{"docs":{},"，":{"docs":{},"我":{"docs":{},"希":{"docs":{},"望":{"docs":{},"他":{"docs":{},"先":{"docs":{},"问":{"docs":{},"我":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"利":{"docs":{},"润":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"s":{"1":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"]":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"把":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}},"矩":{"docs":{},"阵":{"docs":{},"看":{"docs":{},"为":{"docs":{},"一":{"docs":{},"层":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"外":{"docs":{},"层":{"docs":{},"到":{"docs":{},"内":{"docs":{},"层":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"外":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"看":{"docs":{},"成":{"docs":{},"四":{"docs":{},"个":{"docs":{},"小":{"docs":{},"的":{"docs":{},"块":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"内":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"5":{"docs":{},"，":{"docs":{},"答":{"docs":{},"案":{"docs":{},"里":{"docs":{},"的":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{},"稍":{"docs":{},"微":{"docs":{},"难":{"docs":{},"理":{"docs":{},"解":{"docs":{},"一":{"docs":{},"些":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}}}}}}}}},"docs":{},"三":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}},"二":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}},"，":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"乱":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}},"一":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}},"程":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"一":{"docs":{},"下":{"docs":{"easy/Array/旋转图像.html":{"ref":"easy/Array/旋转图像.html","tf":0.012987012987012988}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"自":{"docs":{},"博":{"docs":{},"客":{"docs":{},"园":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}},")":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}},".":{"docs":{},"'":{"docs":{"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421}}}}},"1":{"2":{"3":{"4":{"5":{"6":{"7":{"8":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"9":{"docs":{},"'":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"'":{"docs":{},",":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"'":{"1":{"docs":{},",":{"2":{"3":{"4":{"docs":{},"'":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{},"'":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"9":{"0":{"0":{"7":{"1":{"9":{"9":{"2":{"5":{"4":{"7":{"4":{"0":{"9":{"9":{"1":{"docs":{},"'":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.02127659574468085}},".":{"docs":{},"'":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}},")":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.01680672268907563}}}},".":{"docs":{},"'":{"docs":{},")":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}}}},"'":{"docs":{"easy/String/最长公共前缀.html":{"ref":"easy/String/最长公共前缀.html","tf":0.03571428571428571},"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.045454545454545456}},")":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406},"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}},")":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"byteDance/string/翻转字符串里的单词.html":{"ref":"byteDance/string/翻转字符串里的单词.html","tf":0.029411764705882353}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"%":{"2":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}}}},"docs":{}},"docs":{}}}}}}}}}},"/":{"docs":{},"'":{"docs":{"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517}}}},",":{"docs":{},"'":{"docs":{},")":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}},"_":{"docs":{},"'":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}},"%":{"2":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/数组与字符串/URL化.html":{"ref":"程序员面试金典/数组与字符串/URL化.html","tf":0.0196078431372549}}}}},"docs":{}},"docs":{}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"'":{"docs":{"程序员面试金典/位操作/二进制数转字符串.html":{"ref":"程序员面试金典/位操作/二进制数转字符串.html","tf":0.02631578947368421}}}}}}}},"(":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}},"q":{"docs":{},"'":{"docs":{},")":{"docs":{"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}}}}}}}}}},"列":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}},"另":{"docs":{},"外":{"docs":{},"和":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"两":{"docs":{},"树":{"docs":{},"之":{"docs":{},"和":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"保":{"docs":{},"存":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"值":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},")":{"docs":{},",":{"docs":{},"如":{"docs":{},"果":{"docs":{},"后":{"docs":{},"面":{"docs":{},"再":{"docs":{},"一":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"了":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"我":{"docs":{},"们":{"docs":{},"更":{"docs":{},"新":{"docs":{},"了":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}},"司":{"docs":{},"徒":{"docs":{},"大":{"docs":{},"大":{"docs":{},"的":{"docs":{},"解":{"docs":{},"，":{"docs":{},"很":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"开":{"docs":{},"始":{"docs":{},"写":{"docs":{},"的":{"docs":{"easy/Array/有效的数独.html":{"ref":"easy/Array/有效的数独.html","tf":0.008403361344537815}}}},"还":{"docs":{},"以":{"docs":{},"为":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"那":{"docs":{},"个":{"docs":{},"买":{"docs":{},"股":{"docs":{},"票":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"时":{"docs":{},"期":{"docs":{},"题":{"docs":{},"目":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"交":{"docs":{},"易":{"docs":{},"一":{"docs":{},"次":{"docs":{},"￣":{"docs":{},"□":{"docs":{},"￣":{"docs":{},"｜":{"docs":{},"｜":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"们":{"docs":{},"发":{"docs":{},"现":{"docs":{},"：":{"docs":{},"其":{"docs":{},"实":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"关":{"docs":{},"心":{"docs":{},"之":{"docs":{},"前":{"docs":{},"（":{"docs":{},"不":{"docs":{},"包":{"docs":{},"括":{"docs":{},"现":{"docs":{},"在":{"docs":{},"）":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"股":{"docs":{},"价":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"之":{"docs":{},"前":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"低":{"docs":{},"股":{"docs":{},"价":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"省":{"docs":{},"去":{"docs":{},"内":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"观":{"docs":{},"察":{"docs":{},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}},"想":{"docs":{},"起":{"docs":{},"了":{"docs":{},"在":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"j":{"docs":{},"s":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"源":{"docs":{},"码":{"docs":{},"里":{"docs":{},"有":{"docs":{},"个":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"方":{"docs":{},"法":{"docs":{},",":{"docs":{},"就":{"docs":{},"是":{"docs":{},"多":{"docs":{},"看":{"docs":{},"下":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"感":{"docs":{},"觉":{"docs":{},"就":{"docs":{},"是":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"，":{"docs":{},"试":{"docs":{"程序员面试金典/树与图/求和路径.html":{"ref":"程序员面试金典/树与图/求和路径.html","tf":0.021739130434782608}}}}}}}}}}},"异":{"docs":{},"或":{"docs":{},"简":{"docs":{},"单":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}},"，":{"docs":{},"答":{"docs":{},"案":{"docs":{},"里":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"，":{"docs":{},"很":{"docs":{},"神":{"docs":{},"奇":{"docs":{},"。":{"0":{"docs":{},"^":{"1":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}},"docs":{}}},"docs":{}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"算":{"docs":{},"下":{"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903}}}},"计":{"docs":{},"算":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}}}}}},"docs":{}}}}}}}},"正":{"docs":{},"则":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"是":{"1":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}}}},"docs":{}}}}}}}}}}}}}}}}},"要":{"docs":{},"好":{"docs":{},"好":{"docs":{},"学":{"docs":{},"啊":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"向":{"docs":{"easy/LinkedList/回文链表.html":{"ref":"easy/LinkedList/回文链表.html","tf":0.014492753623188406}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"，":{"docs":{},"两":{"docs":{},"两":{"docs":{},"对":{"docs":{},"比":{"docs":{"easy/Array/只出现一次的数字.html":{"ref":"easy/Array/只出现一次的数字.html","tf":0.024390243902439025}}}}}}}}}}}}},"其":{"docs":{},"他":{"docs":{},"比":{"docs":{},"较":{"docs":{},"巧":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"详":{"docs":{},"见":{"docs":{},"题":{"docs":{},"解":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{},"理":{"docs":{},"解":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"图":{"docs":{"easy/LinkedList/合并两个有序链表.html":{"ref":"easy/LinkedList/合并两个有序链表.html","tf":0.01818181818181818}}}}}}}}}}}},"不":{"docs":{},"会":{"docs":{},",":{"docs":{},"学":{"docs":{},"习":{"docs":{},"下":{"docs":{"easy/Tree/二叉搜索树中的众树.html":{"ref":"easy/Tree/二叉搜索树中的众树.html","tf":0.012658227848101266}}}}}}}},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"替":{"docs":{},"换":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}},"没":{"docs":{},"学":{"docs":{},"会":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}},"官":{"docs":{},"方":{"docs":{},"答":{"docs":{},"案":{"docs":{},"里":{"docs":{},"的":{"docs":{},"，":{"docs":{},"很":{"docs":{},"优":{"docs":{},"雅":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"游":{"docs":{},"标":{"docs":{},"，":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},",":{"docs":{},"每":{"docs":{},"当":{"docs":{},"出":{"docs":{},"现":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}}},"题":{"docs":{},"解":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}},"里":{"docs":{},"有":{"docs":{},"个":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"整":{"docs":{},"理":{"docs":{},"的":{"docs":{},"特":{"docs":{},"别":{"docs":{},"好":{"docs":{},",":{"docs":{},"所":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"摘":{"docs":{},"录":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223}},"；":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.014760147601476014}}}},"^":{"2":{"docs":{},")":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}},"，":{"docs":{},"n":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}},"docs":{}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}}}},"和":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}},"r":{"docs":{},"]":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"来":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{},"整":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"easy/Array/删除排序数组中的重复项.html":{"ref":"easy/Array/删除排序数组中的重复项.html","tf":0.022222222222222223},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"以":{"docs":{},"后":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"只":{"docs":{},"用":{"docs":{},"了":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}}}}},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"题":{"docs":{},"？":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}},"还":{"docs":{},"是":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}},")":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818},"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.04395604395604396},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.01951219512195122},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.007272727272727273},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/递归与动态规划/八皇后.html":{"ref":"程序员面试金典/递归与动态规划/八皇后.html","tf":0.01694915254237288},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"。":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}},"倒":{"docs":{},"着":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"进":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"删":{"docs":{},"掉":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}},"镜":{"docs":{},"像":{"docs":{},"循":{"docs":{},"环":{"docs":{},"长":{"docs":{},"度":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"/":{"2":{"docs":{},",":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{"easy/String/反转字符串.html":{"ref":"easy/String/反转字符串.html","tf":0.01818181818181818}}}}}}}},"docs":{}}}}}}}}}}}}}},"|":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.03937007874015748},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561}},"|":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612},"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513},"easy/LinkedList/环形链表.html":{"ref":"easy/LinkedList/环形链表.html","tf":0.014705882352941176},"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.02197802197802198},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009},"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.061855670103092786},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.04285714285714286},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835},"程序员面试金典/树与图/路径总和2.html":{"ref":"程序员面试金典/树与图/路径总和2.html","tf":0.017857142857142856},"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.020833333333333332},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"程序员面试金典/递归与动态规划/颜色填充.html":{"ref":"程序员面试金典/递归与动态规划/颜色填充.html","tf":0.04285714285714286},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}},"=":{"docs":{"easy/Other/颠倒二进制位.html":{"ref":"easy/Other/颠倒二进制位.html","tf":0.007874015748031496}}}},"上":{"docs":{},"符":{"docs":{},"号":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}},"面":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"有":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"当":{"docs":{},"已":{"docs":{},"经":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"即":{"docs":{},"为":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}}},"项":{"docs":{},"或":{"docs":{},"左":{"docs":{},"项":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"的":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085}}}},"先":{"docs":{},"取":{"docs":{},"符":{"docs":{},"号":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"把":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"往":{"docs":{},"后":{"docs":{},"移":{"docs":{},"动":{"docs":{},"n":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"easy/LinkedList/删除链表的倒数第N个节点.html":{"ref":"easy/LinkedList/删除链表的倒数第N个节点.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"数":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}},"从":{"docs":{},"n":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"中":{"docs":{},"，":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"与":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"：":{"docs":{},"是":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"，":{"docs":{},"即":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"时":{"docs":{},"，":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"为":{"docs":{},"空":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"快":{"docs":{},"排":{"docs":{},"是":{"docs":{"byteDance/array&sort/最长连续序列.html":{"ref":"byteDance/array&sort/最长连续序列.html","tf":0.01098901098901099}}}}}}}},"判":{"docs":{},"断":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"返":{"docs":{},"回":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"再":{"docs":{},"在":{"docs":{},"后":{"docs":{},"续":{"docs":{},"长":{"docs":{},"度":{"docs":{},"一":{"docs":{},"样":{"docs":{},"地":{"docs":{},"方":{"docs":{},"开":{"docs":{},"始":{"docs":{},"遍":{"docs":{},"历":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"看":{"docs":{},"数":{"docs":{},"组":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"后":{"docs":{},"续":{"docs":{"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"为":{"docs":{},"若":{"docs":{},"干":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"别":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"接":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"算":{"docs":{},"法":{"docs":{},"描":{"docs":{},"述":{"docs":{},"：":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"符":{"docs":{},"号":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}},"合":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"则":{"docs":{},"收":{"docs":{},"集":{"docs":{"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","tf":0.03225806451612903},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}}}}},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}},"采":{"docs":{},"用":{"docs":{},"e":{"docs":{},"s":{"6":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}},"docs":{}}}}},"，":{"docs":{},"负":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{"easy/String/整数反转.html":{"ref":"easy/String/整数反转.html","tf":0.02040816326530612}}}}}},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"滚":{"docs":{},"动":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"根":{"docs":{},"据":{"docs":{},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"别":{"docs":{},"用":{"docs":{},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"我":{"docs":{},"们":{"docs":{},"求":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}},"关":{"docs":{},"键":{"docs":{},"注":{"docs":{},"意":{"docs":{},"最":{"docs":{},"后":{"docs":{},"还":{"docs":{},"要":{"docs":{},"加":{"docs":{},"上":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}}}}}}}}},"当":{"docs":{},"然":{"docs":{},"d":{"docs":{},"要":{"docs":{},"远":{"docs":{},"远":{"docs":{},"小":{"docs":{},"于":{"docs":{},"n":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"还":{"docs":{},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"级":{"docs":{},"别":{"docs":{},"的":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"1":{"1":{"1":{"2":{"2":{"1":{"docs":{},"\"":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"\"":{"docs":{},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401}}}}},"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"中":{"docs":{},"国":{"docs":{},"\"":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}},"中":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"a":{"docs":{},"r":{"docs":{},"国":{"docs":{},"a":{"docs":{},"m":{"docs":{},"\"":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}},"\"":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549},"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}},")":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}},";":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.014598540145985401}}}},"c":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}}},"d":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"i":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"v":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"x":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}}},"l":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"m":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"v":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"x":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}},"c":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}},"l":{"docs":{},"\"":{"docs":{},":":{"docs":{"easy/Math/罗马数字转整数.html":{"ref":"easy/Math/罗马数字转整数.html","tf":0.0196078431372549}}}}}}},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"编":{"docs":{},"码":{"docs":{},"解":{"docs":{},"码":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{},"转":{"docs":{},"成":{"docs":{},"数":{"docs":{},"组":{"docs":{},"排":{"docs":{},"序":{"docs":{},"再":{"docs":{},"转":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{"easy/String/有效的字母异位词.html":{"ref":"easy/String/有效的字母异位词.html","tf":0.018867924528301886}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}},"z":{"0":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}},"docs":{},"h":{"docs":{},"i":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}},"u":{"docs":{},"i":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}},"i":{"docs":{},"g":{"docs":{},"z":{"docs":{},"a":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612}}}}}}}}}}}}}}},"u":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}},"忽":{"docs":{},"略":{"docs":{},"大":{"docs":{},"小":{"docs":{},"写":{"docs":{},"，":{"docs":{},"就":{"docs":{},"先":{"docs":{},"转":{"docs":{},"成":{"docs":{},"小":{"docs":{},"写":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"正":{"docs":{},"则":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"非":{"docs":{},"字":{"docs":{},"母":{"docs":{},"和":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"转":{"docs":{},"成":{"docs":{},"数":{"docs":{},"组":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"再":{"docs":{},"转":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{"easy/String/验证回文字符串.html":{"ref":"easy/String/验证回文字符串.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"?":{"docs":{},"[":{"0":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}},"docs":{}}}},"去":{"docs":{},"掉":{"docs":{},"空":{"docs":{},"格":{"docs":{},"，":{"docs":{},"正":{"docs":{},"则":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"出":{"docs":{},"数":{"docs":{},"字":{"docs":{},"和":{"docs":{},"符":{"docs":{},"号":{"docs":{},"位":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"转":{"docs":{},"成":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"并":{"docs":{},"判":{"docs":{},"断":{"docs":{},"下":{"docs":{},"是":{"docs":{},"否":{"docs":{},"超":{"docs":{},"出":{"docs":{},"范":{"docs":{},"围":{"docs":{},"。":{"docs":{"easy/String/字符串转换整数.html":{"ref":"easy/String/字符串转换整数.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}},"查":{"docs":{},"找":{"docs":{},"了":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}}}},"用":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"直":{"docs":{},"接":{"docs":{},"可":{"docs":{},"以":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"easy/String/实现strStr.html":{"ref":"easy/String/实现strStr.html","tf":0.024390243902439025}}}}}}}},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"想":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"要":{"docs":{},"求":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"表":{"docs":{},"示":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"邻":{"docs":{},"接":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"底":{"docs":{},"层":{"docs":{},"原":{"docs":{},"理":{"docs":{},"来":{"docs":{},"简":{"docs":{},"单":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"用":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"去":{"docs":{},"查":{"docs":{},"找":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\\":{"1":{"docs":{},"指":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"括":{"docs":{},"号":{"docs":{},"内":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}}}},"docs":{},"d":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}},"b":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.015748031496062992}}}},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"}":{"docs":{},"`":{"docs":{},")":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"数":{"docs":{},"字":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"连":{"docs":{},"续":{"0":{"docs":{},"次":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}},"docs":{}}},"不":{"docs":{},"是":{"docs":{},"单":{"docs":{},"词":{"docs":{},"开":{"docs":{},"头":{"docs":{},"或":{"docs":{},"者":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}}}}}}}}}},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"在":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}},"是":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.04081632653061224}},"不":{"docs":{},"停":{"docs":{},"地":{"docs":{},"除":{"docs":{},"以":{"3":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"1":{"docs":{},"呗":{"docs":{"easy/Math/3的幂.html":{"ref":"easy/Math/3的幂.html","tf":0.07142857142857142}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}},"说":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"东":{"docs":{},"西":{"docs":{},"，":{"docs":{},"没":{"docs":{},"想":{"docs":{},"到":{"docs":{},"或":{"docs":{},"者":{"docs":{},"一":{"docs":{},"时":{"docs":{},"没":{"docs":{},"想":{"docs":{},"到":{"docs":{},"根":{"docs":{},"本":{"docs":{},"不":{"docs":{},"是":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"日":{"docs":{},"常":{"docs":{},"工":{"docs":{},"作":{"docs":{},"中":{"docs":{},"稍":{"docs":{},"微":{"docs":{},"提":{"docs":{},"示":{"docs":{},"一":{"docs":{},"下":{"docs":{},"即":{"docs":{},"可":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"缜":{"docs":{},"密":{"docs":{},"的":{"docs":{},"思":{"docs":{},"维":{"docs":{},"对":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"来":{"docs":{},"说":{"docs":{},"更":{"docs":{},"重":{"docs":{},"要":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"了":{"docs":{},"！":{"docs":{},"假":{"docs":{},"如":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}},"做":{"docs":{},"无":{"docs":{},"用":{"docs":{},"功":{"docs":{},"了":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}}}}},"够":{"docs":{},"减":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}},"留":{"docs":{},"下":{"docs":{},"单":{"docs":{},"独":{"docs":{},"出":{"docs":{},"现":{"docs":{},"字":{"docs":{},"符":{"docs":{},"对":{"docs":{},"应":{"docs":{},"位":{"docs":{},"数":{"docs":{},"保":{"docs":{},"存":{"docs":{},"字":{"docs":{},"节":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}},"当":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.017699115044247787},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.023076923076923078}},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"项":{"docs":{},"值":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}},"索":{"docs":{},"引":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"比":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}},"然":{"docs":{},"还":{"docs":{},"有":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"比":{"docs":{},"较":{"docs":{},"低":{"docs":{},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"时":{"docs":{},"直":{"docs":{},"接":{"docs":{},"加":{"docs":{},"到":{"docs":{},"c":{"docs":{},"中":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}}}}}}}}}}}},"既":{"docs":{},"然":{"docs":{},"有":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"出":{"docs":{},"迭":{"docs":{},"代":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}},"次":{"docs":{},"数":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}},"连":{"docs":{},"起":{"docs":{},"来":{"docs":{},"就":{"docs":{},"是":{"docs":{"easy/String/外观数列.html":{"ref":"easy/String/外观数列.html","tf":0.0072992700729927005}}}}}}},"迭":{"docs":{},"代":{"docs":{},"方":{"docs":{},"案":{"docs":{"easy/LinkedList/反转链表.html":{"ref":"easy/LinkedList/反转链表.html","tf":0.012195121951219513}}}},"写":{"docs":{},"法":{"docs":{},"：":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}},"版":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}},"^":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756},"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"程序员面试金典/位操作/整数转换.html":{"ref":"程序员面试金典/位操作/整数转换.html","tf":0.03225806451612903}},"=":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.012658227848101266}}}},"q":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.010416666666666666},"程序员面试金典/链表/分割链表.html":{"ref":"程序员面试金典/链表/分割链表.html","tf":0.00980392156862745}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}},",":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"easy/SortSearch/合并两个有序数组.html":{"ref":"easy/SortSearch/合并两个有序数组.html","tf":0.0136986301369863}}}}}}},"e":{"docs":{},"n":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.005454545454545455}},"(":{"8":{"docs":{},")":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"docs":{}}}},"n":{"docs":{},"u":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856}},"e":{"docs":{},",":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.017857142857142856}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}},"i":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"u":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"a":{"docs":{},"n":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}},")":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.05154639175257732}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}},")":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}},"l":{"1":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}},"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}},",":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}},"2":{"docs":{},")":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"hard/DP/最短编辑距离.html":{"ref":"hard/DP/最短编辑距离.html","tf":0.02631578947368421}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}},"docs":{},")":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05}}}}}}},"e":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}},"n":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}},",":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}}}}}}}}},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{"easy/Tree/对称二叉树.html":{"ref":"easy/Tree/对称二叉树.html","tf":0.006097560975609756}}}}}}}},":":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.05555555555555555},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}},"?":{"docs":{"easy/Tree/二叉树的直径.html":{"ref":"easy/Tree/二叉树的直径.html","tf":0.01818181818181818},"easy/Tree/二叉树的最大深度.html":{"ref":"easy/Tree/二叉树的最大深度.html","tf":0.0136986301369863},"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.022222222222222223},"normal/LinkedList/相交链表.html":{"ref":"normal/LinkedList/相交链表.html","tf":0.05555555555555555},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"byteDance/string/简化路径.html":{"ref":"byteDance/string/简化路径.html","tf":0.018518518518518517},"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.016260162601626018},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.02197802197802198},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447},"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}},"拆":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"树":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"遍":{"docs":{},"历":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464}}}},"搜":{"docs":{},"索":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.022727272727272728}}}}}}}},"说":{"docs":{},"明":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{"easy/Tree/路径总和.html":{"ref":"easy/Tree/路径总和.html","tf":0.01098901098901099}}}}}}}}}}},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"版":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"区":{"docs":{},"分":{"docs":{},"“":{"docs":{},"不":{"docs":{},"持":{"docs":{},"有":{"docs":{},"股":{"docs":{},"票":{"docs":{},"”":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"“":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"不":{"docs":{},"持":{"docs":{},"有":{"docs":{},"”":{"docs":{},"和":{"docs":{},"“":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"股":{"docs":{},"票":{"docs":{},"以":{"docs":{},"后":{"docs":{},"的":{"docs":{},"不":{"docs":{},"持":{"docs":{},"有":{"docs":{},"”":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"法":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"高":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"思":{"docs":{},"路":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"、":{"docs":{},"编":{"docs":{},"写":{"docs":{},"简":{"docs":{},"单":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"编":{"docs":{},"写":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"算":{"docs":{},"法":{"docs":{},"检":{"docs":{},"验":{"docs":{},"我":{"docs":{},"们":{"docs":{},"编":{"docs":{},"写":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"否":{"docs":{},"正":{"docs":{},"确":{"docs":{},"。":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"“":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"法":{"docs":{},"”":{"docs":{},"，":{"docs":{},"以":{"docs":{},"空":{"docs":{},"间":{"docs":{},"换":{"docs":{},"时":{"docs":{},"间":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"思":{"docs":{},"考":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"分":{"docs":{},"析":{"docs":{},"其":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"候":{"docs":{},"能":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"打":{"docs":{},"开":{"docs":{},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"easy/SortSearch/第一个错误的版本.html":{"ref":"easy/SortSearch/第一个错误的版本.html","tf":0.015151515151515152}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}},"。":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}},"查":{"docs":{},"询":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"比":{"docs":{},"较":{"docs":{},"节":{"docs":{},"省":{"docs":{},"性":{"docs":{},"能":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"代":{"docs":{},"表":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}},"单":{"docs":{},"词":{"docs":{},"分":{"docs":{},"界":{"docs":{},"位":{"docs":{},"置":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}}},"码":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0034542314335060447}},"实":{"docs":{},"现":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.013816925734024179}}}}}},"层":{"docs":{},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"的":{"docs":{},"走":{"docs":{},"法":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}}}}}},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},",":{"docs":{},"然":{"docs":{},"后":{"docs":{},"转":{"docs":{},"成":{"docs":{},"链":{"docs":{},"表":{"docs":{"程序员面试金典/树与图/特定深度节点链表.html":{"ref":"程序员面试金典/树与图/特定深度节点链表.html","tf":0.017241379310344827}}}}}}}}}}}}},"或":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}},"者":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}},"列":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}},"运":{"docs":{},"算":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}}},"那":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"拉":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"p":{"docs":{},"写":{"docs":{},"法":{"docs":{"easy/DP/爬楼梯.html":{"ref":"easy/DP/爬楼梯.html","tf":0.01098901098901099}}}}}}}}}}}}}}}},"先":{"docs":{},"写":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"验":{"docs":{},"证":{"docs":{},"字":{"docs":{},"母":{"docs":{},"异":{"docs":{},"位":{"docs":{},"词":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"无":{"docs":{},"非":{"docs":{},"写":{"docs":{},"方":{"docs":{},"法":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"分":{"docs":{},"组":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"就":{"docs":{},"是":{"docs":{},"加":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"分":{"docs":{},"组":{"docs":{},"了":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"就":{"docs":{},"新":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"组":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"要":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"改":{"docs":{},"下":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{},",":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{"byteDance/array&sort/最长连续递增序列.html":{"ref":"byteDance/array&sort/最长连续递增序列.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"理":{"docs":{},"解":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"句":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"当":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}},"里":{"docs":{},"就":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"全":{"docs":{},"遍":{"docs":{},"历":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}},"用":{"docs":{},"户":{"docs":{},"手":{"docs":{},"上":{"docs":{},"不":{"docs":{},"持":{"docs":{},"股":{"docs":{},"”":{"docs":{},"不":{"docs":{},"代":{"docs":{},"表":{"docs":{},"用":{"docs":{},"户":{"docs":{},"一":{"docs":{},"定":{"docs":{},"在":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"准":{"docs":{},"”":{"docs":{},"（":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"）":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}},"仅":{"docs":{},"仅":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}},"再":{"docs":{},"写":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"有":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"用":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}},"优":{"docs":{},"化":{"docs":{},"：":{"docs":{},"连":{"docs":{},"续":{"docs":{},"赋":{"docs":{},"值":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}}}}}},"即":{"docs":{},"可":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}},"。":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"分":{"docs":{},"析":{"docs":{},"就":{"docs":{},"不":{"docs":{},"在":{"docs":{},"写":{"docs":{},"了":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"来":{"docs":{},"看":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"题":{"docs":{},"目":{"docs":{},"所":{"docs":{},"求":{"docs":{},"结":{"docs":{},"果":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.014760147601476014}}}},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"解":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"量":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.007272727272727273}},"来":{"docs":{},"保":{"docs":{},"存":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"从":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}},"有":{"docs":{},"序":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"能":{"docs":{},"优":{"docs":{},"化":{"docs":{"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"多":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"数":{"docs":{},"据":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"把":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"设":{"docs":{},"置":{"docs":{},"成":{"docs":{},"为":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"天":{"docs":{},"不":{"docs":{},"持":{"docs":{},"股":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}},"持":{"docs":{},"股":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{}}}},"docs":{}}}}}}}}}},"怎":{"docs":{},"样":{"docs":{},"转":{"docs":{},"移":{"docs":{},"？":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}}}},"恒":{"docs":{},"成":{"docs":{},"立":{"docs":{},"，":{"docs":{},"和":{"docs":{},"“":{"docs":{},"参":{"docs":{},"考":{"docs":{},"代":{"docs":{},"码":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}},"来":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}},"源":{"docs":{},"：":{"docs":{},"力":{"docs":{},"扣":{"docs":{},"（":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"）":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}},"保":{"docs":{},"存":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{},"原":{"docs":{},"理":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"空":{"docs":{},"间":{"docs":{},"也":{"docs":{},"是":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}},"」":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"规":{"docs":{},"模":{"docs":{},"的":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"联":{"docs":{},"系":{"docs":{},"。":{"docs":{},"即":{"docs":{},"大":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"如":{"docs":{},"何":{"docs":{},"由":{"docs":{},"小":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"得":{"docs":{},"到":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"难":{"docs":{},"点":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"先":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"「":{"docs":{},"题":{"docs":{},"目":{"docs":{},"问":{"docs":{},"什":{"docs":{},"么":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"什":{"docs":{},"么":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"前":{"docs":{},"导":{"docs":{},"零":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"字":{"docs":{},"为":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}}}}}}}}}}}}}},"交":{"docs":{},"换":{"docs":{},"后":{"docs":{},"新":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"r":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"可":{"docs":{},"能":{"docs":{},"违":{"docs":{},"反":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"当":{"docs":{},"前":{"docs":{},"无":{"docs":{},"序":{"docs":{},"区":{"docs":{},"(":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{},"r":{"2":{"docs":{},",":{"docs":{},"…":{"docs":{},"…":{"docs":{},"r":{"docs":{},"n":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.007380073800738007}}}}},"维":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"填":{"docs":{},"表":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"先":{"docs":{},"写":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}},"综":{"docs":{},"上":{"docs":{},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"状":{"docs":{},"态":{"docs":{},"压":{"docs":{},"缩":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}},"输":{"docs":{},"出":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}},"语":{"docs":{},"义":{"docs":{},"化":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}},"docs":{}}}}}}}},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"“":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"”":{"docs":{},"用":{"docs":{},"于":{"docs":{},"多":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"最":{"docs":{},"优":{"docs":{},"化":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"天":{"docs":{},"数":{"docs":{},"代":{"docs":{},"表":{"docs":{},"每":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"即":{"docs":{},"一":{"docs":{},"天":{"docs":{},"一":{"docs":{},"天":{"docs":{},"看":{"docs":{},"，":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"维":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"消":{"docs":{},"除":{"docs":{},"后":{"docs":{},"效":{"docs":{},"性":{"docs":{},"（":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"确":{"docs":{},"定":{"docs":{},"下":{"docs":{},"来":{"docs":{},"以":{"docs":{},"后":{"docs":{},"不":{"docs":{},"会":{"docs":{},"因":{"docs":{},"为":{"docs":{},"后":{"docs":{},"面":{"docs":{},"状":{"docs":{},"态":{"docs":{},"而":{"docs":{},"更":{"docs":{},"改":{"docs":{},"）":{"docs":{},"，":{"docs":{},"将":{"docs":{},"当":{"docs":{},"天":{"docs":{},"是":{"docs":{},"否":{"docs":{},"持":{"docs":{},"股":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"维":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"于":{"docs":{},"是":{"docs":{},"：":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"当":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"不":{"docs":{},"持":{"docs":{},"股":{"docs":{},"转":{"docs":{},"移":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"从":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"到":{"docs":{},"今":{"docs":{},"天":{"docs":{},"什":{"docs":{},"么":{"docs":{},"都":{"docs":{},"不":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"显":{"docs":{},"然":{"docs":{},"的":{"docs":{},"；":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"股":{"docs":{},"，":{"docs":{},"今":{"docs":{},"天":{"docs":{},"什":{"docs":{},"么":{"docs":{},"都":{"docs":{},"不":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"昨":{"docs":{},"天":{"docs":{},"持":{"docs":{},"股":{"docs":{},"转":{"docs":{},"移":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"是":{"docs":{},"显":{"docs":{},"然":{"docs":{},"的":{"docs":{},"；":{"docs":{"easy/DP/买卖股票的最佳时机.html":{"ref":"easy/DP/买卖股票的最佳时机.html","tf":0.0036900369003690036}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356},"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"繁":{"docs":{},"琐":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}},"若":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"其":{"docs":{},"加":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"上":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}}}}}}},"docs":{}}}}}}}},"当":{"docs":{},"前":{"docs":{},"指":{"docs":{},"针":{"docs":{},"所":{"docs":{},"指":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"和":{"docs":{},"小":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"当":{"docs":{},"前":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"数":{"docs":{},"列":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"贪":{"docs":{},"心":{"docs":{},"算":{"docs":{},"法":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}},"￣":{"docs":{},"□":{"docs":{},"￣":{"docs":{},"｜":{"docs":{},"｜":{"docs":{"easy/DP/最大子序和.html":{"ref":"easy/DP/最大子序和.html","tf":0.008264462809917356}}}}}}},"假":{"docs":{},"设":{"docs":{"easy/DP/打家劫舍.html":{"ref":"easy/DP/打家劫舍.html","tf":0.023809523809523808}}}},";":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045},"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625},"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.011428571428571429},"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099},"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0051813471502590676}}},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"随":{"docs":{},"便":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"与":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"选":{"docs":{},"中":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"为":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"交":{"docs":{},"换":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"被":{"docs":{},"选":{"docs":{},"中":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"是":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}},"一":{"docs":{},"位":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"上":{"docs":{},"一":{"docs":{},"位":{"docs":{},"的":{"docs":{},"进":{"docs":{},"位":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"计":{"docs":{},"算":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"同":{"docs":{},"样":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"进":{"docs":{},"位":{"docs":{},"值":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"都":{"docs":{},"会":{"docs":{},"确":{"docs":{},"定":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"停":{"docs":{},"止":{"docs":{},"点":{"docs":{},"，":{"docs":{},"它":{"docs":{},"告":{"docs":{},"诉":{"docs":{},"了":{"docs":{},"子":{"docs":{},"调":{"docs":{},"用":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"停":{"docs":{},"止":{"docs":{},"，":{"docs":{},"把":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"停":{"docs":{},"止":{"docs":{},"点":{"docs":{},"，":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"（":{"docs":{},"父":{"docs":{},"调":{"docs":{},"用":{"docs":{},"给":{"docs":{},"下":{"docs":{},"来":{"docs":{},"的":{"docs":{},"）":{"docs":{},"停":{"docs":{},"止":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"停":{"docs":{},"止":{"docs":{},"点":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"要":{"docs":{},"在":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"增":{"docs":{},"量":{"docs":{},"t":{"docs":{},"i":{"docs":{},"，":{"docs":{},"将":{"docs":{},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"列":{"docs":{},"分":{"docs":{},"割":{"docs":{},"成":{"docs":{},"若":{"docs":{},"干":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"m":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"洗":{"docs":{},"牌":{"docs":{},"算":{"docs":{},"法":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"能":{"docs":{},"等":{"docs":{},"概":{"docs":{},"率":{"docs":{},"的":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"easy/Design/打乱数组.html":{"ref":"easy/Design/打乱数组.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"判":{"docs":{},"断":{"docs":{"easy/Math/FizzBuzz.html":{"ref":"easy/Math/FizzBuzz.html","tf":0.058823529411764705}}}}}},"是":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"不":{"docs":{},"是":{"docs":{},"质":{"docs":{},"数":{"docs":{},"写":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"判":{"docs":{},"断":{"docs":{},"了":{"docs":{},"。":{"docs":{},"（":{"docs":{},"素":{"docs":{},"性":{"docs":{},"测":{"docs":{},"试":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"不":{"docs":{},"靠":{"docs":{},"谱":{"docs":{},"）":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"为":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}},"多":{"docs":{},"少":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"当":{"docs":{},"前":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"的":{"docs":{},"。":{"docs":{},"看":{"docs":{},"题":{"docs":{},"解":{"docs":{},"吧":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"证":{"docs":{},"明":{"docs":{},"很":{"docs":{},"妙":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}},"果":{"docs":{},"然":{"docs":{},"运":{"docs":{},"行":{"docs":{},"超":{"docs":{},"时":{"docs":{},"了":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}}}}},"高":{"docs":{},"效":{"docs":{},"实":{"docs":{},"现":{"docs":{"easy/Math/计数质数.html":{"ref":"easy/Math/计数质数.html","tf":0.025}}}}}},"y":{"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903}},")":{"docs":{"easy/Other/汉明距离.html":{"ref":"easy/Other/汉明距离.html","tf":0.03225806451612903},"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.009523809523809525}}}},"n":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}},"i":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}},"：":{"docs":{},"⾏":{"docs":{},"索":{"docs":{},"引":{"docs":{},"为":{"docs":{"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.007692307692307693}}}}}}},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"右":{"docs":{},"移":{"docs":{},"损":{"docs":{},"失":{"docs":{},"精":{"docs":{},"度":{"docs":{},"，":{"docs":{},"补":{"docs":{},"加":{"docs":{},"左":{"docs":{},"移":{"docs":{},"参":{"docs":{},"数":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}},"则":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"结":{"docs":{},"果":{"docs":{},"重":{"docs":{},"复":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"，":{"docs":{},"l":{"docs":{},"+":{"docs":{},"+":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}},"r":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}},"和":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894},"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.038461538461538464},"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.029411764705882353},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364},"normal/DP/LCP.html":{"ref":"normal/DP/LCP.html","tf":0.046153846153846156},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886},"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"计":{"docs":{},"算":{"docs":{},"了":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"3":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"题":{"docs":{},"解":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}}},"代":{"docs":{},"码":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"标":{"docs":{},"签":{"docs":{},"：":{"docs":{},"数":{"docs":{},"组":{"docs":{},"遍":{"docs":{},"历":{"docs":{"normal/Array&String/三数之和.html":{"ref":"normal/Array&String/三数之和.html","tf":0.008849557522123894}}}}}},"链":{"docs":{},"表":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408}}}}}},"记":{"docs":{},"是":{"docs":{},"否":{"docs":{},"平":{"docs":{},"衡":{"docs":{"程序员面试金典/树与图/检查平衡性.html":{"ref":"程序员面试金典/树与图/检查平衡性.html","tf":0.018867924528301886}}}}}}}},"好":{"docs":{},"了":{"docs":{},"，":{"docs":{},"一":{"docs":{},"提":{"docs":{},"交":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}},"吧":{"docs":{},"，":{"docs":{},"效":{"docs":{},"率":{"docs":{},"奇":{"docs":{},"差":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"好":{"docs":{},"歹":{"docs":{},"写":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"哈":{"docs":{},"哈":{"docs":{},"哈":{"docs":{},"哈":{"docs":{},"。":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"遍":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"了":{"docs":{},"下":{"docs":{},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"原":{"docs":{},"理":{"docs":{},"差":{"docs":{},"不":{"docs":{},"多":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"用":{"docs":{},"了":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"底":{"docs":{},"层":{"docs":{},"原":{"docs":{},"理":{"docs":{},"不":{"docs":{},"是":{"docs":{},"完":{"docs":{},"整":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"答":{"docs":{},"案":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}},"官":{"docs":{},"方":{"docs":{},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"两":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}}},"到":{"docs":{},"题":{"docs":{},"解":{"docs":{},"里":{"docs":{},"的":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"增":{"docs":{},"加":{"docs":{},"删":{"docs":{},"除":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}},"注":{"docs":{},"释":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"我":{"docs":{},"震":{"docs":{},"惊":{"docs":{},"了":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}},"超":{"docs":{},"出":{"docs":{},"时":{"docs":{},"间":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"￣":{"docs":{},"□":{"docs":{},"￣":{"docs":{},"｜":{"docs":{},"｜":{"docs":{"normal/Array&String/字母异位词分组.html":{"ref":"normal/Array&String/字母异位词分组.html","tf":0.010309278350515464}}}}}}}}}}}}}},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"值":{"docs":{},"为":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}}}}}}}},"顺":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"normal/Tree&Graph/中序遍历二叉树.html":{"ref":"normal/Tree&Graph/中序遍历二叉树.html","tf":0.015625}}}}}},"移":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}}}}},"哈":{"docs":{},"希":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{"normal/Array&String/无重复字符的最长子串.html":{"ref":"normal/Array&String/无重复字符的最长子串.html","tf":0.01818181818181818},"hard/string/最小覆盖子串.html":{"ref":"hard/string/最小覆盖子串.html","tf":0.05},"byteDance/string/字符串的排列.html":{"ref":"byteDance/string/字符串的排列.html","tf":0.02040816326530612}}}}}},"「":{"docs":{},"优":{"docs":{},"化":{"docs":{},"空":{"docs":{},"间":{"docs":{},"」":{"docs":{},"会":{"docs":{},"使":{"docs":{},"得":{"docs":{},"代":{"docs":{},"码":{"docs":{},"难":{"docs":{},"于":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"且":{"docs":{},"是":{"docs":{},"的":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"，":{"docs":{},"初":{"docs":{},"学":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"一":{"docs":{},"步":{"docs":{},"到":{"docs":{},"位":{"docs":{},"。":{"docs":{},"先":{"docs":{},"把":{"docs":{},"代":{"docs":{},"码":{"docs":{},"写":{"docs":{},"正":{"docs":{},"确":{"docs":{},"是":{"docs":{},"更":{"docs":{},"重":{"docs":{},"要":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"是":{"docs":{},"很":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"状":{"docs":{},"态":{"docs":{},"空":{"docs":{},"间":{"docs":{},"非":{"docs":{},"常":{"docs":{},"庞":{"docs":{},"大":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"（":{"docs":{},"处":{"docs":{},"理":{"docs":{},"海":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"空":{"docs":{},"间":{"docs":{},"不":{"docs":{},"够":{"docs":{},"用":{"docs":{},"，":{"docs":{},"就":{"docs":{},"必":{"docs":{},"须":{"docs":{},"「":{"docs":{},"优":{"docs":{},"化":{"docs":{},"空":{"docs":{},"间":{"docs":{},"」":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"」":{"docs":{},"方":{"docs":{},"法":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"「":{"docs":{},"空":{"docs":{},"间":{"docs":{},"换":{"docs":{},"时":{"docs":{},"间":{"docs":{},"」":{"docs":{},"思":{"docs":{},"想":{"docs":{},"的":{"docs":{},"体":{"docs":{},"现":{"docs":{},"，":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"很":{"docs":{},"像":{"docs":{},"在":{"docs":{},"「":{"docs":{},"填":{"docs":{},"表":{"docs":{},"」":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"是":{"docs":{},"：":{"docs":{},"分":{"docs":{},"类":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"。":{"docs":{},"即":{"docs":{},"：":{"docs":{},"对":{"docs":{},"状":{"docs":{},"态":{"docs":{},"空":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"类":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"纳":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"」":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"灵":{"docs":{},"活":{"docs":{},"的":{"docs":{},"事":{"docs":{},"情":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"问":{"docs":{},"题":{"docs":{},"具":{"docs":{},"体":{"docs":{},"分":{"docs":{},"析":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"和":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"不":{"docs":{},"受":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"但":{"docs":{},"表":{"docs":{},"现":{"docs":{},"比":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"好":{"docs":{},"的":{"docs":{},"多":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"始":{"docs":{},"终":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"）":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{},"代":{"docs":{},"价":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"在":{"docs":{},"归":{"docs":{},"并":{"docs":{},"操":{"docs":{},"作":{"docs":{},"上":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"该":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"采":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"（":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"题":{"docs":{},"具":{"docs":{},"体":{"docs":{},"分":{"docs":{},"析":{"docs":{},"详":{"docs":{},"见":{"docs":{},"原":{"docs":{},"文":{"docs":{},"链":{"docs":{},"接":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"非":{"docs":{},"常":{"docs":{},"的":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"！":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}},"背":{"docs":{},"包":{"docs":{},"」":{"docs":{},"问":{"docs":{},"题":{"docs":{},"和":{"docs":{},"「":{"docs":{},"完":{"docs":{},"全":{"docs":{},"背":{"docs":{},"包":{"docs":{},"」":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"角":{"docs":{},"度":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.023255813953488372}}}},"除":{"docs":{},"了":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"多":{"docs":{},"做":{"docs":{},"题":{"docs":{},"；":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"常":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"「":{"docs":{},"优":{"docs":{},"化":{"docs":{},"空":{"docs":{},"间":{"docs":{},"」":{"docs":{},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"「":{"0":{"docs":{"normal/Array&String/最长回文子串.html":{"ref":"normal/Array&String/最长回文子串.html","tf":0.007751937984496124}}},"docs":{}}}}}}}}}}}}}}}}}},"比":{"docs":{},"较":{"docs":{},"类":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"不":{"docs":{},"通":{"docs":{},"过":{"docs":{},"比":{"docs":{},"较":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"元":{"docs":{},"素":{"docs":{},"间":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"次":{"docs":{},"序":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"突":{"docs":{},"破":{"docs":{},"基":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"下":{"docs":{},"界":{"docs":{},"，":{"docs":{},"以":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"运":{"docs":{},"行":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"非":{"docs":{},"比":{"docs":{},"较":{"docs":{},"类":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"当":{"docs":{},"后":{"docs":{},"续":{"docs":{},"出":{"docs":{},"现":{"docs":{},"比":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}},"间":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"变":{"docs":{},"为":{"docs":{"程序员面试金典/位操作/插入.html":{"ref":"程序员面试金典/位操作/插入.html","tf":0.020833333333333332}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"也":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"排":{"docs":{},"序":{"docs":{},"速":{"docs":{},"度":{"docs":{},"快":{"docs":{},"于":{"docs":{},"任":{"docs":{},"何":{"docs":{},"比":{"docs":{},"较":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"当":{"docs":{},"k":{"docs":{},"不":{"docs":{},"是":{"docs":{},"很":{"docs":{},"大":{"docs":{},"并":{"docs":{},"且":{"docs":{},"序":{"docs":{},"列":{"docs":{},"比":{"docs":{},"较":{"docs":{},"集":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"呢":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}},"大":{"docs":{},"比":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"当":{"docs":{},"前":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"接":{"docs":{},"着":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"每":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"它":{"docs":{},"和":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"断":{"docs":{},"的":{"docs":{},"确":{"docs":{},"存":{"docs":{},"在":{"docs":{},"着":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{"normal/Array&String/递增的三元子序列.html":{"ref":"normal/Array&String/递增的三元子序列.html","tf":0.007692307692307693}}}}},"%":{"docs":{"normal/LinkedList/两数相加.html":{"ref":"normal/LinkedList/两数相加.html","tf":0.007407407407407408},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"ref":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","tf":0.02040816326530612},"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.00975609756097561},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182},"程序员面试金典/链表/链表求和.html":{"ref":"程序员面试金典/链表/链表求和.html","tf":0.008130081300813009}}},"保":{"docs":{},"存":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}},"偶":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"算":{"docs":{},"法":{"docs":{},"会":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"一":{"docs":{},"次":{"docs":{},"并":{"docs":{},"把":{"docs":{},"奇":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"到":{"docs":{},"奇":{"docs":{},"链":{"docs":{},"表":{"docs":{},"里":{"docs":{},"去":{"docs":{},"、":{"docs":{},"偶":{"docs":{},"节":{"docs":{},"点":{"docs":{},"放":{"docs":{},"到":{"docs":{},"偶":{"docs":{},"链":{"docs":{},"表":{"docs":{},"里":{"docs":{},"去":{"docs":{},"。":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"奇":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"树":{"docs":{},"的":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}},"，":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"都":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"对":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"中":{"docs":{},"间":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"扮":{"docs":{},"演":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"的":{"docs":{},"角":{"docs":{},"色":{"docs":{},"。":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"双":{"docs":{},"端":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{"normal/LinkedList/奇偶链表.html":{"ref":"normal/LinkedList/奇偶链表.html","tf":0.014705882352941176}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"移":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"接":{"docs":{},"收":{"2":{"docs":{},"对":{"docs":{},"指":{"docs":{},"针":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}},"docs":{}}}}}},"性":{"docs":{},"能":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"，":{"docs":{},"没":{"docs":{},"必":{"docs":{},"要":{"docs":{},"把":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}}},"提":{"docs":{},"前":{"docs":{},"把":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"示":{"docs":{},"：":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}},"附":{"docs":{},"加":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"项":{"docs":{},"到":{"docs":{},"第":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}},"是":{"docs":{},"要":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"们":{"docs":{"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"ref":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","tf":0.0036363636363636364}}}}}}}}}}}}},"改":{"docs":{},"成":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"等":{"docs":{},"于":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"长":{"docs":{},"度":{"docs":{},"时":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"已":{"docs":{},"经":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"周":{"docs":{},"围":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"周":{"docs":{},"围":{"docs":{},"字":{"docs":{},"符":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"且":{"docs":{},"与":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"再":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"递":{"docs":{},"归":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"骤":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"normal/backTracking/矩阵中的路径.html":{"ref":"normal/backTracking/矩阵中的路径.html","tf":0.016666666666666666}}}}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"从":{"docs":{},"头":{"docs":{},"部":{"docs":{},"一":{"docs":{},"起":{"docs":{},"走":{"docs":{},"，":{"docs":{},"当":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"走":{"docs":{},"到":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"时":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"就":{"docs":{},"在":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"程序员面试金典/链表/返回倒数第k个节点.html":{"ref":"程序员面试金典/链表/返回倒数第k个节点.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"超":{"docs":{},"过":{"docs":{},"时":{"docs":{},"间":{"docs":{},"限":{"docs":{},"制":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}}}}},"作":{"docs":{},"者":{"docs":{},"：":{"docs":{},"f":{"docs":{},"e":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}},"s":{"docs":{},"c":{"8":{"8":{"1":{"6":{"docs":{"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"l":{"docs":{"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143}}}}}}}}},"为":{"docs":{},"一":{"docs":{},"种":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"要":{"docs":{},"求":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"有":{"docs":{},"确":{"docs":{},"定":{"docs":{},"范":{"docs":{},"围":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"做":{"docs":{},"选":{"docs":{},"择":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}},"撤":{"docs":{},"销":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.022727272727272728}},"选":{"docs":{},"择":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576}}}}}},"添":{"docs":{},"加":{"docs":{},"两":{"docs":{},"侧":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"拟":{"docs":{},"气":{"docs":{},"球":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}},"著":{"docs":{},"作":{"docs":{},"权":{"docs":{},"归":{"docs":{},"作":{"docs":{},"者":{"docs":{},"所":{"docs":{},"有":{"docs":{},"。":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"联":{"docs":{},"系":{"docs":{},"作":{"docs":{},"者":{"docs":{},"获":{"docs":{},"得":{"docs":{},"授":{"docs":{},"权":{"docs":{},"，":{"docs":{},"非":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"注":{"docs":{},"明":{"docs":{},"出":{"docs":{},"处":{"docs":{},"。":{"docs":{"hard/DP/戳气球.html":{"ref":"hard/DP/戳气球.html","tf":0.007575757575757576},"程序员面试金典/树与图/首个共同祖先.html":{"ref":"程序员面试金典/树与图/首个共同祖先.html","tf":0.010309278350515464},"程序员面试金典/树与图/二叉搜索树序列.html":{"ref":"程序员面试金典/树与图/二叉搜索树序列.html","tf":0.008928571428571428},"程序员面试金典/树与图/检查子树.html":{"ref":"程序员面试金典/树与图/检查子树.html","tf":0.007142857142857143},"程序员面试金典/树与图/二叉树的所有路径.html":{"ref":"程序员面试金典/树与图/二叉树的所有路径.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"答":{"docs":{},"案":{"docs":{"byteDance/string/字符串相乘.html":{"ref":"byteDance/string/字符串相乘.html","tf":0.004878048780487805}}}}},"贴":{"docs":{},"题":{"docs":{},"解":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}}}}}}}}}},"段":{"docs":{"byteDance/string/复原IP地址.html":{"ref":"byteDance/string/复原IP地址.html","tf":0.01904761904761905}}},"但":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"对":{"docs":{},"称":{"docs":{},"，":{"docs":{},"我":{"docs":{},"还":{"docs":{},"是":{"docs":{},"加":{"docs":{},"上":{"docs":{},"了":{"docs":{},"等":{"docs":{},"号":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"️":{"docs":{},"⚠":{"docs":{},"️":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"里":{"docs":{},"的":{"docs":{},"等":{"docs":{},"号":{"docs":{"byteDance/array&sort/搜索旋转排序数组.html":{"ref":"byteDance/array&sort/搜索旋转排序数组.html","tf":0.010869565217391304}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"一":{"docs":{},"边":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}}}}}}},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{"byteDance/array&sort/数组中的第K个最大元素.html":{"ref":"byteDance/array&sort/数组中的第K个最大元素.html","tf":0.005208333333333333}}},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"链":{"docs":{},"表":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"待":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}},"射":{"docs":{},"击":{"docs":{},"气":{"docs":{},"球":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"改":{"docs":{},"下":{"docs":{},"：":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}},"成":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}},"写":{"docs":{},"下":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}},"故":{"docs":{},"单":{"docs":{},"独":{"docs":{},"处":{"docs":{},"理":{"docs":{},"计":{"docs":{},"算":{"docs":{},"起":{"docs":{},"项":{"docs":{},"最":{"docs":{},"小":{"docs":{},"路":{"docs":{},"径":{"docs":{},"和":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}}}}}}}}}},"核":{"docs":{},"心":{"docs":{},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}},"生":{"docs":{},"成":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"组":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}}}},"输":{"docs":{},"入":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}},"边":{"docs":{},"界":{"docs":{},"处":{"docs":{},"理":{"docs":{"tecent/problems/题集.html":{"ref":"tecent/problems/题集.html","tf":0.0018181818181818182}}}}}},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"alibaba/interview/interview.html":{"ref":"alibaba/interview/interview.html","tf":0.007874015748031496}}}}}}}},"与":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}},"的":{"docs":{},"话":{"docs":{},"就":{"docs":{},"是":{"docs":{},"提":{"docs":{},"取":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{"程序员面试金典/位操作/配对交换.html":{"ref":"程序员面试金典/位操作/配对交换.html","tf":0.02040816326530612}}}}}}}}}}}},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}},"就":{"docs":{},"不":{"docs":{},"是":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}},"直":{"docs":{},"接":{"docs":{},"上":{"docs":{},"手":{"docs":{},"什":{"docs":{},"么":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"什":{"docs":{},"么":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"，":{"docs":{},"我":{"docs":{},"会":{"docs":{},"先":{"docs":{},"问":{"docs":{},"他":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"交":{"docs":{},"代":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"2":{"6":{"docs":{},"个":{"docs":{},"英":{"docs":{},"文":{"docs":{},"字":{"docs":{},"母":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"环":{"docs":{},"境":{"docs":{},"，":{"docs":{},"你":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"要":{"docs":{},"准":{"docs":{},"备":{"2":{"docs":{},"^":{"1":{"6":{"docs":{},"/":{"8":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"？":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"项":{"docs":{},"目":{"docs":{},"中":{"docs":{},"，":{"docs":{},"风":{"docs":{},"险":{"docs":{},"可":{"docs":{},"控":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"期":{"docs":{},"更":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"绝":{"docs":{},"大":{"docs":{},"多":{"docs":{},"数":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"在":{"docs":{},"乎":{"docs":{},"那":{"docs":{},"点":{"docs":{},"时":{"docs":{},"间":{"docs":{},"和":{"docs":{},"资":{"docs":{},"源":{"docs":{},"。":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"做":{"docs":{},"到":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"的":{"docs":{},"，":{"8":{"0":{"docs":{},"分":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"贴":{"docs":{},"个":{"docs":{},"评":{"docs":{},"论":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}},"过":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"出":{"docs":{},"现":{"docs":{"程序员面试金典/数组与字符串/字符是否唯一.html":{"ref":"程序员面试金典/数组与字符串/字符是否唯一.html","tf":0.009433962264150943}}}}}}}}}},"总":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}},"统":{"docs":{},"计":{"docs":{},"下":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"都":{"docs":{},"相":{"docs":{},"等":{"docs":{"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"ref":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"发":{"docs":{},"现":{"docs":{},"是":{"docs":{},"要":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"开":{"docs":{},"的":{"docs":{},"也":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"。":{"docs":{},"具":{"docs":{},"体":{"docs":{},"看":{"docs":{},"题":{"docs":{},"目":{"docs":{},"里":{"docs":{},"的":{"docs":{},"注":{"docs":{},"释":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"为":{"docs":{},"i":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"存":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"c":{"docs":{},"的":{"docs":{},"第":{"docs":{},"i":{"docs":{},"项":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}}}},"啦":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}},"码":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}}}}},"总":{"docs":{},"共":{"docs":{"程序员面试金典/数组与字符串/回文排列.html":{"ref":"程序员面试金典/数组与字符串/回文排列.html","tf":0.006329113924050633}}}}},"注":{"docs":{},"释":{"docs":{},"里":{"docs":{},"有":{"docs":{},"我":{"docs":{},"的":{"docs":{},"全":{"docs":{},"部":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"这":{"docs":{},"题":{"docs":{},"提":{"docs":{},"交":{"docs":{},"错":{"docs":{},"了":{"docs":{},"好":{"docs":{},"几":{"docs":{},"次":{"docs":{},"，":{"docs":{},"做":{"docs":{},"的":{"docs":{},"很":{"docs":{},"糟":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}}},"意":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{"程序员面试金典/链表/链表相交.html":{"ref":"程序员面试金典/链表/链表相交.html","tf":0.01098901098901099}}}}}}},"是":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"值":{"docs":{"程序员面试金典/树与图/后继者.html":{"ref":"程序员面试金典/树与图/后继者.html","tf":0.047619047619047616}}}}}}}}}},"：":{"docs":{},"这":{"docs":{},"里":{"docs":{},"和":{"docs":{},"动":{"docs":{},"图":{"docs":{},"演":{"docs":{},"示":{"docs":{},"的":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"动":{"docs":{},"图":{"docs":{},"是":{"docs":{},"分":{"docs":{},"组":{"docs":{},"执":{"docs":{},"行":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"多":{"docs":{},"个":{"docs":{},"分":{"docs":{},"组":{"docs":{},"交":{"docs":{},"替":{"docs":{},"执":{"docs":{},"行":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"一":{"docs":{},"次":{"docs":{},"试":{"docs":{},"错":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"次":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"失":{"docs":{},"败":{"docs":{},"我":{"docs":{},"们":{"docs":{},"还":{"docs":{},"要":{"docs":{},"继":{"docs":{},"续":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"再":{"docs":{},"次":{"docs":{},"失":{"docs":{},"败":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"程序员面试金典/数组与字符串/一次编辑.html":{"ref":"程序员面试金典/数组与字符串/一次编辑.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"感":{"docs":{},"觉":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"这":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"用":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}}}}}}}}}}},"精":{"docs":{},"妙":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"程序员面试金典/数组与字符串/字符串压缩.html":{"ref":"程序员面试金典/数组与字符串/字符串压缩.html","tf":0.015151515151515152}}}}}}},"要":{"docs":{},"等":{"docs":{},"于":{"docs":{"程序员面试金典/数组与字符串/旋转矩阵.html":{"ref":"程序员面试金典/数组与字符串/旋转矩阵.html","tf":0.030303030303030304}}}}},"里":{"docs":{},".":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}},"的":{"docs":{},"行":{"docs":{},"和":{"docs":{},"列":{"docs":{},"，":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"置":{"docs":{"程序员面试金典/数组与字符串/零矩阵.html":{"ref":"程序员面试金典/数组与字符串/零矩阵.html","tf":0.01098901098901099}}}}}}}}}}}},"你":{"docs":{},"能":{"docs":{},"只":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{},"检":{"docs":{},"查":{"docs":{},"子":{"docs":{},"串":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"吗":{"docs":{},"？":{"docs":{"程序员面试金典/数组与字符串/字符串轮转.html":{"ref":"程序员面试金典/数组与字符串/字符串轮转.html","tf":0.013333333333333334}}}}}}}}}}}}}}}},"否":{"docs":{},"用":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}},"边":{"docs":{},"界":{"docs":{},"要":{"docs":{},"记":{"docs":{},"得":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}},"题":{"docs":{},"目":{"docs":{},"根":{"docs":{},"本":{"docs":{},"读":{"docs":{},"不":{"docs":{},"懂":{"docs":{},"它":{"docs":{},"到":{"docs":{},"底":{"docs":{},"要":{"docs":{},"干":{"docs":{},"嘛":{"docs":{"程序员面试金典/栈与队列/三合一.html":{"ref":"程序员面试金典/栈与队列/三合一.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}},"几":{"docs":{},"个":{"docs":{},"标":{"docs":{},"注":{"docs":{},"/":{"docs":{},"/":{"docs":{},"注":{"docs":{},"意":{"docs":{},"！":{"docs":{"程序员面试金典/链表/移除重复节点.html":{"ref":"程序员面试金典/链表/移除重复节点.html","tf":0.006493506493506494}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"反":{"docs":{},"向":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"！":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}},"进":{"docs":{},"阶":{"docs":{},"：":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"改":{"docs":{},"变":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{"程序员面试金典/链表/回文链表.html":{"ref":"程序员面试金典/链表/回文链表.html","tf":0.00398406374501992}}}}}}}}}}}}}}}},"原":{"docs":{},"来":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{"程序员面试金典/链表/环路检测.html":{"ref":"程序员面试金典/链表/环路检测.html","tf":0.006666666666666667}}}}}}}}}}},"文":{"docs":{},"链":{"docs":{},"接":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"7":{"6":{"7":{"4":{"6":{"5":{"9":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"辅":{"docs":{},"助":{"docs":{},"栈":{"docs":{"程序员面试金典/栈与队列/栈的最小值.html":{"ref":"程序员面试金典/栈与队列/栈的最小值.html","tf":0.008695652173913044}}}}},"都":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"空":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"要":{"docs":{},"去":{"docs":{},"除":{"docs":{"程序员面试金典/栈与队列/堆盘子.html":{"ref":"程序员面试金典/栈与队列/堆盘子.html","tf":0.018867924528301886}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"访":{"docs":{},"问":{"docs":{},"状":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"这":{"docs":{},"一":{"docs":{},"句":{"docs":{},"就":{"docs":{},"懂":{"docs":{},"了":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"我":{"docs":{},"要":{"docs":{},"找":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"状":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}},"跟":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"d":{"docs":{},"f":{"docs":{"程序员面试金典/树与图/节点间通路.html":{"ref":"程序员面试金典/树与图/节点间通路.html","tf":0.011363636363636364}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"找":{"docs":{"程序员面试金典/树与图/路径总和3.html":{"ref":"程序员面试金典/树与图/路径总和3.html","tf":0.010416666666666666}}}}},"按":{"docs":{},"位":{"docs":{},"或":{"docs":{"程序员面试金典/位操作/绘制直线.html":{"ref":"程序员面试金典/位操作/绘制直线.html","tf":0.041666666666666664}}},"移":{"docs":{},"动":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},">":{"docs":{},"表":{"docs":{},"示":{"docs":{},"右":{"docs":{},"移":{"docs":{},"，":{"docs":{},"等":{"docs":{},"同":{"docs":{},"于":{"docs":{},"除":{"docs":{},"以":{"docs":{"程序员面试金典/递归与动态规划/递归乘法.html":{"ref":"程序员面试金典/递归与动态规划/递归乘法.html","tf":0.01282051282051282}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"量":{"docs":{},"序":{"docs":{},"列":{"docs":{},"个":{"docs":{},"数":{"docs":{},"k":{"docs":{},"，":{"docs":{},"对":{"docs":{},"序":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"k":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}},"放":{"docs":{},"到":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.010638297872340425}}}},"通":{"docs":{},"过":{"docs":{"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"ref":"程序员面试金典/递归与动态规划/汉诺塔问题.html","tf":0.02127659574468085}}}},"向":{"docs":{},"下":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}},"右":{"docs":{"程序员面试金典/递归与动态规划/迷路的机器人.html":{"ref":"程序员面试金典/递归与动态规划/迷路的机器人.html","tf":0.011363636363636364}}}},"默":{"docs":{},"认":{"docs":{},"方":{"docs":{},"式":{"docs":{"程序员面试金典/递归与动态规划/魔术索引.html":{"ref":"程序员面试金典/递归与动态规划/魔术索引.html","tf":0.05}}}}}},"妈":{"docs":{},"蛋":{"docs":{},"，":{"docs":{},"我":{"docs":{},"说":{"docs":{},"这":{"docs":{},"么":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"我":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"会":{"docs":{},"错":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"说":{"docs":{},"了":{"docs":{},"要":{"docs":{},"取":{"docs":{},"模":{"docs":{},"，":{"docs":{},"眼":{"docs":{},"瞎":{"docs":{},"了":{"docs":{"程序员面试金典/递归与动态规划/三步问题.html":{"ref":"程序员面试金典/递归与动态规划/三步问题.html","tf":0.03571428571428571}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"ref":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","tf":0.018867924528301886}}}}}}}}},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"基":{"docs":{},"于":{"docs":{},"分":{"docs":{},"别":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"收":{"docs":{},"集":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{},"但":{"docs":{},"基":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"比":{"docs":{},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"要":{"docs":{},"略":{"docs":{},"差":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"桶":{"docs":{},"分":{"docs":{},"配":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"分":{"docs":{},"配":{"docs":{},"之":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"序":{"docs":{},"列":{"docs":{},"又":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"待":{"docs":{},"排":{"docs":{},"数":{"docs":{},"据":{"docs":{},"可":{"docs":{},"以":{"docs":{},"分":{"docs":{},"为":{"docs":{},"d":{"docs":{},"个":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"基":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"将":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"d":{"docs":{},"*":{"2":{"docs":{},"n":{"docs":{},")":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"低":{"docs":{},"位":{"docs":{},"先":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"收":{"docs":{},"集":{"docs":{},"；":{"docs":{},"再":{"docs":{},"按":{"docs":{},"照":{"docs":{},"高":{"docs":{},"位":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"收":{"docs":{},"集":{"docs":{},"；":{"docs":{},"依":{"docs":{},"次":{"docs":{},"类":{"docs":{},"推":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"。":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"有":{"docs":{},"些":{"docs":{},"属":{"docs":{},"性":{"docs":{},"是":{"docs":{},"有":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"先":{"docs":{},"按":{"docs":{},"低":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"再":{"docs":{},"按":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"次":{"docs":{},"序":{"docs":{},"就":{"docs":{},"是":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"的":{"docs":{},"在":{"docs":{},"前":{"docs":{},"，":{"docs":{},"高":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"低":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"的":{"docs":{},"在":{"docs":{},"前":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"docs":{},"k":{"docs":{},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"k":{"docs":{},"为":{"docs":{},"桶":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"n":{"docs":{},">":{"docs":{},">":{"docs":{},"k":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"需":{"docs":{},"要":{"docs":{},"大":{"docs":{},"概":{"docs":{},"n":{"docs":{},"个":{"docs":{},"左":{"docs":{},"右":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"当":{"docs":{},"前":{"docs":{},"递":{"docs":{},"归":{"docs":{},"分":{"docs":{},"支":{"docs":{"程序员面试金典/递归与动态规划/括号.html":{"ref":"程序员面试金典/递归与动态规划/括号.html","tf":0.0196078431372549}}}}}}}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"重":{"docs":{},"复":{"docs":{},"地":{"docs":{},"走":{"docs":{},"访":{"docs":{},"过":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"错":{"docs":{},"误":{"docs":{},"就":{"docs":{},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"交":{"docs":{},"换":{"docs":{},"过":{"docs":{},"来":{"docs":{},"。":{"docs":{},"走":{"docs":{},"访":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"工":{"docs":{},"作":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"直":{"docs":{},"到":{"docs":{},"没":{"docs":{},"有":{"docs":{},"再":{"docs":{},"需":{"docs":{},"要":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"该":{"docs":{},"数":{"docs":{},"列":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"序":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"由":{"docs":{},"来":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"越":{"docs":{},"小":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"会":{"docs":{},"经":{"docs":{},"由":{"docs":{},"交":{"docs":{},"换":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"“":{"docs":{},"浮":{"docs":{},"”":{"docs":{},"到":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"端":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"出":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"在":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"从":{"docs":{},"后":{"docs":{},"向":{"docs":{},"前":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"取":{"docs":{},"得":{"docs":{},"位":{"docs":{},"数":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}},"图":{"docs":{},"片":{"docs":{},"演":{"docs":{},"示":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"希":{"docs":{},"尔":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"在":{"docs":{},"于":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"设":{"docs":{},"定":{"docs":{},"。":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"前":{"docs":{},"设":{"docs":{},"定":{"docs":{},"好":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"动":{"docs":{},"态":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"动":{"docs":{},"态":{"docs":{},"定":{"docs":{},"义":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"《":{"docs":{},"算":{"docs":{},"法":{"docs":{},"（":{"docs":{},"第":{"4":{"docs":{},"版":{"docs":{},"）":{"docs":{},"》":{"docs":{},"的":{"docs":{},"合":{"docs":{},"著":{"docs":{},"者":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"计":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"升":{"docs":{},"级":{"docs":{},"版":{"docs":{},"。":{"docs":{},"它":{"docs":{},"利":{"docs":{},"用":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"映":{"docs":{},"射":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"高":{"docs":{},"效":{"docs":{},"与":{"docs":{},"否":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"就":{"docs":{},"在":{"docs":{},"于":{"docs":{},"这":{"docs":{},"个":{"docs":{},"映":{"docs":{},"射":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"确":{"docs":{},"定":{"docs":{},"。":{"docs":{},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"好":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"使":{"docs":{},"用":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"桶":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"取":{"docs":{},"决":{"docs":{},"与":{"docs":{},"对":{"docs":{},"各":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"之":{"docs":{},"间":{"docs":{},"数":{"docs":{},"据":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"其":{"docs":{},"它":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"桶":{"docs":{},"划":{"docs":{},"分":{"docs":{},"的":{"docs":{},"越":{"docs":{},"小":{"docs":{},"，":{"docs":{},"各":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"越":{"docs":{},"少":{"docs":{},"，":{"docs":{},"排":{"docs":{},"序":{"docs":{},"所":{"docs":{},"用":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"也":{"docs":{},"会":{"docs":{},"越":{"docs":{},"少":{"docs":{},"。":{"docs":{},"但":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"就":{"docs":{},"会":{"docs":{},"增":{"docs":{},"大":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}},"趟":{"docs":{},"排":{"docs":{},"序":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}},"选":{"docs":{},"出":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"记":{"docs":{},"录":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"增":{"docs":{},"量":{"docs":{},"序":{"docs":{},"列":{"docs":{},"t":{"1":{"docs":{},"，":{"docs":{},"t":{"2":{"docs":{},"，":{"docs":{},"…":{"docs":{},"，":{"docs":{},"t":{"docs":{},"k":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"t":{"docs":{},"i":{"docs":{},">":{"docs":{},"t":{"docs":{},"j":{"docs":{},"，":{"docs":{},"t":{"docs":{},"k":{"docs":{},"=":{"1":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}},"排":{"docs":{},"序":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"步":{"docs":{},"骤":{"1":{"docs":{},"~":{"3":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"排":{"docs":{},"序":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}},"docs":{}}},"2":{"docs":{},"~":{"5":{"docs":{},"。":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}},"docs":{}}},"3":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"已":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"者":{"docs":{},"等":{"docs":{},"于":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"新":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"比":{"docs":{},"基":{"docs":{},"准":{"docs":{},"值":{"docs":{},"小":{"docs":{},"的":{"docs":{},"摆":{"docs":{},"放":{"docs":{},"在":{"docs":{},"基":{"docs":{},"准":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"比":{"docs":{},"基":{"docs":{},"准":{"docs":{},"值":{"docs":{},"大":{"docs":{},"的":{"docs":{},"摆":{"docs":{},"在":{"docs":{},"基":{"docs":{},"准":{"docs":{},"的":{"docs":{},"后":{"docs":{},"面":{"docs":{},"（":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"到":{"docs":{},"任":{"docs":{},"一":{"docs":{},"边":{"docs":{},"）":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"分":{"docs":{},"区":{"docs":{},"退":{"docs":{},"出":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"该":{"docs":{},"基":{"docs":{},"准":{"docs":{},"就":{"docs":{},"处":{"docs":{},"于":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"称":{"docs":{},"为":{"docs":{},"分":{"docs":{},"区":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"操":{"docs":{},"作":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"针":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"重":{"docs":{},"复":{"docs":{},"以":{"docs":{},"上":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"；":{"docs":{"basicalgo/sort/sort.html":{"ref":"basicalgo/sort/sort.html","tf":0.0017271157167530224}}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"每":{"docs":{},"个":{"docs":{},"桶":{"docs":{},"里":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"等":{"docs":{},"于":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"basicalgo/datastruct/map.html":{"ref":"basicalgo/datastruct/map.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}},"length":6955},"corpusTokens":["!","!=","!==","!head.next)","!p.next)","\"\"","\"\")","\"\";","\"1\";","\"111221\"","\"anagram中国\"","\"c\":","\"cd\":","\"cm\":","\"d\":","\"i\":","\"iv\":","\"ix\":","\"l\":","\"m\":","\"v\":","\"x\":","\"xc\":","\"xl\":","\"中nagar国am\"","%","&","&&","'","'%20')","''","'')","'').split('').reverse().join('')","'',","'(')","')","').filter((element)","').join('%20')","',')","'.'","'.')","'..')","'/'","'0'","'0')","'0.'","'1'","'1234',输出结果为'1,234'","'1234567899999999999'","'9007199254740991'","'_'","'error'","'number'","'q')","(","(!arr","(!balancestatus)","(!data.empty()","(!data.empty())","(!first)","(!hasgrouped)","(!head","(!head)","(!help.empty())","(!node)","(!num_set.has(num","(!numstr)","(!o)","(!p","(!p.visited)","(!recursivelycheck(currentnode.next))","(!res[level])","(!root)","(!set.has(cur.val))","(!this.stack[stacknum])","(!tree)","((1","((left","((lson","((mark","((n","((root.val","()","(++rev[i]","(1","(?:exp)匹配","(?=exp)匹配","(a","(a,","(ab","(animal)","(arr)","(arr,","(arr.length","(astr)","(b","(board)","(board,","(board.length","(bucket","(cap)","(const","(containsduplicate(element))","(count","(cur)","(cur.next)","(cur.val","(curr","(currentnod","(currentnode)","(currentnode.v","(digits)","(element.length","(end","(error)","(even","(f","(f)","(fast","(fast.next","(first","(first,","(first.next)","(grid)","(haystack,","(head","(head)","(head,","(head.val","(heada,","(high","(i","(image,","(index","(inorder.length","(inorder[i]","(int","(isanagrams(arritem[0],","(isbadversion)","(item","(j","(k","(key","(key){","(l","(l1","(l1)","(l1,","(l1.val","(l2","(l2)","(largest","(last.length","(left","(left.val","(left[0]","(len","(lenb","(length","(let","(levels.length","(list[i][j]","(lremain","(lremain,","(lson","(m","(m,","(map.get(presum)","(math.abs(left","(math.abs(length1","(math.abs(n1","(math.abs(x)","(matrix)","(n","(n)","(n,","(n1","(needle.length","(node","(node)","(node,","(node.left","(node.left)","(node.right","(node.right)","(node.v","(node1)","(node2)","(node_queue.length)","(num","(num)","(num1,","(num_set.has(currentnum","(nums)","(nums,","(nums.length","(nums1,","(nums1[m","(nums:","(nums[mid]","(o)","(ob","(obstaclegrid)","(obstaclegrid[i][j]","(oc.next","(oc.next.v","(odd","(p","(p)","(p1","(p1.val","(p2","(p_start","(path)","(path,","(pointer.next)","(pos[0]","(pre","(preorder,","(price","(prices)","(ptr","(q","(quenue.length","(queue.length","(r","(re","(reg.test(item)","(resstr[0]","(result","(right","(root","(root)","(root,","(root.left","(root.left)","(root.right","(root.right)","(row","(s","(s)","(s,","(s.charat(segstart)","(s.length","(s.split(\"\").reverse().join(\"\")","(s1","(s1,","(s1.length","(segid","(segstart","(set.has(cur.val))","(stacknum,","(stacksize)","(start","(str)","(str.length","(strs)","(strs.length","(sum","(t","(t1","(t1,","(t2","(target","(temp","(temp.next","(this.arr.length","(this.data.length","(this.help.length","(this.queue.length","(this.stack[stacknum].length","(this.stack[this.stack.length","(tree)","(true)","(val)","(var","(visited.has(head))","(x","(x)","(x,","(如果不用这个方法，就判断下第一个字符是不是'",")",")。","*","*/","*代表匹配0次以上","+","++;","++count","++i)","+=","+num1[i]","+num2[j]",",",",a[4]是0，就是之前的存储的值，所以返回[a[temp],i]",",k是strs中字符串的最大长度。o(n)是外层循环，然后在o(klogk)时间内对每个字符串排序。","...","...nums,","/","/*","/**","//","//\"0009007199254740991\"","//\"1234567899999999999\"","//\"进位\"","//1.关键就在这里，找到了k","//1.刚开始遍历时","//2.递归中间","//[[1],[2],[3]]","//cnt在下一轮循环时找当前0位的左侧有多少个1","//null","//pre保存0右侧有多少位1","//target","//unicode解码","//一个节点是回文","//不是空树，则判断左右子树","//两个节点元素值不一样也不对称","//为空则结束","//交换root的左右子树","//从第一行开始，一行一行产生","//假设root两边的子树自己都已经翻转成功了，那么只需要再将左右子树互换一下就成功了","//先去掉点","//先放一个元素","//入队，因为他俩会同时比较。","//出栈，存放根节点","//初始化函数","//初始调用时，为false。因为一个根节点，不是左叶子节点","//判断子树1的右子树和子树2的左子树是否相同，子树1的左子树和子树2的右子树是否相同","//包括了两个空字符串情况","//包括了其中一个为空字符串情况","//去掉空格","//取两个数字的最大长度","//只有长度相等时，才能继续","//只需要取第一个元素判断下","//右分支","//叶子节点","//因为他俩会同时比较","//因为只有一次编辑的机会，如果两个字符串长度相差大于1，","//因为要删除节点，所以我们将节点的下一个节点赋值给nextnod","//如果一个为空一个不为空，说明不是对称的，直接返回fals","//如果最后一位是1","//如果这两个值不相同，也不是对称的，直接返回fals","//如果都为空继续循环","//如果都没有的话","//如果队列不为空就继续循环","//定义一个自己的mymap，执行初始化函数，在其原型链上写","//定义加法过程中需要用到的变量","//将下个节点的值赋给节点","//将下个节点的指向赋给节点","//左分支","//左右子树翻转自己去处理就行了，我们规定每个子树的root都跟最终的root处理方式一样即可","//左子树为空，当右子树为空时对称","//左子节点和右子节点同时入队","//左子节点的右子节点和右子节点的左子节点同时入队，","//左子节点的左子节点和右子节点的右子节点同时","//已经访问过","//当前列的长度","//往后走","//往后走k步","//得到上一行的字符串","//得到字符","//得到第","//循环几层","//把当前节点删掉","//按照左","//栈","//检查每一列是否重复","//检查每一行是否重复","//检验长度和字符是否正确","//每一个组","//每两个出队","//没有的话","//注意","//注意等号","//注意！","//生成的随机数的集合","//用0去补齐长度","//用来存放我们的kv","//直接返回fals","//直至左节点为空，即没有左节点为止","//空树","//第一行就直接输出","//类似11100110这种情况末尾需再比较一次；","//经过上一行判断出左子树不为空了，右子树为空的话不对称","//给他一次不匹配的机会","//行清零","//要找的叶子节点","//计算下总长度","//记录","//超出一位","//转成数组","//输出当前行的字符串","//这个地方很灵性，理解下，比如总共6个元素，第4个元素开始它一直最小的，比如","//这种情况只能有一个字符不一样，并且注意要顺序一致","//这里定义了存放的桶的个数，","//这里是层序遍历之后的代码","//这里要记住入队的顺序，他会每两个两个的出队。","//进位","//递归节点","//递归，知道n","//遍历，直到最长的都为空","//都走到最后一个节点","//重新置为head","//长度为","//队列","/[^1","/^[\\+|\\","0","0)","0))","0).concat(nums.filter(a","0);","0,","0,len","00000000111111110000000011111111","00001111000011110000111100001111","00110011001100110011001100110011","01010101010101010101010101010101","023","0;","0;//新链表当前未取余的值","0;//是否进一","0=>2，target","0]","0b01010101...","0b10101010...","0x00ff00ff","0x0f0f0f0f","0x33333333","0x55555555","0xaaaaaaaa","0。","0到","0，则三数之和必然无法等于","0，即","0，即先有状态","0，往右的","0，我们在填写“状态表","0，此时卖出股票，因此加上这一天的股价。","0，比如","0，满足则添加进结果集","0，看了半天。上面的好理解鞋","0，结束循环","0，那么这一段","0；","1","1(不需要减最高位，后面位的任何一个","1(从","1)","1))","1));","1))才等于","1),","1).equals(second.substring(i));","1)/n","1);","1)和新的有序区(rn),且满足r[1,2…n","1)开始时，当前有序区和无序区分别为r[1..i","1)最高位`result`和`result","1)调整为新堆，然后再次将r[1]与无序区最后一个元素交换，得到新的无序区(r1,r2….rn","1,","1,0^1^1","1,n","1,n),","1,rn)。不断重复此过程直到有序区的元素个数为n","1.","1.1","1.3","1.动态规划","1.暴力破解","1.暴力解决","1/(n","1/n","10","10)","10);//取余则为新链表的值","10,","10.1","10.2","10.3","10.4","100,","1000,","100000]范围内。","1010","10;","10、基数排序（radix","11,","12,","123,456","123456","128","128，也就是","13,","14,","15","15,","16","16)","16,","17,","18,","19,","1959年shell发明，第一个突破o(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。","1;","1;//根节点不为空高度至少为1","1=>0，找到就说明可以连上","1=>2,那当前找到的是","1]","1])","1],","1].length","1];","1][0]","1][0],","1][0]。","1][0]，不可能是持股的状态","1][1]","1][1],","1][1]，","1][j],","1][length2","1][n","1][n],","1]和r(i..n）。该趟排序从当前无序区中","1`就会是","1`都会是","1、冒泡排序（bubbl","1。","1。&预算也就是","1。假如我们不将","1不能由状态","1行的，就知道n行的","1趟直接选择排序得到有序结果。具体算法描述如下：","1趟结束，数组有序化了。","1，2，3，第二天同时卖出并且买入2的价格。但这样等价于第二天可以没有交易，只是计算了下可得利润。","1，f","1，则在新链表最前方添加节点1","1，则整个排序过程完成。","1，相当于我们在字符串的左边界的左侧，还没有开始移动","1，那`result","1，那么，当下一个数字是","1：直接从状态的语义出发；","2","2)","2))","2))+","2),","2).fill(0))","2);","2)和新的有序区(rn","2,","2.","2.1","2.2","2.3","2.4","2.不用缓存","20,","21,","22]","23","2;","2”","2、选择排序（select","2，后面再接上一个","2：如果状态的语义不好思考，就考虑「状态转移方程」的边界需要什么样初始化的条件；","2；","3","3)","3),计算每个小cube的index。","3,","3.","3.1","3.2","3.3","3.4","31)","32","3;","3sum.html?h=threesum","3”其实是等价的。","3”进行修改）","3”进行修改：","3”，因为状态只能从","3、插入排序（insert","3最小，除非一直pop，直到只剩下4个元素。这也是为什么pop那里min_stack也要pop","3的幂","3，这样后面一直getmin几次都是","3，那从第4次，后续6个min_stack都一直push进","3：","3：从「状态转移方程」方程的下标看是否需要多设置一行、一列表示「哨兵」（sentinel），这样可以避免一些特殊情况的讨论。","4","4)","4,","4.","4.1","4.2","4.3","4.4","40,","400,","4]","4、希尔排序（shell","4：","5","5,","5.1","5.2","5.3","5.4","50,","500,","5;","5]，这时又来了个","5、归并排序（merg","5：","6,","6.1","6.2","6.3","65","66","6cp3/","6、快速排序（quick","6：（根据“参考代码","7","7,","7.1","7.2","7.3","72","7k7u/","7、堆排序（heap","8)","8,","8.1","8.2","8.3","8.4","8;","8、计数排序（count","9","9)","9,","9.1","9.2","9.3","9.4","90,","900","97","987","9]","9]+/","9]/","9]/g,","9、桶排序（bucket",":",";","=","=0","=0;i","=5,a[5]是undefined。所以存储a[4]","==","===","=>","=>5","=[];",">",">'",">1",">2",">=",">>",">>=",">>>","?","@param","@return","[","[...temp,","[...tempnums]","[...this.arr];","[0,","[0,0,0,1,1,1,2,2,3,3,4]","[1,","[1,1,3,3,2,2,4]","[1,2,3]","[2,","[3,","[6,7,8,1,2,3,4,5]","[9,","[[0,1],[2,3,4],[5,6]]","[[0,2,5],[0,2,6],[1,2,5]...]","[[3],[2],[1]]","[[]]","[[strs[0]]];","[]","[])","[],","[].concat(nums)","[]//9宫格","[]//行","[];","[ab","[ab,","[base]","[heada,","[infinity]","[item];","[nums[index],","[nums[n],","[root.val.tostring()]","[root.val])","[root]","[start,","\\1指第一个匹配括号内的元素","\\b","\\d","]?[0","^","^=","`${item.length}${item[0]}`)","a,","a,那就是右数第","a.length","a.padstart(maxlength,","a[i]","a[i];","a[j]","a[j];","a[largest])","a[q];","aaabbcccddccaaaaaaandw","ab.next","ab;","acii","add","add(a,","add;","addr","addresses/solution/fu","addtwonumb","an","ancestor","anim","animalshelf","animalshelf.prototype.dequeueani","animalshelf.prototype.dequeuedog","animalshelf.prototype.enqueu","ans)","ans.push(newarr)","ans.push(segments.join('.'))","ans;","answer","answer.push(base)","anything,","arr","arr)","arr.join('')","arr.length","arr.length,","arr.length;","arr.push(e1","arr.push(item);","arr.push(p.val)","arr.reduce((a,","arr.reverse())","arr.reverse().join('')","arr;","arr[0];","arr[i]","arr[i];","arr[index])","arr[j+1]","arr[j+1])","arr[j+1];","arr[j]","arr[j];","arr[largest])","arr[preindex","arr[preindex]","arr[preindex];","arr[sortedindex++]","array","array(26).fill(0)","array(bucketcount);","array(len1","array(m)","array(maxvalu","array(n","array(seg_count)","array.","array.from(array(n","array.from(res)","arritem.push(item);","arrlen","arr为原始数组，从最低位开始取每个位组成radix数组；","astr","astr)","astr.length","away","b","b)","b);","b,","b.length)","b.padstart(maxlength,","ba","ba)","ba.next","ba]","backtrace(nums,","backtrack('')","backtrack('',","backtrack(nums,","backtrack(str)","backtrack(str,","bad","balancestatu","balloons/solution/dong","base","base)","befor","begin","bf","biao","binari","binarytreepath","bit","board","board.foreach(el","board.length,","board[0].length","bool","bool:","boolean","boolean[]","boolean[graph.length];","boundari","break;","bstsequenc","bubblesort(arr)","bucket","bucket[j]","bucketcount","bucketlen","buckets","bucketsize)","bucketsort(arr,","bug","build","build()","build(root.val)","build(stop)","buildlist(this.arr,","buildmaxheap(arr)","buildmaxheap(arr);","buildmaxheap(int[]","buildmaxheap(nums,","buildtre","buildtree(preorder.slice(1,","buildtree(preorder.slice(mid","buy","buy)","c","c)","c,","c.push(a.pop())","c2sl/","calc","call","canpermutepalindrom","canpermutepalindrome(s)","canpermutepalindrome(self,","canthreepartsequalsum","cap","case","catch","cd","ce","cha","chai","char","char.charcodeat()","chararr","checkinclus","checkpermut","checksubtre","checksubtree(t1.left,","checksubtree(t1.right,","checksubtree(treenod","childdepth","chong","chr","chuan","chuo","class","climbstair","climbstairs(int","climbstairs(n","clone","cn.com/explore/interview/card/top","cn.com/problems/3sum/solution/hua","cn.com/problems/best","cn.com/problems/binari","cn.com/problems/bst","cn.com/problems/burst","cn.com/problems/check","cn.com/problems/first","cn.com/problems/i","cn.com/problems/link","cn.com/problems/longest","cn.com/problems/on","cn.com/problems/palindrom","cn.com/problems/partit","cn.com/problems/path","cn.com/problems/permut","cn.com/problems/restor","cnt","cnt++","cnt1","cnt2","code","col","col:","col;减少空间消耗","colum","common","compressstr","configur","conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2","console.log('reversestr',reversestr)","console.log('str',str)","console.log(a)","console.log(map)","console.log(queen.result)","console.log(res)","console.log(rev)","console.log(s1,","console.log(target","const","constructor(num)","containsdupl","continu","continue;","convertinteg","count","count++","count;","countandsay","countandsay(n","countandsay(n)","counter","countingsort(arr,","countprim","cube","cur","cur.next","cur.val])","cur_sum","curr","curr.next","current","current)","current;","currentnum","currentstreak","currentstreak)","cycl","d","data","data.empty();","data.pop();","data.push(temp);","data.push(val);","data.top())","data.top();","data;","de","decare(nums)","def","default_bucket_s","default_bucket_size;","definit","delet","deletenod","detectcycl","dev","df","dfs(cur,","dfs(lremain","dfs(node)","dfs(node.left)","dfs(node.left),","dfs(node.right)","dfs(o.left)","dfs(o.right)","dfs(obstaclegrid,","dfs(root)","dfs(root,","dfs(root.left)","dfs(root.left,","dfs(root.right)","dfs(root.right,","dfs(s,","diameterofbinarytre","digit","digits.length;","digits.reverse();","dir","dir)","dong","dp","dp(m","dp(m,n","dp(m,n)","dp(m,n)表示：s1[0...m]","dp[0...m][0]","dp[0]","dp[0][0...n]","dp[0][0]","dp[1]","dp[][]","dp[i","dp[i]","dp[i][0]","dp[i][1]","dp[i][j]","dp[j]","dp[len","dp[m","dp[m][n","dp[m][n]","dp”","dp解法","drawline(int","dumyhead","dumyhead.next","duo","dx","dy","e2)","easy/8/sort","el)","el.foreach((e2)","element","element.foreach(item","el：数组中的当前元素","encodeuri(s.substring(0,","end","end)","endoffirsthalf","endoffirsthalf(head)","error;","es6","es6map","es6map数据结构底层原理模拟","escape(s)","even","even.next","even.next;","even;","evenhead","evenhead;","excel","exchangebit","exip/","exist","exp","exp，不捕获匹配的文本，也不给此分组分配组号","f","fa","fals","false)","false;","false。整个匹配下来如果只失败一次或者没有失败，返回","false，其次拼接两个","fang","fast","fast.next.next","fe","fen","findkthlargest(int[]","findlengthoflcis(nums)","findmagicindex","findmaxlen(str,","findmod","findsingl","findsumeq(n,","findwhetherexistspath","findwhetherexistspath(int","first","first,","first.length","first.length();","first.next","first.next;","first.substring(i","first.substring(i).equals(second.substring(i","firsthalfend","firsthalfend.next","firstuniqchar","first还有后续节点，就让second和first一起往后移动，直到first到链表末尾。这是second.next就是要删除的倒数第n个节点了","fizzbuzz","floodfil","for(int","for(let","for(var","forward","frontpoint","frontpointer.next","frontpointer.val)","fu","function","function()","function(chararray,left,right)","function(haystack,","function(head)","function(heada,","function(int[]","function(l1,","function(matrix)","function(n)","function(nums)","function(nums,","function(nums1,","function(preorder,","function(prices)","function(root)","function(s)","function(stop)","function(strs)","function(text1,","function(version)","function(x)","g","gap","gap;","ge","genarray(n)","generateparenthesi","getintersectionnod","getminimumdiffer","getnextstring(last)","getnextstring(last);","getnextstring(last.substring(num));","getrandom","getrandom(start,","getrepeatnum(last);","getrepeatnum(string)","getsum","getsum(root,","getsum(root.left,","getsum(root.right,","git","gitbook","gong","gou","graph,","graph[i][0])","graph[i][1]","grid","grid)","grid.length,","grid[0].length","grid[i","grid[i][j","grid[i][j]","groupanagram","guanpengchn/","gui","hammingdist","hanota","hascycl","hasgroup","hash","hashmap","haspathsum","haspathsum(root.left,","haspathsum(root.right,","haystack.indexof(needle)","haystack.split('');","haystackarr","haystackarr.length;i","head","head)","head,","head.next","head.next,","head.next.next","head.next;","head.val","head.val;","head;","heada","heada,","heada];","headb","headb)","headb,","headb;","headb];","heapify(arr,","heapsiz","heapsize)","heapsize);","heapsize;","heapsort(arr)","help(left,","help(left.left,","help(left.right,","help(root.left,","help.pop();","help.push(temp);","help.top();","help;","helper","helper(graph,","helper(image,","helper(int[][]","helper(node.left,","helper(node.right,","helper(preorder,","helper(root,","helper(root.left,","helper(root.right,","helper(tree,","here","here.","hermannoht","hex_even","hex_odd","high,","hintindex","https://github.com/johnzhu12/leetcode_source_javascript.git","https://johnzhu12.github.io/easy/array/只出现一次的数字.html","https://leetcod","https://leetcode.wang/leetcod","hua","i)","i);","i++","i++;","i+1;","i+1。","i,","i,这里把对应值位置存储当前的index。","i;","i=0,len=","i=0,len=nums1.length;i=0){","i=0;i","i=1;i0){","i=x1;i>5]|=1","i_end)","i_end,","i_start","i_start,","if(!root)","if(head","if(i","if(needl","if(num","if(nums.length","ii","iii","iii/solution/tong","imag","image.length","image[0].length","image[i][j]","image[sr][sc],","increasingtriplet","index","index)","index))","index++","index;","infin","infinity,","infinity;","initi","initlist()","inord","inorder(root,res);","inorder(root,res){","inorder(root.left,res);","inorder(root.right,res);","inorder)","inorder,","inorder.indexof(preorder[0])","inorder.indexof(rootval)","inorder.length","inorder.slice(0,","inorder.slice(mid","inordersuccessor","inordertravers","inordertraversal(root)","inordertraversal=function(root){","insert","insertbit","insertionsort(arr)","instal","instanti","instead.","int","int[][]","int[length1","intersect","interview","introduct","iohj/","ip","ipdi","irecord","isanagram","isanagram(s,","isbadvers","isbadversion()","isbalanc","isempty()","isflipedstr","isleft)","ispalindrom","ispalindromestr(arr)","ispowerofthre","issaf","issafe(row)","issymmetr","istreeeql(t1,","istreeeql(t1.left,","istreeeql(t1.right,","istreeeql(treenod","isuniqu","isvalidbst","isvalidsudoku","isvalidsudoku(board)","it.","item","item))","item.join(''))","item.split('_'))","j","j)","j))","j,","j;","j=0,i=1。swap","j]","j])","jian","jie","jing","jrecord","js312","js。源码在每个对应目录的","js有个api，直接翻转","ju","judge(node,","judge(node.left,","judge(node.right,","judge(root,","jue","k","k)","k);","kdo7j/","key)","key.length","key，本质一样","kmp","kmpjie","kthtolast","kuo","l","l,","l1","l1.next","l1.next);","l1.val","l1;","l1val","l2","l2)","l2){","l2.next","l2.next);","l2.val","l2;","l2val","l;","larg","largehead","largest","largest);","largest,","last","last.charat(0)","last.foreach((e1)","last：上次运算结果","lcci/solution/df","lcci/solution/di","lcci/solution/fen","lcci/solution/huan","lcci/solution/hui","lcci/solution/javascriptli","lcci/solution/sh","lcci/solution/shu","leetcod","leetcode_source_javascript","left","left,","left;","leftdepth","leftnum","leftnum,","len","len(heada)+len(headb)的距离来确定是否相交","len)","len1","len2","len2).fill(0)","len;","lena","lena)","lenb","length","length)","length))","length).replace(/\\s/g,","length).split('","length,","length1","length2","length2)","lengthoflis(nums)","lengthoflongestsubstr","less","less,","level","level)","levelord","levels.map((arr)","levels.push([])","levels.push([]);","levels;","levels[level].push(node.val)","levels[level].push(node.val);","lhz960904/","li","lian","liang","lie","link","linkedlist","list","list.","listnod","listnode('head');","listnode(0)","listnode(add));","listnode(f)","listnode(sum","listnode(val)","listofdepth","lists）。具体算法描述如下：","liweiwei1419/","logn","longest","longestcommonprefix","longestcommonsubsequ","longestconsecut","longestpalindrom","longeststreak","low,","lowestcommonancestor","lson","lu","lucif","lucifer/","m","m)","m,","m1","m1)","m2","m2)","m4","m4)","m8","m8)","m]","map","map()","map)","map.get(presum)","map.get(rootval)","map.get(target","map.row)","map.set(presum,","map1","map2","mark","mask","math.floor((maxvalu","math.floor(gap","math.floor(len","math.floor(len/2);","math.floor(s.length","math.floor(sum","math.floor(t","math.max(...nums)","math.max(a.length,","math.max(ans,","math.max(dp[1],","math.max(dp[i],","math.max(dp[m","math.max(l,","math.max(left,","math.max(longeststreak,","math.max(maxans,","math.max(pr","math.max(res,","math.min(","math.min(ans,","math.min(dp[1],","math.min(mindepth(root.left),","math.min(mindepth(root.right),","math.pow(2,","math.random()","math.sign","math.sign(x)","math.trunc(i","math.trunc(j","matrix","matrix.length","matrix.length;","matrix.reverse()","matrix[0].length","matrix[0].length;","max","max(dp(m","max(dp[i","max(s(0)...s(i","max(s)","max,","max_sum","maxan","maxans;","maxareaofisland(int[][]","maxcoin","maxcount","maxcount)","maxdepth","maxdepth(root.left),","maxdepth(root.right);","maxdigit)","maxheapify(a,","maxheapify(int[]","maxheapify(nums,","maxlen","maxlen)","maxlen);","maxlength","maxprofit","maxprofit)","maxsubarray","maxvalu","maxvalue)","mei","merg","mergesort(arr)","mergetwolist","mid","mid)","mid))","mid));","mid]","mid]有序","mid，则替换","mid，则说明我们找到了长度为","mid；否则，若大于","min","min)","min);","mindepth","mindistance(word1,","minindex,","minpathsum","minpric","minstack","minstack()","minstack.prototype.getmin","minstack.prototype.pop","minstack.prototype.push","minstack.prototype.top","minvalu","minvalue)","minval，dp[0]","minwindow","mirror(root)","mod","modifi","money","more","more,","morri","move","move(m","move(n,","movezero","multi","multipli","myatoi","mymap(){","mymap.prototype.bucket","mymap.prototype.init","mymap.prototype.len","m，找出","n","n)","n,","n1","n2","n2)","n;","n]","need","needle)","needle.length;","needlelen","new","newarr","newcolor","newcolor)","newhead","newhead;","next","nextnod","nextnode.next;","nextnode.val;","nexttemp","nlgn","node","node.","node.left.val.tostring())","node.next","node.next!","node.next;","node.right","node.right.val.tostring())","node.v","node.val)","node.val);","node.val,","node1","node1.next;","node2","node2.next;","node;","node;//哑结点","node_queu","node_queue.push(node.left)","node_queue.push(node.right)","node_queue.shift()","nomatch","npm","null","null)","null))","null,","null;","null这一句，我想不是只有末尾置成null了吗，怎么会每一个节点的指向都置为null。","num","num1.length","num2)","num2.length","num_set","num_set)","num_set.add(num)","number","number(n).tostring(2)","number(root.val)","number(row)","number.max_safe_integ","number.max_safe_integer,","number.min_valu","number[]):","nummap","nums)","nums,","nums.filter(a","nums.foreach((x)","nums.join(\",\");","nums.length","nums.length;","nums.length;i","nums.reduce((last,","nums.sort((a,","nums.splice(i,","nums1","nums1.filter((el)","nums1[","nums1[n","nums2","nums2)","nums2,","nums2.includes(el)","nums2.splice(nums2.indexof(el),","nums2.splice(nums2.indexof(item),1)","nums2[","nums2[n","nums;","nums[0]","nums[0],","nums[0];","nums[i","nums[i]","nums[i]+=nums[i","nums[i],nums[++i]","nums[i];,a[temp]肯定是undefined，a[nums[i]]","nums[i]后面的两端，数字分别为","nums[i]大于","nums[i]，再使用左右指针指向","nums[index]];","nums[i−1]，则说明该数字重复，会导致结果重复，所以应该跳过","nums[j]","nums[j]。关键是题目给出是排序数组！","nums[l+1]","nums[l]","nums[mid]","nums[n]]","nums[r]，计算三个数的和","nums[row].length","nums[r−1]","nums[start]","nums[start])","numstr","nx","ny","n个记录的直接选择排序可经过n","n，而只需要到","o(1)","o(n)","o(n),因为有递归栈","o(nklogk)","ob","ob.next;","ob.val)","ob;","obj","obj.getmin()","obj.isempty()","obj.peek()","obj.pop()","obj.push(val)","obj.push(x)","obj.reset()","obj.shuffle()","obj.top()","object","obstaclegrid.length","obstaclegrid[0].length","obstaclegrid[0].length)","obstaclegrid[i][j]","oc","oc.next","oc.next.next;","oc.next;","occ","odd","odd.next","odd.next;","oddevenlist","oldcolor","oldcolor,","oldl","oldl)","oneeditaway","oneeditaway(str","origin","overwrit","p","p)","p,","p.left;","p.next","p.right;","p.val","p.visit","p1","p1,p2两个游标，p2每次两步，如果有环，p2肯定早晚会遇到p1。如果没有，p2走到结尾，结束。","p1.next","p1.next;","p2","p2)","p2.next","p2.next)","p2.next.next;","p2.next;","p2.val)","p_end)","p_end,","p_start","p_start,","pai","palindrom","param_1","param_2","param_3","param_4","parseint(a[i])","parseint(b[i])","parseint(math.random()","parseint(nums.length","parseint(numstr[0])","parseint(reversestr,","parseint(start","partit","partitionindex,","path","path)","path.split('/'),","path_queu","path_queue.push(path","path_queue.shift()","paths.push(path)","paths/solution/","pathsum","pathsum)","pathwithobstacl","peek()","permut","place","place在数组上实现。具体算法描述如下：","place排序（即只需用到o(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。","pluson","plusone(digits)","po","point","point)","pointer","pointer.next","pop","pop()","popat","pos.join('')","pos.length","pos.shift()","pos[i","pow(x,n).md>)","pre","pre)","pre);","preindex","preindex,","preorder","preorder.length","preorder[p_start]","preorder为空","presum","presum)","prev","prev.next","previou","previous;","pre，该指针的下一个节点指向真正的头结点head。使用预先指针的目的在于链表初始化时无可用节点值，而且链表构造过程需要指针移动，进而会导致头指针丢失，无法返回结果。","price","price[i]","prices)","prices.length;","prices[0]","prices[0]。","prices[i]","prices[i]);","prices[i]：昨天持股，就在索引为","prices[i]：注意：状态","printbin","privat","private:","problem","profit","profit;","ptr","ptr.next","public","public:","push(int","q","q)","q.val","q.val)","qi","qian","qiu","queen","queen(8)","quenu","quenue,","quenue.push(cur)","quenue.push(root.left)","quenue.push(root.right)","quenue.shift()","quenue.slice(),","question","queue","queue.push(left.left)","queue.push(left.right)","queue.push(right.left)","queue.push(right.right)","queue.push(root.left)","queue.push(root.right)","queue.shift()","queue.shift(),","quickselect(int[]","quickselect(nums,","quicksort(arr,","r","r)","r);","r,","r;","r[k]，将它与无序区的第1个记录r交换，使r[1..i]和r[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；","radixsort(arr,","random","random();","randompartit","randompartition(a,","re","recursivelycheck","recursivelycheck(head)","reduce:","reg","removedupl","removeduplicatenod","removeduplicatenodes(listnod","removeduplicates(nums)","removenthfromend","replace(/\\d{3}/g,',')","replacespac","res,","res.add(str)","res.indexof(targetsum)","res.length","res.map((item)","res.next","res.push([...path])","res.push([...temp])","res.push([...track])","res.push(p.val);","res.push(path)","res.push(pathsum)","res.push(root.val);","res.push(stack.slice())","res.push(str)","res.tostring(2)","res;","res=[];","res[0]","res[level]","res[level].push(root.val);","res[level].unshift(root.val)","reset","resstr","resstr.length","resstr.substring(1)","restoreipaddress","result","res。","return","return;","rev","rev.push(1);","rev.reverse()","rev[i]","revers","reverse(l1)","reverse(l2)","reversebit","reverselist","reverselist(firsthalfend.next)","reverselist(head.next);","reverselist(secondhalfstart)","reversestr","reversetree(root)","reversetree(root);","reversetree(root.left);","reversetree(root.right);","reversewords(s)","right","right)","right.left)","right.length>0)","right.right)","right.val)","right;","rightdepth","rightdepth;","rk","rob","romantoint","root","root.left","root.left;","root.right","root.right)","root.right;","root.val","root.val)","root.val.tostring()","root;","rootval","rotat","row","row)","row:","rremain,","rson","rson)","rson)))","s","s(0)","s(i)","s(i)为以第","s)","s.indexof(s1)","s.length","s.length)","s.length,","s.length;","s.length>0)","s.pop();","s.push(item)","s.push(p);","s.replace(/[^a","s.reverse()","s.splice(0,","s.split(\"\")","s.split(\"\").sort().join(\"\")","s.substr(0,","s.substring(begin,","s.tolowercase()","s.trim()","s1","s1.","s1.length","s1.length,","s1.split(\"\").sort().join(\"\")","s1.split('').sort().join()","s1[m]","s1tem","s2","s2)","s2.length","s2.length)","s2.split(\"\").sort().join(\"\")","s2.split('').sort().join()","s2[0...n]","s2la/","s2tem","s2，则如果是由","s:","s=[];","s[i]","s[left..right]","s[n]：dp(m,n)","same","san","save","sc,","sc8816/","score","score)","search","search(arr,","search(nums,","searching/52/","second","second)","second.length","second.length();","second.next","second.next.next;","second.next.next删除掉，返回头节点","second.next;","second.v","secondhalfstart","sedgewick提出的。","seg_count","seg_count)","segend","segid","segid,","segment","segments[segid]","segstart","segstart)","segstart;","selectionsort(arr)","sell","sequenc","serv","set","set()","set(),","set();","set(nums);","set.add(cur.val)","set.add(prev.val)","set.siz","setzero","set，并且置","sh","shellsort(arr)","shi","shu","shuffl","si","sign","simplifypath","singlenumb","singli","slice","slow","slow)","slow.next","small","smallhead","small，则替换","small；否则，若小于等于","solut","solution(nums)","solution.prototype.reset","solution.prototype.shuffl","solution/","solution:","solvenqueen","sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。","sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。","sortedarraytobst","sortedarraytobst(nums.slice(0,","sortedarraytobst(nums.slice(index","sortedarraytobst(nums.slice(mid","sortedindex","sortedstack","sortedstack()","sortedstack.prototype.isempti","sortedstack.prototype.peek","sortedstack.prototype.pop","sortedstack.prototype.push","sort）","sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。","sqrt(n)","sr,","stack","stack,","stack.join('/')","stack.length","stack.pop()","stack.push(i)","stack.push(root.val)","stacknum","stackofpl","stackofplates.prototype.push","stacksiz","start","start))","start,","static","step","stock/solution/bao","stop","stop)","str","str)","str.length","str.match(reg);","str.padstart(32,","str.replace(/\\b(?=(?:\\d{3})+\\b)/g,","str.split('","str.split('').reverse().join('')","str.substr(0,","str.substr(index","str.trim();","str_revers","str_reverse;","strarr","strarr.reverse().join('","string","string.charat(0);","string/solution/zi","string[0]","strlen","strs.length;","strs[0]","strstr","structur","su","suan","subset","substring/solution/zhong","subtre","such:","sum","sum)","sumofleftleav","sum判断是否满足为","suo","swap(a,","swap(arr,","swap(int[]","swap(maxtrix[i][j],maxtrix[j][i])。注意的地方就是","swap(nums,","swap(root)","swap(root);","t","t)","t.split(\"\").sort().join(\"\")","t1,","t1.val","t2","t2)","t2);","t2.left)","t2.right)","t2.right);","t2.val","t8hl/","tag","tai","target","target)","target);","targetsum","targetsum)","temp","temp)","temp.next","temp.next;","temp;","temp_arr","tempnum","text1","text1.length;","text1[m]","text2","text2)","text2.length;","text2[n]","text2[n]时，此时我们要看两个字符串分别单独往回撤一个字符串的对比情况，获取两者的最大值即可，所以有","text2[n]时，说明","this.arr","this.arr.foreach(item","this.arr.pop()","this.arr.push(x)","this.arr;","this.arr[0]","this.arr[this.arr.length","this.buildlist(0)","this.buildlist(this.arr,","this.cap","this.data","this.data.length","this.data.pop()","this.data.push(temp)","this.data.push(val)","this.data[this.data.length","this.help","this.help.pop()","this.help.push(temp)","this.init();","this.initlist()","this.left","this.min_stack","this.min_stack.pop()","this.min_stack.push(math.min(this.min_stack[this.min_stack.length","this.min_stack[this.min_stack.length","this.next","this.num","this.queu","this.queue.length","this.queue.push(animal)","this.queue.shift()","this.result","this.right","this.siz","this.stack","this.stack.pop()","this.stack.push(x)","this.stack[stacknum]","this.stack[this.stack.length","this.val","this.visit","threesum","throw","time","tmp","tmp;","tong","total","track","track)","track.length","track.pop()","track.push([i,","tree","tree2str","treenod","treenode(nums[0]);","treenode(nums[index])","treenode(nums[mid]);","treenode(preorder[0])","treenode(preorder[pre++])","treenode(rootval)","treenode(val)","treenode(x)","tri","trick","tripleinon","tripleinone.prototype.push","true","true)","true;","true。","true，就表示找到了环的开始节点","true：","true：if","twosum","twosum(nums,target){","typeof","unescape(s);","unescape(t);","uniqu","updat","update(o.val)","url","val","val)","val;","validpalindrom","validpalindromic(chararray,","valu","value)","var","vector","vectorg(length,0);","version","visit","visited.add(head)","visited[i]=tru","void","w,","waystostep","wei","wen","whether","while(i","while(l","while(l1","window","word)","word.split('')","word1,","word1.length","word1.length();","word2)","word2.length","word2.length();","write","x","x)","x))","x);","x,","x1,","x2,","x;","xian","xiang","xin","y","y)","yi","yong","yuan","yun","z0","zhi","zhui","zigzaglevelord","zu","{","{*}","{boolean}","{character[][]}","{function}","{integer}","{listnode}","{number[][]}","{number[]}","{number}","{string[][]}","{string[]}","{string}","{treenode}","{void}","{}","{},","|","|=","||","}","})","});","};","“参考代码","“基准”（pivot）；","“用户手上不持股”不代表用户一定在索引为","。","。查询哈希表比较节省性能","「优化空间」会使得代码难于理解，且是的「状态」丢失原来的语义，初学的时候可以不一步到位。先把代码写正确是更重要；","「优化空间」在有一种情况下是很有必要的，那就是状态空间非常庞大的时候（处理海量数据），此时空间不够用，就必须「优化空间」；","「动态规划」方法依然是「空间换时间」思想的体现，常见的解决问题的过程很像在「填表」。","一个","一定包含","一开始写错了，关键这步，兼容负数","一提交，又超时了，好像暴力算法在中级里面总是不通过。","一次编辑","一致，那就去找","一般情况，枚举每一种可能性并递归","一般来说，插入排序都采用in","三合一","三数之和","三步问题","上的","上符号","上面两种情况即为状态转移方程","上面的求解过程中有个问题：当已经找到了长度为","上项或左项中的最小值","下一个数","下面状态的设置和状态转移方程均写在代码注释中：","不一定要一个个旋转，可以以一个","不使用数据结构，j","不合理，返回","不同路径","不想写这种题，其实不难，但费时间理解题意。","不需要遍历到","与","与的话就是提取偶数位","与的话就是提取奇数位","两个排序后判断","两个数组的交集","两个游标，一个first,一个second。都指向头结点","两数之和","两数相加","两数相除","两整数之和","两条链表不一定一样长，所以都走","个","个位置","个值：0","个变量。","个台阶上。所以如果用","个台阶上，或者","个台阶之前，一定是停留在第","个台阶的走法。那么，","个台阶，所以上到第","个字符重复的次数","个字节","个数为结尾的最大和。","个最大元素","个步骤：","个状态即可，我个人认为更加清晰。","个皇后实际上只用一维数组就表示：list[row]","个节点","个高频元素","中删除元素","中剩下的一个直接放到","中序遍历","中序遍历二叉树","中序：是二叉树遍历中的一种，即先遍历左子树，后访问根结点，然后遍历右子树。若二叉树为空则结束返回。","中所有相加等于","中找到小的那个，往下递归相加","中的","中级的头有点疼了，题解","中级算法","为","为奇数，右移损失精度，补加左移参数","为数组长度","为：⾏索引为","举个例子：","之前。因此，当后续出现比","之间","之间的位置的数字变为","之间的整数时，时间复杂度是o(n+k)，空间复杂度也是o(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。","买卖股票的最佳时机","买股票最佳时期","买股票最佳时机","了)，最后&结果肯定不为","了。","了，直接写个方法遍历操作数组就行了。","二分法","二分法递归","二叉搜索树中的众树","二叉搜索树中第","二叉搜索树中第k小的元素","二叉搜索树序列","二叉搜索树最小绝对差","二叉树的坡度","二叉树的层序遍历","二叉树的序列化与反序列化","二叉树的所有路径","二叉树的最大深度","二叉树的最小深度","二叉树的直径","二叉树的锯齿形层次遍历","二进制数转字符串","仅仅依赖于","介绍","从不是空的桶里把排好序的数据拼接起来。","从前序与中序遍历序列构造二叉树","从剩下长度的","从叶结点开始的最小字符串","从左往右","从数列中挑出一个元素，称为","从状态转移方程可以看出，每一天的状态都考虑了之前的状态。在只发生一次交易的情况下，持有这支股票一定不能使我们获得最大利润。因此输出是","从第一个元素开始，该元素可以认为已经被排序；","代码","代码实现","代表","代表单词分界位置","以上的写法，如果是","以上的就不是","任务调度器","优化","会超过时间限制","但是为了对称，我还是加上了等号","位","位1的个数","位上是","位变成","位操作","位是","位的","位运算","位里只有只出现一个","作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。","作者：fe","作者：leetcod","作者：sc8816","作者：vigil","你能只调用一次检查子串的方法吗？","你能否用","使用递归，反向遍历链表！","例如：str","便利数组1，如果数组2里面有，则push进结果数组，关键就是判断之后要nums2.splice,把遍历过了，且同时存在于两个数组中的元素给去掉","保存","保存偶链表的头和尾指针。算法会遍历原链表一次并把奇节点放到奇链表里去、偶节点放到偶链表里去。","保存奇链表的头和尾指针。","保存当前的字符","保存当前要构造的树的","保存，看是否都是偶数对，除了中间一个元素","倒着遍历，push进数组，然后把之前的删掉","借用局部对象，不符合题目要求","假设","做选择","元素中随便取一个，与倒数第二个元素交换，第一次没有被选中的概率为","元素交换","先中序遍历，然后看数组有没有后续","先从n个数据中，随机选取一个元素，与最后一个元素交换","先判断长度是否相同，不相同返回","先取符号","先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：","先序：是二叉树遍历中的一种，即先访问根结点，然后遍历左子树，后遍历右子树。遍历左、右子树时，先访问根结点，后遍历左子树，后遍历右子树，如果二叉树为空则返回。","先把first往后移动n个节点。","先把数","先排序，快排是","先计算长度，再在后续长度一样地方开始遍历","全排列","全排列，回溯","八皇后","八皇后问题","关键是","关键是边界要记得","关键是题目根本读不懂它到底要干嘛","其他","其他情况下(有多个","其他方法","其他相关算法和数据结构","其余的字符串的情况","其实target不可能等于nums[mid]，","其实就是“参考代码","其实是被递归绕进去了，最后会先执行栈顶的函数。所以当开始节点head3.next被置为null，","其实解法跟之前一样，上面用了二维矩阵来记录位置，因为已经确定同一行不可能存在","再优化：连续赋值","再写","再有状态","再用","冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。","几个标注//注意！","出现，accii","函数，接收2对指针","分别没有上项与左项","分割链表","分数到小数","分智算法，我还没看懂，有时间研究","分治","列","则会导致结果重复，应该跳过，l++","则会导致结果重复，应该跳过，r","创建访问状态数组","初始值，即","初始化二维","初始化是非常重要的，一步错，步步错。初始化状态一定要设置对，才可能得到正确的结果。","初始状态：无序区为r[1..n]，有序区为空；","初级算法","删除排序数组中的重复项","删除的是头节点","删除链表中的节点","删除链表的倒数第","删除链表的倒数第n个节点","判定是否互为字符重排","判断和之前不同","判断字符是否唯一","判断数组是否是回文，也可以这样判断","判断是否回文","判断范围","利用set","利用set，然后set元素的和乘以2减去当前数组元素的和就得出那个唯一的数字","利用原数组，本地测可以。","到","到head2节点，head2.next.next(也就是head3.next)再次被置为head2。最后只有头部节点的next指向nul","到i=6的时候,temp","刷，后面按公司其他","刷，题目有重复的地方","前","前缀和","前缀和，这个知识点,df","前面元素里最小的","前面的位置","加一","加入解集","动图演示","动态规划","动态规划的","动态规划，最简单的写法","动物收容所","化","化栈为队","匹配不是单词开头或者结束的位置","匹配数字","匹配连续0次以上的数字","十大排序","十种常见排序算法可以分为两大类：","单词搜索","即为题目所求结果","即可","即可。","即可，具体分析就不在写了，我们来看下代码","原文链接：https://www.cnblogs.com/onepixel/p/7674659.html","原来快慢指针再加一个","去掉空格，正则匹配出数字和符号位。然后转成数字。并判断下是否超出范围。","去查找了","去重","参考代码","参考原文：https://leetcod","参考题解","反向","反向填充目标数组：将每个元素i放在新数组的第c(i)项，每放一个元素就将c(i)减去1。","反转字符串","反转数组","反转链表","发现把每个原数组的第一个元素出来，形成一个新的数组，作为结果数组的第一项，每个原数组的第二个元素取出来，变成结果数组的第二项...那就比较简单","取出下一个元素，在已经排序的元素序列中从后向前扫描；","取得数组中的最大数，并取得位数；","变成了","变量","变量来保存上一个相同字符的开始位置","另外一个巧妙的方法","另外和之前的计算两树之和技巧类似，保存之前的值为true(hashtable的思路),如果后面再一次出现，就是重复了，返回fals","另外，即使我们更新了","只关心","只出现一次的数字","只有","只有是10的情况下才要处理，个位置0，然后依次+1，但最高位的时候(i==len)，表示进位到最高位了，push进数组一个1。这个时候一定要break,不然走到while，就又多加了一个1。","只能交易一次的","只要左括号有剩，就可以选它，然后继续做选择（递归）","只要找到一条路径就返回","可交易多次的","可以第一天买入，第3天卖出。得出利润一致","可能有点偏题，毕竟这里主要就是做题的地方。。","右指针，初始值为","右移，直到","右顺序遍历","司徒大大的解，很优雅，关键就是index","合并两个有序数组","合并两个有序链表","合并区间","合法二叉搜索树","后序：是二叉树遍历中的一种，即先遍历左子树，后遍历右子树，然后访问根结点，遍历左、右子树时，仍先遍历左子树，后遍历右子树，最后遍历根结点。","后继者","后续再看看题解里的大神怎么解的","后续还有优化，具体看上面链接","后面方案3和4，转置再翻转，或者翻转再转置一致，就是元素交换位置。[i][j]和[j][i]交换,然后发现再reverse一下就好了。","后面，没有严格遵守递增顺序，但它隐含着的真相是，有一个比","向下","向右","否则丢弃一边","呢，这样","和","和lis一样，只要计算了lis长度为3就可以了","哈希集合，记录每个字符是否出现过","唯一比较绕的一点是，可能会觉得同一天进行卖出和买入操作不符合(首先题目没有规定这样不可以)。","啦","回头再看看题解里的大佬思路","回文字符串","回文排列","回文数","回文链表","回溯","回溯其实就是纯暴力枚举，把所有情况列举下，如果列举到一半发现已经不符合要求了及时剪枝，并且把之前做出的选择撤销，比如本题如果列举的一条路径不符合要求，把之前访问过的位置全部改回原来的值。","回溯法","回溯法,不要想复杂了，不需要置为*等手段，并不会走回头路","回溯法模板","回溯法，状态树很大","回溯理解下","回溯算法","回溯算法,看的题解","因为声明的多个函数都需要数据长度，所以把len设置成为全局变量","因为我们需要在两个字符串中扫描，所以是一个二维的动态规划问题","因为有序，应该能优化","因为都从","因此，","困难","图片演示","在","在具体实现时，可以只针对大于“当前得到的最长回文子串长度”的子串进行“回文验证”；","在原数组中并不是按照索引递增的关系呀？","在把","在排序数组中查找元素的第一个和最后一个位置","在线地址：https://johnzhu12.github.io/leetcode_source_javascript/","在记录最长回文子串的时候，可以只记录“当前子串的起始位置”和“子串长度”，不必做截取。这一步我们放在后面的方法中实现。","地址","地址只能为","地址就已经遍历完了字符串，那么提前回溯","地址并且遍历完了字符串，那么就是一种答案","基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要o(n)的时间复杂度，而且分配之后得到新的关键字序列又需要o(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是o(d*2n)","基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。","基数排序的空间复杂度为o(n+k)，其中k为桶的数量。一般来说n>>k，因此额外空间需要大概n个左右。","基本的回溯，然后","堆排序。好好研究下","堆排序（heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。","堆盘子","堆调整","填充每个节点的下一个右侧节点指针","复原","复杂度分析：","外观数列","多数元素","大数相加","大比","大的值的时候，我们一样可以通过当前","天不持股，显然","天持股，显然dp[0][1]","奇偶链表","好了，一提交","好吧，效率奇差，但是好歹写了一个答案。哈哈哈哈。主要是第二遍不需要遍历所有的行和列，只需要找到","如下图，我一开始在纠结head.next","如下第一个方案，但是用了局部变量，没有原地，不符合题目。方案二类似，我是打算在原数组后面再加两个空数组，其实也不符合题意的原地旋转","如果","如果first为null,就是到尾部了，所以删除的是头结点。(题目里保证n是有效的，也就是说不会超过链表长度)","如果不存在重复元素，可以使用二分法","如果两个链表全部遍历完毕后，进位值为","如果参数","如果已经平衡，后续就直接退出","如果当前数字大于0，则三数之和一定大于0，所以结束循环","如果我告诉他ascii字符集，然后他的代码里有边界检查，并且针对不同的范围有不同的侧重点，比如说ascii字符集，那也就是128个可能性，16个字节的位运算比较好","如果我告诉他是unicode，没有字符范围，老老实实排序再判断是比较符合我对工程师的要求的，因为算法性能稳定，没有额外资源要求，一眼看出没什么不可预见的风险，100分。","如果我是面试官，会考虑主要考察什么，就我的工作经验看，大多数主要是招聘工程师的，面试者如果什么问题都没有，直接写个二重循环搞定，会首先给个50分，如果能写点判断字符串是否为null的，60分。","如果我是面试官，我会希望看到什么？","如果找到了","如果是针对面试，请自行把握难度。掌握常见问题的动态规划解法，理解动态规划解决问题，是从一个小规模问题出发，逐步得到大问题的解，并记录中间过程；","如果有其他单独位出现的，就会不止一个","如果正向存放，那就要翻转下","如果该元素（已排序）大于新元素，将该元素移到下一位置；","如果还没有找到","妈蛋，我说这么简单的题目我怎么会错，题目说了要取模，眼瞎了","子集","字母异位词分组","字符串","字符串一个拼接到后边，一个拼接到前面。","字符串中的第一个唯一字符","字符串压缩","字符串截取","字符串排列","字符串构建完成","字符串的字符范围，如果我告诉他，26个小写英文字母，那可能一开头直接判断如果字符长度>26,","字符串的排列","字符串相乘","字符串转换整数","字符串转数组","字符串轮转","字符串长度在[0,","字符是否唯一","字符集，是","字节跳动","存在重复","完整代码","完整题解过程：","官方答案里的，很优雅，两个游标，i和j,每当出现nums[j]","官方解","官方题解","官方题解里有个大佬整理的特别好,所以直接摘录：https://leetcod","实现","实现strstr","对radix进行计数排序（利用计数排序适用于小范围数的特点）；","对于已访问的位置，修改其值为'/'，访问完毕后要将值改回来，这是回溯的核心","对于当前要构造的树，有一个停止点","对应位","对应的字符是最长公共子序列的一部分，所以有","对所有的计数累加（从c中的第一个元素开始，每一项和前一项相加）；","对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；","对每个不是空的桶进行排序；","对称二叉树","对象不算吧(⊙︿⊙)","对这两个子序列分别采用归并排序；","寻找峰值","射击气球","将","将两个排序好的子序列合并成一个最终的排序序列。","将两个链表看成是相同长度的进行遍历，如果一个链表较短则在前面补","将初始待排序关键字序列(r1,r2….rn)构建成大顶堆，此堆为初始的无序区；","将堆顶元素r[1]与最后一个元素r[n]交换，此时得到新的无序区(r1,r2,……rn","将新元素插入到该位置后；","将有序数组转换为二叉搜索树","小技巧：对于链表问题，返回结果为头结点时，通常需要先初始化一个预先指针","小的元素","小的前·最小值出现在","就在做无用功了","就在这里了！假如当前的","就够减","就是","就是不停地除以3，最后检查是否等于1呗","就是说，有些东西，没想到或者一时没想到根本不是问题，日常工作中稍微提示一下即可，但是缜密的思维对于程序员来说更重要","就留下单独出现字符对应位数保存字节。","就表示，在索引为","就返回","就返回空字符串","层的台阶的走法，由于一次走","层续遍历,然后转成链表","岛屿数量","岛屿的最大面积","左右子树的高度返回值","左右括号所剩的数量，str是当前构建的字符串","左叶子之和","左子树的节点数","左移","左移字符对应的","左移结果进行与运算，如果不是0，说明其中有一位都是1，说明重复","已经等于字符串长度时，说明已经找到了一条路径，返回","希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者robert","帕斯卡三角形","常见的推导技巧是：分类讨论。即：对状态空间进行分类；","幂集","建立大顶堆","开始)，其他都是","开始写的，没通过，可能不支持filter吧","开始写错了，忘了1也是3的幂。","开始按简单，中级","开始的思路很简单，照着规则验证","开始的话，i=0,j=1,然后","异或简单","异或，然后算下","异或，然后计算1的个数","异或，答案里看到的，很神奇。0^1","归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是o(nlogn）的时间复杂度。代价是需要额外的内存空间。","归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（divid","归纳「状态转移方程」是一个很灵活的事情，通常是具体问题具体分析；","当","当前字符","当前项值","当前项最小路径和","当只有一个时直接加到c中","当我们对比","当然还有另一种比较低效率的方式，两遍遍历，知道整个链表长度也可以","当索引","很有意思的是，可以将此时的数组","很简单，unicode编码解码一下。转成数组排序再转成字符串，判断下是否相等就可以了","得到最大值","循环判断","快乐数","快慢指针可以检测环，但是无法给出环的开头节点，我开始想到的就是在链表里加个属性，visited。当第一次出现","快速排序使用分治法来把一个串（list）分为两个子串（sub","快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。","忽略大小写，就先转成小写。然后正则去掉非字母和数字的字符，然后转成数组reverse，再转成字符串比较","怎样转移？","思考优化空间（也可以叫做表格复用）","思考初始化","思考状态","思考状态转移方程","思考状态转移方程（核心、难点）","思考状态（重点）","思考输出","思路","思路，快排的同时进行优化","性能消耗比较大，没必要把","总复杂度","恒成立，和“参考代码","感觉比较简单这题，一开始想用","我们发现：其实只需要关心之前（不包括现在）看到的最低股价，于是在遍历的过程中，记录下之前看到的最低股价，就可以省去内层循环。","我们继续观察“参考代码","我开始写的","我开始还以为和数组那个买股票最佳时期题目一样。注意区别，只允许交易一次￣□￣｜｜","我想起了在angularjs的parser源码里有个peek方法,就是多看下下一个元素合起来是不是特殊的就可以了。","我感觉就是回溯，试","或","或者","或者列索引为","或运算","戳气球","所以对于二维数组，转置一下有奇效！","所以我期望面试者不要急于解答，我希望他先问我问题：","所以概率仍然是","所以每一个元素出现在每一个位置的概率，都是","所以，这样的替换并不会干扰我们后续的计算！","所获得的最大利润。","所表示的两个字符串的长度不同，s1[0...m]","打乱数组","打家劫舍","找出不重复的数字有多少个，并把数组前","找出待排序的数组中最大和最小的元素；","找出重复的数字","找到了","找到前半部分链表的尾节点并反转后半部分链表","把","把矩阵看为一层一层的，由外层到内层，这是外循环。每一层看成四个小的块交换位置，这是内循环。","把长度为n的输入序列分成两个长度为n/2的子序列；","拆分成两个子树","括号","括号生成","指针不仅仅是尾指针，也可以扮演原链表迭代器的角色。","指针和","按位或","按位移动计算，>表示右移，等同于除以","按增量序列个数k，对序列进行k","排序","排序后再看","排序和搜索","排序算法整理","接着，我们遍历数组，每遇到一个数字，我们将它和","推断的确存在着长度为","提前把","提示：","插入","插入排序在实现上，通常采用in","插入排序（insert","搜索二维矩阵","搜索旋转排序数组","撤销","撤销选择","改下：","改写下","改成","放到","故单独处理计算起项最小路径和","数学","数据结构","数据结构底层原理模拟","数组","数组与字符串","数组中可以成为","数组中寻找根节点的位置，耗费性能","数组中的第","数组中第","数组分成和等值的两个数组","数组删除重复项","数组可否分成和相等的三个数组","数组和字符串","数组和排序","数组的笛卡尔积","数组的项和索引存储在","数组真的切割出来","数组第一个元素是4，第7个元素是5，然后和是9。","数组长度为n，","数组题","整个翻转，再转置var","整体时间复杂度是","整数反转","整数转换","文件夹下","方法5，答案里的方案。稍微难理解一些","方法一","方法三","方法二","方法二，顺序打乱","方程","旋转图像","旋转数组","旋转矩阵","旋转而成，则拼接后的","无重复字符串的排列组合","无重复字符的最长子串","既然有递归，那就可以写出迭代","时间复杂度和","时间复杂度：o(logn)","时间复杂度：o(n)","时间复杂度：o(n)；","时间复杂度：o(n^2)","时间复杂度：o(n^2)，n","时，nums[l]==","时，nums[r]","时，整个序列作为一个表来处理，表长度即为整个序列的长度。","是","是不是质数写个方法暴力遍历判断了。（素性测试如果是很大的数，暴力遍历不靠谱）","是可以的。看题解吧，这个证明很妙","是否为回文串","是多少，然后迭代当前","暴力匹配","暴力枚举","暴力枚举的优化","暴力检查","暴力破解","暴力解决","暴力递归","暴力遍历","替换为","最后","最后一对比就可以了","最后一行开始遍历,从下往上","最后偶数位右移一位，奇数位左移一位，相加得结果","最大子序和","最小栈","最小覆盖子串","最小路径和","最小高度树","最短编辑距离","最粗暴的方式就是保存到字符串或数组里，看是不是回文字符串","最长上升子字符串","最长上升子序列","最长公共前缀","最长公共子序列","最长回文子串","最长连续序列","最长连续递增序列","最骚的是(result","有一个字符串为空串","有些时候是最后一个状态，有些时候可能会综合之前所有计算过的状态。","有序数组,一直找中间的就行了，递归","有效数独","有效的字母异位词","有效的括号","有效的数独","有重复字符串的排列组合","本题具体分析详见原文链接","本题的思路非常的巧妙！","来保存访问过的节点。原理一样，但空间也是","来比较","来源：力扣（leetcode）","来，因为事实上，状态","果然运行超时了","查找当前字符的周围字符，如果周围字符没有被访问过且与字符串的下一个字符相等，再次进入递归","标签：数组遍历","标签：链表","标记是否平衡","栈与队列","栈排序","栈的最小值","树","树与图","树和图","核心思路：","根","根据两个链表的长度，得出长度差n,让长的链表的指针先走n步","根据二叉树创建字符串","根据回文子串的定义，枚举所有长度大于等于","根节点","根节点在inorder的位置","根节点的值","桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序","桶排序最好情况下使用线性时间o(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为o(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。","桶的初始化","检查子树","检查平衡性","检查每一行，每一列，每个小九宫格是否重复。","次数","正则要好好学啊","正则，match的字符，如果len是1就可以","正向","正数返回","步骤如下：","步，然后第二个从头部一起走，当第一个走到结尾时，第二个就在倒数第","段","每一位计算的同时需要考虑上一位的进位问题，而当前位计算结束后同样需要更新进位值","每个元素被选中的概率是","每次递归调用，都会确定出一个停止点，它告诉了子调用在哪里停止，把自己的根节点值作为左子树调用的停止点，自己的（父调用给下来的）停止点作为右子树的停止点","每次递归都要在","每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m","比如","比如当第","比如最后单独出现一个","比较相邻的元素。如果第一个比第二个大，就交换它们两个；","比较简单了","比较简单，就是把0取出来，然后放到数组后面","比较简单，直接上代码","比较简单，终于自己写对了","比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破o(nlogn)，因此也称为非线性时间比较类排序。","求和路径","汉明距离","汉诺塔问题","没思路，直接上答案","没思路，直接贴题解","注意是节点，而不是值","注意链表的性质","注意：这里和动图演示的不一样，动图是分组执行，实际操作是多个分组交替执行","注释里有我的全部思路，这题提交错了好几次，做的很糟","洗牌算法能保证，对于生成的排列，每一个元素都能等概率的出现在每一个位置。","深度优先搜索","深度优先遍历","添加两侧的虚拟气球","滑动窗口","然后k次循环，从数组最后面pop出元素，塞到数组前面就可以了","然后两个指针一起移动，判断两者是否相等（指向同一个内存地址）","然后再从同类中查找，这里我们用hash值来分类。","然后后面temp找到的时候，就是之前a[temp]就是之前存储的位置","然后异或就是偶数的话和上面一样消为","然后思考「状态如何转移」，如果「状态转移方程」不容易得到，尝试修改定义，目的依然是为了方便得到「状态转移方程」。","然后重写一个，加个变量计数通过了","熟悉pop和unshift用法","爬楼梯","特判","特定深度节点链表","特定节点深度链表","特指：“卖出股票以后不持有股票的状态”，请注意这个状态和“没有进行过任何一次交易的不持有股票的状态”的区别。","状态","状态的定义，先尝试「题目问什么，就把什么设置为状态」；","状态转移方程","状态转移方程」是原始问题的不同规模的子问题的联系。即大问题的最优解如何由小问题的最优解得到。","状态转移方程是非常重要的，是动态规划的核心，也是难点；","环形链表","环路检测","理解这一句就懂了，比如我要找","生成随机数组","用","用api直接可以","用substr","用两个指针表示即可。写一个","用递归的思路想一下，要求","用邻接链表的底层原理来简单模拟实现，不是用遍历去查找","由于","由于不能有前导零，如果当前数字为","由于交换后新的堆顶r[1]可能违反堆的性质，因此需要对当前无序区(r1,r2,……rn","电话号码的字母组合","的","的map数据结构","的个数","的代码还是需要进行一番思索的。","的值不同时，dp[m][n]","的值都为","的可能","的地方","的子串，依次判断它们是否是回文；","的子序列，分别对各子表进行直接插入排序。仅增量因子为1","的幂","的平方根","的情况下(result","的数字们的开头那个","的时候，只需要用","的时候，存在两种情况：","的时候，我们就没有办法发现这个","的时候，此时值为","的最长公共子序列的长度","的最长公共子序列的长度的值也就不同，dp[m","的第一行与第一列","的行和列，然后再遍历一遍，把相应的行和列置为","的设置，为了防止死循环？","的这一天把股票抛售了；","的这一天，我卖出了股票，状态由","的这一天，执行买入操作得到的收益。注意：因为题目只允许一次交易，因此不能加上","的这一天，用户手上持股状态为","的递增子序列的最小值和中间值。","的递增序列。","的递增序列，这时又来了一个比","的递增数组了！也就是说，我们替换最小值，是为了后续能够更好地更新中间值！","的递增数组！","的重复个数，例如","直接上手什么bitset，什么位运算的，我会先问他，题目中有没有交代字符串的字符一定是26个英文字母？如果是unicode环境，你是不是要准备2^16/8个字节的空间？在实际项目中，风险可控，结果可期更重要，绝大多数时候不在乎那点时间和资源。","直接返回false，做到这一点的，80分","相交链表","相比，若小于等于","相邻元素两两对比","看了下答案","看了下题解，其实原理差不多，不过用了个map。map底层原理不是完整遍历，使用了链表，不是o(n^2)","看了官方题解，两重循环","看到题解里的，一直在增加删除对应的","看注释，就是","看题解，我震惊了","矩阵中的路径","矩阵置零","码位数，相当于","码总共","硬币","移到","移动零","移除重复节点","程序员面试金典","空间复杂度解决此题？","空间复杂度还是","空间复杂度：o(1)","空间复杂度：o(1)，状态压缩以后相当于只用了","空间复杂度：o(n)。","符号函数，","符合字符串长度则收集","第","第i趟排序(i=1,2,3…n","第一个错误的版本","第一反应就是回溯","第一种是暴力遍历。","第二次被选中的概率为","第二种比较巧的方式，就是使用hashtable。js里没有hashtable，所以可以用数组来达到同样作用。","等价于","简化路径","简单明了","算法","算法分析","算法分类","算法复杂度","算法描述","精妙...","繁琐","结束当前递归分支","绘制直线","给一次试错的机会，如果一次匹配失败我们还要继续匹配，如果再次失败就返回","绝对值","统计下，然后遍历一遍，看是否都相等","统计数组中每个值为i的元素出现的次数，存入数组c的第i项；","统计，然后发现是要按顺序的，不能间隔开的也在一起。具体看题目里的注释","继续找","维，因此填表的时候，先写","综上：dp[i][0]","综上：dp[i][1]","缺失数字","罗马数字转整数","翻转二叉树","翻转位数","翻转后半部分，注意奇数偶数节点翻转后半部分不影响(翻转前半部分就要注意)","翻转字符串里的单词","翻转数位","考虑初始值","考虑是否可以状态压缩","考虑输出","背包」问题和「完全背包」问题。","腾讯","自己写的","自己写的,调试过几次，注意细节","自己开始写的","自己开始写的，感觉很不优雅","自己的刷题记录，理一下思路。语言是","节点间通路","若前一个元素大于0，则将其加到当前元素上","若当前指针所指元素之前的和小于0，则丢弃当前元素之前的数列","著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","表列名称","表列序号","表现最稳定的排序算法之一，因为无论什么数据进去都是o(n2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。","表示不持股（特指卖出股票以后的不持股状态），1","表示持股。","表示：s1[0...m]","表示：在索引为","要等于","角度","计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。","计数排序是一个稳定的排序算法。当输入的元素是","计数质数","计算第一列","计算第一行","认为是对称的","让每个桶里的初始next等于nul","设定状态","设置一个定量的数组当作空桶；","设置桶的默认数量为5","设计问题","访问状态数组","语义化，dp[1]","说明:","说明该节点不是叶子节点","说明：","说明：事实上，这一版代码，由于","说明：如果我们一定要区分“不持有股票”的状态是“一开始不持有”和“卖出股票以后的不持有”，设置","说明：暴力解法时间复杂度高，但是思路清晰、编写简单。由于编写正确性的可能性很大，可以使用暴力匹配算法检验我们编写的其它算法是否正确。优化的解法在很多时候，是基于“暴力解法”，以空间换时间得到的，因此思考清楚暴力解法，分析其缺点，很多时候能为我们打开思路。","贪心算法","贴个评论","超出时间限制。￣□￣｜｜","趟排序；","跟回溯一致，df","路劲总和","路归并。","路径总和","跳跃游戏","转字符串","转置，然后再翻转一下","转自博客园","辅助栈","输入","输入数据的最大值","边界处理","过一遍，如果出现","返回","返回倒数第","返回自身高度，供父节点使用","还不会,学习下","还原链表并返回结果","还小的数字，为什么可以直接替换","还是比较好理解的，如图","还有一种是排序后，两两对比","还有其他比较巧的方法，详见题解","还有这个","还没学会","这不就是斐波拉契数列吗","这个原理差不多，只不过使用了es6的filter,includes等方法","这个应该最好理解，如果匹配失败，我们只需要比较后面的字符串相等即可，来看下代码","这个解法非常符合直觉思路也很简单。但是要写一个精确且没有","这么写也可以","这就是大数相加链表版","这是限定字符都是","这样体现不出查找快速的特点。就是给我们的数据分好类","这种改变了链表，不太合适，也可以使用一个","这道题其实是一个典型的二维","这道题有个姊妹篇，lis。关键的状态转移方程是：","这道题比较简单，好好理解下","这题主要就是各种边界情况要考虑，没啥难的","这题可以参照编辑距离写的题解，第","这题开始题目没看懂,图的知识要加强，具体看题解","这题我好像也做过，这几题都是在原先简单那个","这题我貌似之前做过，反正旋转矩阵先转置下，转置就是","这题比较简单，3种方案","这题比较简单，使用贪心算法解决。只要后面一天比前面一天价格高，就进行买卖操作。","这题比较简单，首先双指针，第一个先走","这题相对比较简单，有很多方法实现","进阶：","连起来就是","迭代写法：","迭代方案","迭代版","迷路的机器人","逆波兰表达式求值","选出关键字最小的记录","选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1；","选择排序(select","递增的三元子序列","递归","递归与动态规划","递归乘法","递归写法","递归加法","递归回溯","递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。","递归方案","递归，很好理解","递归：一直将参数","通过","遍历字符，然后分割两个子串，然后反向拼接下","遍历开始,i=0,temp","遍历数组从0开始，所以把数组翻转下，这样先加的就是个位数。首先判断个位++rev[i](i这时候i是0)，","遍历整个链表我们至少需要一个指针作为迭代器。这里","遍历输入数据，并且把数据一个一个放到对应的桶里去；","遍历，遇到相同元素就用splice去除，一定要记得j","避免使用","那两个就是把","那先写个方法验证字母异位词。然后无非写方法遍历分组。主要就是加个变量判断是否已经分组了，没有就新建一个组","那斐波拉契数列可以使用dp写法","那理解最后一句就是，当","那这里是要连续的，那就改下就好了,不需要定义","那里就是没有全遍历","都要注意空的数组要去除","配对交换","采用es6","里.","里的行和列，对应的置","重复步骤1~3，直到排序完成。","重复步骤2~5。","重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；","重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；","针对所有的元素重复以上的步骤，除了最后一个；","链接：https://leetcod","链表","链表1值","链表2值","链表求和","链表相交","链表确实有点绕，不太熟悉，提交错了好几次","镜像循环长度length/2,交换位置","问题。“动态规划”用于多阶段最优化问题的求解。这里天数代表每个阶段，即一天一天看，设置为第一维。为了消除后效性（前面的状态确定下来以后不会因为后面状态而更改），将当天是否持股设置为第二维的状态。于是：","阶乘后的零","阿里","阿里面试一面题目","附加","除了掌握经典的动态规划问题以外，还需要多做题；","零矩阵","零钱兑换","需要一个头指针和一个尾指针来支持双端操作。我们用变量","需要左移的位数","非常经典的「优化空间」的典型问题是「0","非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。","面试题","项到第","项改成不重复的数字","项是要构造的树的节点值们","题的答案，直接判断最后的编辑距离是否小于等于","题目不难，主要是细节","题要求的是编辑距离，我们这里也要使用第","题解","题解里有个双指针的,本质上和上面一样，就是用了","题解里有个答案其实本质一样，但是写的好多了,用了","题解里的，很巧妙","题解里的，很秀，用正则解决。","题解里看到的:","题集","颜色分类","颜色填充","颜色填充]","额外空间的方法就是改变输入。","颠倒二进制位","首个共同祖先","首先对数组进行排序，排序后固定一个数","首先想到用个缓存","首先我们定义","首先找到有","首先排序的复杂度","首先暴力破解试试","首先看到题目一开始我是懵逼的，只能像做逻辑题，试试找一下规律。","首先空数组判断","首先遍历一开始，var","首先，新建两个变量","首先，要在矩阵中找字符串中的第一个字符，找到后进入递归","验证二叉搜索树","验证回文字符串","验证子串","高效实现","魔术索引","默认方式","️⚠️注意这里的等号","，inord","，关键注意最后还要加上一次。","，分别用来保存题目要我们求的长度为","，因此，我们可以使用滚动数组的技巧压缩变量。下面根据“参考代码","，当然d要远远小于n，因此基本上还是线性级别的。","，负数返回","，这个","：当然可以从昨天不持股转移过来，表示从昨天到今天什么都不操作，这一点是显然的；","：昨天持股，今天什么都不操作，当然可以从昨天持股转移过来，这一点是显然的；","￣□￣｜｜"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"介绍\n自己的刷题记录，理一下思路。语言是 js。源码在每个对应目录的 code 文件夹下\ngit clone https://github.com/johnzhu12/leetCode_Source_Javascript.git\n\ncd leetCode_Source_Javascript\n\nnpm install -g gitbook\n\ngitbook serve\n\n在线地址：https://johnzhu12.github.io/leetCode_Source_Javascript/\n开始按简单，中级 tag 刷，后面按公司其他 tag 刷，题目有重复的地方\n\n初级算法\n\n数组\n\n存在重复\n加一\n两个数组的交集\n两数之和\n买股票最佳时机\n旋转数组\n旋转图像\n移动零\n有效的数独\n只出现一次的数字\n删除排序数组中的重复项\n\n\n字符串\n\n反转字符串\n整数反转\n字符串中的第一个唯一字符\n有效的字母异位词\n验证回文字符串\n字符串转换整数\n实现 strStr\n外观数列\n最长公共前缀\n有效的括号\n回文数\n\n\n链表\n\n删除链表中的节点\n删除链表的倒数第 N 个节点\n反转链表\n合并两个有序链表\n回文链表\n环形链表\n\n\n树\n\n对称二叉树\n二叉树的层序遍历\n二叉树的坡度\n二叉树的直径\n二叉树的最大深度\n二叉树的最小深度\n二叉搜索树中的众树\n二叉搜索树最小绝对差\n翻转二叉树\n根据二叉树创建字符串\n将有序数组转换为二叉搜索树\n路径总和\n验证二叉搜索树\n左叶子之和\n\n\n排序和搜索\n\n合并两个有序数组\n第一个错误的版本\n\n\n动态规划\n\n爬楼梯\n买卖股票的最佳时机\n最大子序和\n打家劫舍\n\n\n设计问题\n\n打乱数组\n最小栈\n\n\n数学\n\nFizzBuzz\n计数质数\n3 的幂\n罗马数字转整数\n\n\n其他\n\n位 1 的个数\n汉明距离\n颠倒二进制位\n帕斯卡三角形\n有效的括号\n缺失数字\nExcel 表列名称\n\n\n\n\n中级算法\n\n数组和字符串\n\n三数之和\n矩阵置零\n字母异位词分组\n无重复字符的最长子串\n最长回文子串\n递增的三元子序列\n\n\n链表\n\n两数相加\n奇偶链表\n相交链表\n\n\n树和图\n\n中序遍历二叉树\n二叉树的锯齿形层次遍历\n从前序与中序遍历序列构造二叉树\n填充每个节点的下一个右侧节点指针\n二叉搜索树中第 K 小的元素\n岛屿数量\n\n\n回溯算法\n\n电话号码的字母组合\n括号生成\n全排列\n子集\n单词搜索\n矩阵中的路径\n\n\n排序和搜索\n\n颜色分类\n前 K 个高频元素\n数组中的第 K 个最大元素\n寻找峰值\n在排序数组中查找元素的第一个和最后一个位置\n合并区间\n搜索旋转排序数组\n搜索二维矩阵 II\n\n\n动态规划\n\n跳跃游戏\n不同路径\n零钱兑换\nLIS\n\n\n设计问题\n\n二叉树的序列化与反序列化\nInsert Delete GetRandom O(1)\n\n\n数学\n\n快乐数\n阶乘后的零\nExcel 表列序号\nPow(x,n).md>)\nx 的平方根\n两数相除\n分数到小数\n\n\n其他\n\n两整数之和\n逆波兰表达式求值\n多数元素\n任务调度器\n\n\n\n\n困难\n\n字符串\n最小覆盖子串\n\n\nDP\n戳气球\n最短编辑距离\n\n\n\n\n字节跳动\n\n字符串\n字符串的排列\n最长公共前缀\n无重复字符的最长子串\n字符串相乘\n翻转字符串里的单词\n简化路径\n复原 IP 地址\n\n\n数组和排序\n三数之和\n岛屿的最大面积\n\n\n\n\n腾讯\n\nproblems\n\n题集\n\n\n\n\n阿里\n\ninterview\n面试题\n\n\n\n\n程序员面试金典\n\n数组与字符串\n字符是否唯一\n判定是否互为字符重排\nURL 化\n回文排列\n一次编辑\n字符串压缩\n旋转矩阵\n零矩阵\n字符串轮转\n\n\n链表\n移除重复节点\n返回倒数第 k 个节点\n分割链表\n链表求和\n回文链表\n链表相交\n环路检测\n\n\n栈与队列\n三合一\n栈的最小值\n堆盘子\n化栈为队\n栈排序\n动物收容所\n\n\n树与图\n节点间通路\n最小高度树\n特定节点深度链表\n检查平衡性\n合法二叉搜索树\n后继者\n首个共同祖先\n二叉搜索树序列\n检查子树\n求和路径\n二叉树的所有路径\n路径总和\n路径总和 II\n路径总和 III\n从叶结点开始的最小字符串\n\n\n位操作\n插入\n二进制数转字符串\n翻转数位\n配对交换\n下一个数\n整数转换\n绘制直线\n\n\n递归与动态规划\n递归乘法\n汉诺塔问题\n迷路的机器人\n幂集\n魔术索引\n三步问题\n无重复字符串的排列组合\n有重复字符串的排列组合\n括号\n颜色填充\n硬币\n八皇后\n\n\n\n\n其他相关算法和数据结构\n\n算法\n\n十大排序\n\n\n数据结构\n\nES6Map 数据结构底层原理模拟\n\n\n\n\n\n"},"easy/Array/存在重复.html":{"url":"easy/Array/存在重复.html","title":"存在重复","keywords":"","body":"存在重复\n\n思路\n这题比较简单，3种方案\n暴力检查\nvar containsDuplicate = function(nums) {\n    if (nums.length\n排序后再看\nvar containsDuplicate = function(nums) {\n    if(nums.length \n利用set\nvar containsDuplicate = function(nums) {\n    let set = new Set(nums);\n    return set.size != nums.length;\n};\n\n"},"easy/Array/加一.html":{"url":"easy/Array/加一.html","title":"加一","keywords":"","body":"加一\n\n思路\n遍历数组从0开始，所以把数组翻转下，这样先加的就是个位数。首先判断个位++rev[i](i这时候i是0)，\n只有是10的情况下才要处理，个位置0，然后依次+1，但最高位的时候(i==len)，表示进位到最高位了，push进数组一个1。这个时候一定要break,不然走到while，就又多加了一个1。\n自己写的\nvar plusOne = function (digits) {\n    var rev = digits.reverse();\n    // console.log(rev)\n    var i = 0, len = digits.length;\n    while (++rev[i] == 10) {\n        rev[i] = 0\n        i++;\n        if (i == len) {  //超出一位\n            rev.push(1);\n            break;\n        }\n    }\n    var res = rev.reverse()\n    return res;\n};\n\nvar digits = [9, 9]\n\nvar a = plusOne(digits)\nconsole.log(a)\n\n"},"easy/Array/两个数组的交集.html":{"url":"easy/Array/两个数组的交集.html","title":"两个数组的交集","keywords":"","body":"两个数组的交集\n\n思路\n便利数组1，如果数组2里面有，则push进结果数组，关键就是判断之后要nums2.splice,把遍历过了，且同时存在于两个数组中的元素给去掉\n自己开始写的\nvar intersect = function(nums1, nums2) {\n    var arr = [];\n    for(var i=0,len=nums1.length;i=0){\n            arr.push(item);\n            nums2.splice(nums2.indexOf(item),1)\n        }\n    }\n    return arr;\n};\n\n这个原理差不多，只不过使用了es6的filter,includes等方法\n/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar intersect = function(nums1, nums2) {\n return nums1.filter((el) => {\n     return nums2.includes(el) && nums2.splice(nums2.indexOf(el), 1)\n     })\n};\n\n"},"easy/Array/两数之和.html":{"url":"easy/Array/两数之和.html","title":"两数之和","keywords":"","body":"两数之和\n\n思路\n第一种是暴力遍历。\n第二种比较巧的方式，就是使用hashTable。js里没有hashTable，所以可以用数组来达到同样作用。\n首先遍历一开始，var temp = target -nums[i];,a[temp]肯定是undefined，a[nums[i]] = i,这里把对应值位置存储当前的index。\n然后后面temp找到的时候，就是之前a[temp]就是之前存储的位置\n举个例子：\n数组第一个元素是4，第7个元素是5，然后和是9。\n遍历开始,i=0,temp = 9-4 =5,a[5]是undefined。所以存储a[4] = 0。\n到i=6的时候,temp = 9-5 = 4 ,a[4]是0，就是之前的存储的值，所以返回[a[temp],i]\n暴力遍历\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    if(nums.length == 0) return [];\n    for(var i =0;i\nfunction twosum(nums,target){\n  var a =[];\n  for(var i=0,len= nums.length;i\n"},"easy/Array/买股票最佳时机.html":{"url":"easy/Array/买股票最佳时机.html","title":"买股票最佳时机","keywords":"","body":"买股票最佳时期\n\n思路\n这题比较简单，使用贪心算法解决。只要后面一天比前面一天价格高，就进行买卖操作。\n唯一比较绕的一点是，可能会觉得同一天进行卖出和买入操作不符合(首先题目没有规定这样不可以)。\n比如 1，2，3，第二天同时卖出并且买入2的价格。但这样等价于第二天可以没有交易，只是计算了下可得利润。\n可以第一天买入，第3天卖出。得出利润一致\n/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function(prices) {\n  let money = 0\n  let buy = prices[0]\n  for (let price of prices) {\n    if (price > buy) {\n      money += price - buy\n    }\n    buy = price\n  }\n  return money\n};\n\n"},"easy/Array/旋转数组.html":{"url":"easy/Array/旋转数组.html","title":"旋转数组","keywords":"","body":"旋转数组\n\n思路\n首先空数组判断\n然后k次循环，从数组最后面pop出元素，塞到数组前面就可以了\n熟悉pop和unshift用法\nvar rotate = function (nums, k) {\n    if (nums.length == 0) return [];\n    for (var i = 0; i \n"},"easy/Array/旋转图像.html":{"url":"easy/Array/旋转图像.html","title":"旋转图像","keywords":"","body":"旋转图像\n\n思路\n首先看到题目一开始我是懵逼的，只能像做逻辑题，试试找一下规律。\n发现把每个原数组的第一个元素出来，形成一个新的数组，作为结果数组的第一项，每个原数组的第二个元素取出来，变成结果数组的第二项...那就比较简单\n了，直接写个方法遍历操作数组就行了。\n如下第一个方案，但是用了局部变量，没有原地，不符合题目。方案二类似，我是打算在原数组后面再加两个空数组，其实也不符合题意的原地旋转\n后面方案3和4，转置再翻转，或者翻转再转置一致，就是元素交换位置。[i][j]和[j][i]交换,然后发现再reverse一下就好了。\n所以对于二维数组，转置一下有奇效！\n方法5，答案里的方案。稍微难理解一些\n\n借用局部对象，不符合题目要求\nvar rotate = function (matrix) {\n var n = matrix.length;\n var temp_arr = []\n for (var i = 0; i \n\n利用原数组，本地测可以。\nvar rotate = function (matrix) {\n var n = matrix.length;\n for (var i = 0; i \n\n转置，然后再翻转一下\n\n\nvar rotate = function (matrix) {\n    for (var i = 0; i \n\n整个翻转，再转置var rotate = function(matrix) {\n matrix.reverse() //[[1],[2],[3]] => [[3],[2],[1]]\n for(var i=0;i\n\n方法三 !\n\n把矩阵看为一层一层的，由外层到内层，这是外循环。每一层看成四个小的块交换位置，这是内循环。\nvar rotate = function(matrix) {\n    var len = matrix.length;\n    //循环几层\n    for(var i=0;i\n"},"easy/Array/移动零.html":{"url":"easy/Array/移动零.html","title":"移动零","keywords":"","body":"移动零\n\n思路\n比较简单，就是把0取出来，然后放到数组后面\n开始写的，没通过，可能不支持filter吧\nvar moveZeroes = function(nums) {\n return nums.filter(a => a != 0).concat(nums.filter(a => a == 0))\n};\n\n然后重写一个，加个变量计数通过了\nvar moveZeroes = function (nums) {\n    var count = 0\n    for (var i = 0; i \n"},"easy/Array/有效的数独.html":{"url":"easy/Array/有效的数独.html","title":"有效的数独","keywords":"","body":"有效数独\n\n思路\n开始的思路很简单，照着规则验证\n检查每一行，每一列，每个小九宫格是否重复。\n司徒大大的解，很优雅，关键就是index = 3 * Math.trunc(i / 3) + Math.trunc(j / 3),计算每个小cube的index。\n另外和之前的计算两树之和技巧类似，保存之前的值为true(hashTable的思路),如果后面再一次出现，就是重复了，返回false\nfunction isValidSudoku(board) {\n    var rows = []//行\n    var cols = [] // 列\n    var cubes = []//9宫格\n    for (var i = 0; i \n我开始写的\n/**\n * @param {character[][]} board\n * @return {boolean}\n */\nvar isValidSudoku = function (board) {\n    //检验长度和字符是否正确\n    if (board.length != 9) return false;\n    try {\n        board.forEach(element => {\n            if (element.length != 9) {\n                throw new error;\n            }\n            element.forEach(item => {\n                var reg = /[^1-9]/\n                if (reg.test(item) && item !== '.') {\n                    throw new error;\n                }\n            });\n            if (containsDuplicate(element)) { //检查每一行是否重复\n                throw new error;\n            }\n        });\n    } catch (error) {\n        return false;\n    }\n\n    //检查每一列是否重复\n    // var colums = []\n    for (var i = 0; i  item != '.') //先去掉点\n        if (nums.length \n"},"easy/Array/只出现一次的数字.html":{"url":"easy/Array/只出现一次的数字.html","title":"只出现一次的数字","keywords":"","body":"只出现一次的数字\n\n思路\n这题相对比较简单，有很多方法实现\n\n正则，match的字符，如果len是1就可以\n异或，答案里看到的，很神奇。0^1 = 1,0^1^1 =0\n利用set，然后set元素的和乘以2减去当前数组元素的和就得出那个唯一的数字\n\nvar singleNumber = function (nums) {\n    if (nums.length == 0) return false;\n\n    var str = nums.join(\",\");\n    for (var i = 0; i \n异或简单\nvar singleNumber = function(nums) {\n   var num = 0;\n        for (var i = 0; i \n还有一种是排序后，两两对比\n"},"easy/Array/删除排序数组中的重复项.html":{"url":"easy/Array/删除排序数组中的重复项.html","title":"删除排序数组中的重复项","keywords":"","body":"数组删除重复项\n\n思路\n\n遍历，遇到相同元素就用splice去除，一定要记得j--\n官方答案里的，很优雅，两个游标，i和j,每当出现nums[j] != nums[i],nums[++i] = nums[j]。关键是题目给出是排序数组！\n\n自己写的\n/**\n * @param {number[]} nums\n * @return {number}\n */\nvar removeDuplicates = function(nums) {\n    for(var i = 0; i \n官方解\n\n时间复杂度：O(n)\n空间复杂度：O(1)\n\nfunction removeDuplicates(nums) {\n    if (nums.length == 0) return 0;\n    var i = 0;\n    for (var j = 1; j \n"},"easy/String/反转字符串.html":{"url":"easy/String/反转字符串.html","title":"反转字符串","keywords":"","body":"反转字符串\n\n思路\n\njs有个API，直接翻转\n\nvar reverseString = function(s) {\n  return s.reverse()\n};\n\n\n倒着遍历，push进数组，然后把之前的删掉\n\nvar reverseString = function (s) {\n    let oldL = s.length\n    for (let len = s.length, i = len - 1; i >= 0; i--) {\n        let item = s[i]\n        s.push(item)\n    }\n    s.splice(0, oldL)\n};\n\n\n镜像循环长度length/2,交换位置\n\nvar reverseString = function (s) {\n    let len = Math.floor(s.length / 2)\n    for (let i = 0; i \n"},"easy/String/整数反转.html":{"url":"easy/String/整数反转.html","title":"整数反转","keywords":"","body":"整数反转\n\n思路\n题目不难，主要是细节\n\n先取符号 采用es6 Math.sign 符号函数， 正数返回 1 ，负数返回 -1 (如果不用这个方法，就判断下第一个字符是不是'-')\n绝对值-> 转字符串 -> 字符串转数组 -> 反转数组 -> 字符串 -> 上符号 -> 判断范围\n\n自己写的,调试过几次，注意细节\nvar reverse = function(x) {\n    let sign = Math.sign(x)\n    let res = (Math.abs(x) + '').split('').reverse().join('') * sign\n    if (res > Math.pow(2, 31) - 1 || res \n"},"easy/String/字符串中的第一个唯一字符.html":{"url":"easy/String/字符串中的第一个唯一字符.html","title":"字符串中的第一个唯一字符","keywords":"","body":"字符串中的第一个唯一字符\n\n题解里的，很巧妙\nvar firstUniqChar = function(s) {\n    for (let i = 0; i \n自己开始写的，感觉很不优雅\nvar firstUniqChar = function (s) {\n    if (s.length == 0) return -1\n    if (s.length == 1) return 0\n    s = s.split(\"\") //转成数组\n    var temp = [], index = 0;\n    for (var i = 0; i \n"},"easy/String/有效的字母异位词.html":{"url":"easy/String/有效的字母异位词.html","title":"有效的字母异位词","keywords":"","body":"有效的字母异位词\n\n思路\n很简单，unicode编码解码一下。转成数组排序再转成字符串，判断下是否相等就可以了\nvar isAnagram = function (s, t) {\n    s = unescape(s);  //Unicode解码\n    t = unescape(t);  //Unicode解码\n    s = s.split(\"\").sort().join(\"\")\n    t = t.split(\"\").sort().join(\"\")\n    if (s == t) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nvar s = \"anagram中国\"\ns = escape(s)\nvar t = \"中nagar国am\"\nvar res = isAnagram(s, t)\nconsole.log(res)\n\n"},"easy/String/验证回文字符串.html":{"url":"easy/String/验证回文字符串.html","title":"验证回文字符串","keywords":"","body":"回文字符串\n\n思路\n忽略大小写，就先转成小写。然后正则去掉非字母和数字的字符，然后转成数组reverse，再转成字符串比较\nvar isPalindrome = function (s) {\n    s = s.toLowerCase()\n    s = s.replace(/[^a-z0-9]/g, \"\")\n    if (s.split(\"\").reverse().join(\"\") == s) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n"},"easy/String/字符串转换整数.html":{"url":"easy/String/字符串转换整数.html","title":"字符串转换整数","keywords":"","body":"字符串转换整数\n\n思路\n去掉空格，正则匹配出数字和符号位。然后转成数字。并判断下是否超出范围。\nvar myAtoi = function (str) {\n    str = str.trim(); //去掉空格\n    if (str.length = 0) {\n        return \"\"\n    }\n    var reg = reg = /^[\\+|\\-]?[0-9]+/\n    var numStr = str.match(reg);\n    if (!numStr) return 0;\n    var num = parseInt(numStr[0])\n    if (num > Math.pow(2, 31) - 1) {\n        return Math.pow(2, 31) - 1\n    }\n    if (num \n"},"easy/String/实现strStr.html":{"url":"easy/String/实现strStr.html","title":"实现 strStr","keywords":"","body":"实现strStr\n\n思路\n\n用API直接可以\n\nvar strStr = function (haystack, needle) {\n    if (needle.length == 0) return 0;\n    return haystack.indexOf(needle)\n};\n\n\n用substr\n\nvar strStr = function(haystack, needle) {\n    if(needle == '') return 0;\n    let haystackArr = haystack.split('');\n    let needleLen = needle.length;\n    for(let i = 0,len = haystackArr.length;i\n"},"easy/String/外观数列.html":{"url":"easy/String/外观数列.html","title":"外观数列","keywords":"","body":"外观数列\n\n思路\n\n题解里的，很秀，用正则解决。\n\\d 匹配数字 \\1指第一个匹配括号内的元素 *代表匹配0次以上 连起来就是 匹配连续0次以上的数字\n正则要好好学啊\n\n/**\n * @param {number} n\n * @return {string}\n */\nvar countAndSay = function(n) {\n    let prev = '1'\n    for(let i = 1; i `${item.length}${item[0]}`)\n    }\n    return prev\n};\n\n\n递归\n\n//递归，知道n-1行的，就知道n行的\nvar countAndSay = function (n) {\n    //第一行就直接输出\n    if (n == 1) {\n        return \"1\";\n    }\n    //得到上一行的字符串\n    var last = countAndSay(n - 1);\n    //输出当前行的字符串\n    return getNextString(last);\n\n}\nfunction getNextString(last) {\n    //长度为 0 就返回空字符串\n    if (last.length == 0) {\n        return \"\";\n    }\n    //得到第 1 个字符重复的次数\n    var num = getRepeatNum(last);\n    // 次数 + 当前字符 + 其余的字符串的情况\n    return num + \"\" + last.charAt(0) + getNextString(last.substring(num));\n}\n\n//得到字符 string[0] 的重复个数，例如 \"111221\" 返回 3\nfunction getRepeatNum(string) {\n    var count = 1;\n    var same = string.charAt(0);\n    for (var i = 1; i \n\n既然有递归，那就可以写出迭代\n\nfunction countAndSay(n) {\n    var res = \"1\";\n    //从第一行开始，一行一行产生\n    while (n > 1) {\n        var temp = \"\";\n        for (var i = 0; i \n"},"easy/String/最长公共前缀.html":{"url":"easy/String/最长公共前缀.html","title":"最长公共前缀","keywords":"","body":"最长公共前缀\n\n思路\n/**\n * @param {string[]} strs\n * @return {string}\n */\nvar longestCommonPrefix = function (strs) {\n  if (strs.length == 0) return ''\n  let ans = strs[0]\n  for (let i = 1; i \n"},"easy/LinkedList/删除链表中的节点.html":{"url":"easy/LinkedList/删除链表中的节点.html","title":"删除链表中的节点","keywords":"","body":"删除链表中的节点\n\n思路\n简单明了\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} node\n * @return {void} Do not return anything, modify node in-place instead.\n */\nvar deleteNode = function (node) {\n\n    //因为要删除节点，所以我们将节点的下一个节点赋值给nextNode\n    var nextNode = node.next;\n    //将下个节点的值赋给节点\n    node.val = nextNode.val;\n    //将下个节点的指向赋给节点\n    node.next = nextNode.next;\n\n};\n\n"},"easy/LinkedList/删除链表的倒数第N个节点.html":{"url":"easy/LinkedList/删除链表的倒数第N个节点.html","title":"删除链表的倒数第 N 个节点","keywords":"","body":"删除链表的倒数第N个节点\n\n思路\n两个游标，一个first,一个second。都指向头结点\n先把first往后移动N个节点。\n如果first为null,就是到尾部了，所以删除的是头结点。(题目里保证n是有效的，也就是说不会超过链表长度)\nfirst还有后续节点，就让second和first一起往后移动，直到first到链表末尾。这是second.next就是要删除的倒数第N个节点了\n second.next = second.next.next删除掉，返回头节点\n \n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} n\n * @return {ListNode}\n */\nvar removeNthFromEnd = function (head, n) {\n    let first = head, second = head;\n    while (n > 0) {\n        first = first.next\n        n--\n    }\n    if (!first) return head.next;     // 删除的是头节点\n    while (first.next) {\n        first = first.next;\n        second = second.next;\n    }\n    second.next = second.next.next;\n    return head\n};\n\n"},"easy/LinkedList/反转链表.html":{"url":"easy/LinkedList/反转链表.html","title":"反转链表","keywords":"","body":"反转链表\n\n\n\n迭代方案\n\nvar reverseList = function (head) {\n    let node = head,\n        previous = null,\n        tmp = null;\n\n    while (node) {\n        // save next before we overwrite node.next!\n        tmp = node.next;\n\n        // reverse pointer\n        node.next = previous;\n\n        // step forward in the list\n        previous = node;\n        node = tmp;\n    }\n\n    return previous;\n};\n\n\n递归方案\n\n如下图，我一开始在纠结head.next = null这一句，我想不是只有末尾置成null了吗，怎么会每一个节点的指向都置为null。\n其实是被递归绕进去了，最后会先执行栈顶的函数。所以当开始节点head3.next被置为null，\n到head2节点，head2.next.next(也就是head3.next)再次被置为head2。最后只有头部节点的next指向null\n\nvar reverseList = function (head) {\n    if(head == null || head.next == null) return head;\n    var newHead = reverseList(head.next);\n    head.next.next = head; \n    head.next = null;\n    return newHead; \n};\n\n"},"easy/LinkedList/合并两个有序链表.html":{"url":"easy/LinkedList/合并两个有序链表.html","title":"合并两个有序链表","keywords":"","body":"合并两个有序链表\n\n思路\n还是比较好理解的，如图\n\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar mergeTwoLists = function (l1, l2) {\n    if (l1 == null) return l2;\n    if (l2 == null) return l1;\n    if (l1.val \n"},"easy/LinkedList/回文链表.html":{"url":"easy/LinkedList/回文链表.html","title":"回文链表","keywords":"","body":"回文链表\n\n思路\n字符串一个拼接到后边，一个拼接到前面。\n最后一对比就可以了\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar isPalindrome = function (head) {\n    let str = '',             // 正向\n        str_reverse = ''      // 反向\n    while (head) {\n        str += head.val;\n        str_reverse = head.val + str_reverse;\n        head = head.next;\n    }\n    return str === str_reverse;\n};\n\n"},"easy/LinkedList/环形链表.html":{"url":"easy/LinkedList/环形链表.html","title":"环形链表","keywords":"","body":"环形链表\n\n思路\np1,p2两个游标，p2每次两步，如果有环，p2肯定早晚会遇到p1。如果没有，p2走到结尾，结束。\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n\n/**\n * @param {ListNode} head\n * @return {boolean}\n */\nvar hasCycle = function(head) {\n    if (!head || !head.next) return false\n  let p1 = head,\n      p2 = head.next;\n  while (p2 && p2.next) {\n    if (p1 === p2) return true;\n    p1 = p1.next;\n    p2 = p2.next.next;\n  }\n  return false;\n};\n\n"},"easy/Tree/对称二叉树.html":{"url":"easy/Tree/对称二叉树.html","title":"对称二叉树","keywords":"","body":"对称二叉树\n\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isSymmetric = function (root) {\n  // write code here\n  //空树 认为是对称的\n  if (root === null) return true\n  //不是空树，则判断左右子树\n  return help(root.left, root.right)\n}\nfunction help(left, right) {\n  //左子树为空，当右子树为空时对称\n  if (left === null) {\n    return right === null\n  }\n  //经过上一行判断出左子树不为空了，右子树为空的话不对称\n  if (right === null) {\n    return false\n  }\n  //两个节点元素值不一样也不对称\n  if (left.val !== right.val) {\n    return false\n  }\n  //判断子树1的右子树和子树2的左子树是否相同，子树1的左子树和子树2的右子树是否相同\n\n  return help(left.left, right.right) && help(left.right, right.left)\n}\n\n迭代写法：\nvar isSymmetric = function (root) {\n  //队列\n  var queue = []\n  if (root == null) return true\n  //左子节点和右子节点同时入队\n  queue.push(root.left)\n  queue.push(root.right)\n  //如果队列不为空就继续循环\n  while (queue.length > 0) {\n    //每两个出队\n    var left = queue.shift(),\n      right = queue.shift()\n    //如果都为空继续循环\n    if (left == null && right == null) continue\n    //如果一个为空一个不为空，说明不是对称的，直接返回false\n    if ((left == null) ^ (right == null)) return false\n    //如果这两个值不相同，也不是对称的，直接返回false\n    if (left.val != right.val) return false\n    //这里要记住入队的顺序，他会每两个两个的出队。\n    //左子节点的左子节点和右子节点的右子节点同时\n    //入队，因为他俩会同时比较。\n    //左子节点的右子节点和右子节点的左子节点同时入队，\n    //因为他俩会同时比较\n    queue.push(left.left)\n    queue.push(right.right)\n    queue.push(left.right)\n    queue.push(right.left)\n  }\n  return true\n}\n\n"},"easy/Tree/二叉树的层序遍历.html":{"url":"easy/Tree/二叉树的层序遍历.html","title":"二叉树的层序遍历","keywords":"","body":" 二叉树的层序遍历\n\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar levelOrder = function (root) {\n    let levels = [];\n    if (!root)\n        return levels;\n\n    let helper = (node, level) => {\n        if (levels.length == level)\n            levels.push([]);\n\n        levels[level].push(node.val);\n\n        if (node.left)\n            helper(node.left, level + 1);\n        if (node.right)\n            helper(node.right, level + 1);\n    }\n\n    helper(root, 0);\n    return levels\n};\n\n"},"easy/Tree/二叉树的坡度.html":{"url":"easy/Tree/二叉树的坡度.html","title":"二叉树的坡度","keywords":"","body":"二叉树的坡度\n思路\n\n\n\n"},"easy/Tree/二叉树的直径.html":{"url":"easy/Tree/二叉树的直径.html","title":"二叉树的直径","keywords":"","body":"二叉树的直径\n思路\nvar diameterOfBinaryTree = function (root) {\n  var ans = 0\n  function dfs(node) {\n    if (node == null) {\n      return 0\n    }\n    var L = dfs(node.left)\n    var R = dfs(node.right)\n    ans = Math.max(ans, L + R + 1)\n    return Math.max(L, R) + 1\n  }\n  dfs(root)\n  return ans == 0 ? 0 : ans - 1\n}\n\n"},"easy/Tree/二叉树的最大深度.html":{"url":"easy/Tree/二叉树的最大深度.html","title":"二叉树的最大深度","keywords":"","body":"二叉树的最大深度\n\n思路\n\n递归写法\n\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function (root) {\n    if (root === null) { //注意等号\n        return 0;\n    } else {\n        var leftDepth = maxDepth(root.left),\n            rightDepth = maxDepth(root.right);\n\n        var childDepth = leftDepth > rightDepth ? leftDepth : rightDepth;\n\n        return childDepth + 1;//根节点不为空高度至少为1\n    }\n};\n\n"},"easy/Tree/二叉树的最小深度.html":{"url":"easy/Tree/二叉树的最小深度.html","title":"二叉树的最小深度","keywords":"","body":"二叉树的最小深度\nvar minDepth = function (root) {\n  if (root == null) {\n    return 0\n  }\n  if (root.left == null && root.right == null) {\n    return 1\n  }\n  let ans = Number.MAX_SAFE_INTEGER\n  if (root.left != null) {\n    ans = Math.min(minDepth(root.left), ans)\n  }\n  if (root.right != null) {\n    ans = Math.min(minDepth(root.right), ans)\n  }\n  return ans + 1\n}\n\n"},"easy/Tree/二叉搜索树中的众树.html":{"url":"easy/Tree/二叉搜索树中的众树.html","title":"二叉搜索树中的众树","keywords":"","body":"二叉搜索树中的众树\n思路\nvar findMode = function (root) {\n  let base = 0,\n    count = 0,\n    maxCount = 0\n  let answer = []\n\n  const update = (x) => {\n    if (x === base) {\n      ++count\n    } else {\n      count = 1\n      base = x\n    }\n    if (count === maxCount) {\n      answer.push(base)\n    }\n    if (count > maxCount) {\n      maxCount = count\n      answer = [base]\n    }\n  }\n\n  const dfs = (o) => {\n    if (!o) {\n      return\n    }\n    dfs(o.left)\n    update(o.val)\n    dfs(o.right)\n  }\n\n  dfs(root)\n  return answer\n}\n\n\nMorris 中序遍历 还不会,学习下\n\n"},"easy/Tree/二叉搜索树最小绝对差.html":{"url":"easy/Tree/二叉搜索树最小绝对差.html","title":"二叉搜索树最小绝对差","keywords":"","body":"二叉搜索树最小绝对差\nvar getMinimumDifference = function (root) {\n  let ans = Number.MAX_SAFE_INTEGER,\n    pre = -1\n  const dfs = (root) => {\n    if (root === null) {\n      return\n    }\n    dfs(root.left)\n    if (pre == -1) {\n      pre = root.val\n    } else {\n      ans = Math.min(ans, root.val - pre)\n      pre = root.val\n    }\n    dfs(root.right)\n  }\n  dfs(root)\n  return ans\n}\n\n"},"easy/Tree/翻转二叉树.html":{"url":"easy/Tree/翻转二叉树.html","title":"翻转二叉树","keywords":"","body":"翻转二叉树\n/* function TreeNode(x) {\n    this.val = x;\n    this.left = null;\n    this.right = null;\n} */\nfunction Mirror(root) {\n    reverseTree(root);\n}\nfunction reverseTree(root) {\n    //为空则结束\n    if (root == null) {\n        return;\n    }\n    //假设root两边的子树自己都已经翻转成功了，那么只需要再将左右子树互换一下就成功了\n    //交换root的左右子树\n    swap(root);\n\n    //左右子树翻转自己去处理就行了，我们规定每个子树的root都跟最终的root处理方式一样即可\n    reverseTree(root.left);\n    reverseTree(root.right);\n}\n\nfunction swap(root) {\n    var node = null;\n    node = root.left;\n    root.left = root.right;\n    root.right = node;\n}\n\n"},"easy/Tree/根据二叉树创建字符串.html":{"url":"easy/Tree/根据二叉树创建字符串.html","title":"根据二叉树创建字符串","keywords":"","body":"根据二叉树创建字符串\n思路\nvar tree2str = function (root) {}\n\n"},"easy/Tree/将有序数组转换为二叉搜索树.html":{"url":"easy/Tree/将有序数组转换为二叉搜索树.html","title":"将有序数组转换为二叉搜索树","keywords":"","body":"将有序数组转换为二叉搜索树\n\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {number[]} nums\n * @return {TreeNode}\n */\nvar sortedArrayToBST = function (nums) {\n    if (nums.length === 0) {\n        return null;\n    }\n    if (nums.length === 1) {\n        return new TreeNode(nums[0]);\n    }\n    var mid = parseInt(nums.length / 2);\n    var root = new TreeNode(nums[mid]);\n    root.left = sortedArrayToBST(nums.slice(0, mid));\n    root.right = sortedArrayToBST(nums.slice(mid + 1));\n    return root;\n};\n\n"},"easy/Tree/路径总和.html":{"url":"easy/Tree/路径总和.html","title":"路径总和","keywords":"","body":"路劲总和\n思路\ndfs\nvar hasPathSum = function (root, targetSum) {\n  var res = []\n  function dfs(root, pathSum) {\n    if (root) {\n      pathSum += Number(root.val)\n      if (root.left || root.right) {\n        if (root.left) dfs(root.left, pathSum)\n        if (root.right) dfs(root.right, pathSum)\n      } else {\n        //叶子节点\n        res.push(pathSum)\n      }\n    }\n  }\n  dfs(root, 0)\n\n  return res.indexOf(targetSum) >= 0\n}\n\nvar hasPathSum = function (root, targetSum) {\n  // 深度优先遍历\n  if (root === null) {\n    //1.刚开始遍历时\n    //2.递归中间 说明该节点不是叶子节点\n    return false\n  }\n  if (root.left === null && root.right === null) {\n    return root.val - targetSum === 0\n  }\n  // 拆分成两个子树\n  return hasPathSum(root.left, targetSum - root.val) || hasPathSum(root.right, targetSum - root.val)\n}\n\n"},"easy/Tree/验证二叉搜索树.html":{"url":"easy/Tree/验证二叉搜索树.html","title":"验证二叉搜索树","keywords":"","body":"验证二叉搜索树\n\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {boolean}\n */\nvar isValidBST = function (root) {\n    let max = Infinity, min = -Infinity;\n    function judge(node, max, min) {\n        if (node == null) return true;\n        if (node.val  min) {\n            return judge(node.left, node.val, min) && judge(node.right, max, node.val);\n        }\n        return false;\n    }\n    return judge(root, max, min);\n};\n\n"},"easy/Tree/左叶子之和.html":{"url":"easy/Tree/左叶子之和.html","title":"左叶子之和","keywords":"","body":"左叶子之和\n思路\nvar sumOfLeftLeaves = function (root) {\n  let sum = 0\n  const getSum = (root, isLeft) => {\n    if (root == null) return\n    //要找的叶子节点\n    if (root.left == null && root.right == null && isLeft) {\n      sum += root.val\n      return\n    }\n    //左分支\n    getSum(root.left, true)\n    //右分支\n    getSum(root.right, false)\n  }\n  //初始调用时，为false。因为一个根节点，不是左叶子节点\n  getSum(root, false)\n  return sum\n}\n\n"},"easy/SortSearch/合并两个有序数组.html":{"url":"easy/SortSearch/合并两个有序数组.html","title":"合并两个有序数组","keywords":"","body":"合并两个有序数组\n\n// https://leetcode-cn.com/explore/interview/card/top-interview-questions-easy/8/sorting-and-searching/52/\n/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */\nvar merge = function (nums1, m, nums2, n) {\n    while (n > 0) {\n        if (nums1[m - 1] >= nums2[n - 1]) {\n            nums1[n + m - 1] = nums1[--m]\n        } else {\n            nums1[n + m - 1] = nums2[--n]\n        }\n    }\n};\n\n"},"easy/SortSearch/第一个错误的版本.html":{"url":"easy/SortSearch/第一个错误的版本.html","title":"第一个错误的版本","keywords":"","body":"第一个错误的版本\n\n/**\n * Definition for isBadVersion()\n * \n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */\n\n/**\n * @param {function} isBadVersion()\n * @return {function}\n */\nvar solution = function (isBadVersion) {\n    /**\n     * @param {integer} n Total versions\n     * @return {integer} The first bad version\n     */\n    return function (n) {\n        let i = 1,\n            j = n;\n        while (i \n"},"easy/DP/爬楼梯.html":{"url":"easy/DP/爬楼梯.html","title":"爬楼梯","keywords":"","body":"爬楼梯\n\n思路\n用递归的思路想一下，要求 n 层的台阶的走法，由于一次走 1 或 2 个台阶，所以上到第 n 个台阶之前，一定是停留在第 n - 1 个台阶上，或者 n - 2 个台阶上。所以如果用 f ( n ) 代表 n 个台阶的走法。那么，\nf ( n ) = f ( n - 1) + f ( n - 2 )。\nf ( 1 ) = 1，f ( 2 ) = 2 。\n这不就是斐波拉契数列吗\nfunction climbStairs(int n) {\n    if (n == 1) {\n        return 1;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    return climbStairs(n - 1) + climbStairs(n - 2);\n}\n\n那斐波拉契数列可以使用DP写法\nvar climbStairs = function (n) {\n    var results = [];\n    for (var i = 0; i \n"},"easy/DP/买卖股票的最佳时机.html":{"url":"easy/DP/买卖股票的最佳时机.html","title":"买卖股票的最佳时机","keywords":"","body":"买卖股票的最佳时机\n\n思路\n我开始还以为和数组那个买股票最佳时期题目一样。注意区别，只允许交易一次￣□￣｜｜\n1. 暴力枚举\n/**\n * @param {number[]} prices\n * @return {number}\n */\nvar maxProfit = function(prices) {\n  var maxprofit = 0\n  for(var i=0;i maxprofit) maxprofit = profit;\n   }   \n  }\n  return maxprofit\n};\n\n2. 暴力枚举的优化\n我们发现：其实只需要关心之前（不包括现在）看到的最低股价，于是在遍历的过程中，记录下之前看到的最低股价，就可以省去内层循环。\nvar  maxProfit = function(prices) {\n        var len = prices.length;\n        if (len \n3. 动态规划\n 动态规划的 5 个步骤：\n\n设定状态\n这道题其实是一个典型的二维 dp 问题。“动态规划”用于多阶段最优化问题的求解。这里天数代表每个阶段，即一天一天看，设置为第一维。为了消除后效性（前面的状态确定下来以后不会因为后面状态而更改），将当天是否持股设置为第二维的状态。于是：\n状态 dp[i][j] 表示：在索引为 i 的这一天，用户手上持股状态为 j 所获得的最大利润。\n说明：\nj 只有 2 个值：0 表示不持股（特指卖出股票以后的不持股状态），1 表示持股。\n“用户手上不持股”不代表用户一定在索引为 i 的这一天把股票抛售了；\n\n思考状态转移方程\ndp[i][0] 怎样转移？\n\ndp[i - 1][0] ：当然可以从昨天不持股转移过来，表示从昨天到今天什么都不操作，这一点是显然的；\n\ndp[i - 1][1] + prices[i]：昨天持股，就在索引为 i 的这一天，我卖出了股票，状态由 1 变成了 0，此时卖出股票，因此加上这一天的股价。\n\n\n综上：dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + prices[i]);\ndp[i][1] 怎样转移？\n\ndp[i - 1][1] ：昨天持股，今天什么都不操作，当然可以从昨天持股转移过来，这一点是显然的；\n\n-prices[i]：注意：状态 1不能由状态 0 来，因为事实上，状态 0 特指：“卖出股票以后不持有股票的状态”，请注意这个状态和“没有进行过任何一次交易的不持有股票的状态”的区别。\n\n\n因此，-prices[i] 就表示，在索引为 i 的这一天，执行买入操作得到的收益。注意：因为题目只允许一次交易，因此不能加上 dp[i - 1][0]。\n综上：dp[i][1] = max(dp[i - 1][1], -prices[i]);\n\n考虑初始值\n第 0 天不持股，显然 dp[0][0] = 0；\n第 0 天持股，显然dp[0][1] = -prices[0]。\n\n考虑输出\n从状态转移方程可以看出，每一天的状态都考虑了之前的状态。在只发生一次交易的情况下，持有这支股票一定不能使我们获得最大利润。因此输出是 dp[len - 1][0]，不可能是持股的状态 dp[len - 1][1]，\n\n\n参考代码 3：\nvar maxProfit = function(prices) {\n        var len = prices.length;\n        if (len \n复杂度分析：\n\n时间复杂度：O(N)；\n空间复杂度：O(N)。\n\n说明：如果我们一定要区分“不持有股票”的状态是“一开始不持有”和“卖出股票以后的不持有”，设置 3 个状态即可，我个人认为更加清晰。\n下面状态的设置和状态转移方程均写在代码注释中：\n参考代码 4：\nvar maxProfit = function(int[] prices) {\n        var len = prices.length;\n        if (len \n复杂度分析：\n\n时间复杂度：O(N)；\n空间复杂度：O(N)。\n说明：事实上，这一版代码，由于 dp[i][0] = 0 恒成立，和“参考代码 3”其实是等价的。\n\n\n考虑是否可以状态压缩\n由于 dp[i] 仅仅依赖于 dp[i - 1] ，因此，我们可以使用滚动数组的技巧压缩变量。下面根据“参考代码 3”进行修改：\n\n\n参考代码 5：\n    var maxProfit = function(prices) {\n        var len = prices.length;\n        if (len \n复杂度分析：\n\n时间复杂度：O(N)；\n空间复杂度：O(1)，状态压缩以后相当于只用了 4 个变量。\n我们继续观察“参考代码 3”，因为状态只能从 1 到 0，即先有状态 1 再有状态 0，我们在填写“状态表 dp” 的时候，只需要用 1 维，因此填表的时候，先写 0 再写 1 即可。\n\n参考代码 6：（根据“参考代码 3”进行修改）\n    var maxProfit = function(prices) {\n        int len = prices.length;\n        if (len \n复杂度分析：\n\n时间复杂度：O(N)；\n空间复杂度：O(1)，状态压缩以后相当于只用了 2 个变量。\n很有意思的是，可以将此时的数组 dp 语义化，dp[1] = Math.max(dp[1], -prices[i]); 等价于 dp[1] = Math.min(dp[1], prices[i]); 其实就是“参考代码 2” 中的 minVal，dp[0] 等价于 “参考代码 2” 中的 res。\n\n参考原文：https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/bao-li-mei-ju-dong-tai-gui-hua-chai-fen-si-xiang-b\n"},"easy/DP/最大子序和.html":{"url":"easy/DP/最大子序和.html","title":"最大子序和","keywords":"","body":"最大子序和\n\n思路\n1. 暴力枚举\nvar maxSubArray = function (nums) {\n    var sum = -Infinity;\n    var len = nums.length;\n    for (var start = 0; start \n优化\nvar maxSubArray = function (nums) {\n    var sum = -Infinity;\n    var len = nums.length;\n    for (var start = 0; start \n2. 贪心算法\n* 若当前指针所指元素之前的和小于0，则丢弃当前元素之前的数列\nvar maxSubArray = function (nums) {\n    var len = nums.length;\n    var cur_sum = nums[0], max_sum = nums[0];\n    for (var i = 0; i \n3. 动态规划\n* 若前一个元素大于0，则将其加到当前元素上\nvar maxSubArray = function(nums) {\n    let len = nums.length\n    for(var i=1;i0){\n            nums[i]+=nums[i-1]\n        }\n    }\n    return Math.max(...nums)\n};\n\n\nvar maxSubArray = function(nums) {\n    let pre = 0, maxAns = nums[0];\n    nums.forEach((x) => {\n        pre = Math.max(pre + x, x);\n        maxAns = Math.max(maxAns, pre);\n    });\n    return maxAns;\n};\n\n4. 分治\n题解\n繁琐 ￣□￣｜｜\n"},"easy/DP/打家劫舍.html":{"url":"easy/DP/打家劫舍.html","title":"打家劫舍","keywords":"","body":"打家劫舍\n\n思路\nDP\n\n思考状态\n假设 s(i)为以第 i 个数为结尾的最大和。\n\n状态转移方程\ns(i) = max(s(0)...s(i-2))+ nums[i]\n\n思考初始化\ns(0) = nums[0]\n\n思考输出\nmax(s)\n\n\nvar rob = function (nums) {\n  var len = nums.length\n  if (len == 0) return 0\n  var sum = [] //记录\n  for (var i = 0; i \n"},"easy/Design/打乱数组.html":{"url":"easy/Design/打乱数组.html","title":"打乱数组","keywords":"","body":"打乱数组\n\n思路\n洗牌算法能保证，对于生成的排列，每一个元素都能等概率的出现在每一个位置。\n数组长度为n， 先从n个数据中，随机选取一个元素，与最后一个元素交换\n每个元素被选中的概率是 1/n\n从剩下长度的 n-1 元素中随便取一个，与倒数第二个元素交换，第一次没有被选中的概率为 n-1/n\n第二次被选中的概率为 1/n-1 , 所以概率仍然是 (n-1)/n * 1/(n-1) = 1/n\n所以每一个元素出现在每一个位置的概率，都是 1/n\n/**\n * @param {number[]} nums\n */\nvar Solution = function (nums) {\n    this.arr = nums;\n};\n\n/**\n * Resets the array to its original configuration and return it.\n * @return {number[]}\n */\nSolution.prototype.reset = function () {\n    return this.arr;\n};\n\n/**\n * Returns a random shuffling of the array.\n * @return {number[]}\n */\nSolution.prototype.shuffle = function () {\n    let nums = [...this.arr];\n    let n = nums.length - 1;\n    while (n >= 0) {\n        let index = parseInt(Math.random() * (n + 1));\n        [nums[index], nums[n]] = [nums[n], nums[index]];\n        n--;\n    }\n    return nums;\n};\n\n/**\n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums)\n * var param_1 = obj.reset()\n * var param_2 = obj.shuffle()\n */\n\n\n/**\n * Your Solution object will be instantiated and called as such:\n * var obj = new Solution(nums)\n * var param_1 = obj.reset()\n * var param_2 = obj.shuffle()\n */\n\n方法二，顺序打乱\n/**\n * @param {number[]} nums\n */\nvar Solution = function(nums) {\n    this.arr = nums;\n};\n\n/**\n * Resets the array to its original configuration and return it.\n * @return {number[]}\n */\nSolution.prototype.reset = function() {\n    return this.arr;\n};\n\n/**\n * Returns a random shuffling of the array.\n * @return {number[]}\n */\nSolution.prototype.shuffle = function() {\n    let nums = [...this.arr];\n    let i = 0;\n    function getRandom(start, end) {\n        return  parseInt(start + Math.random() * (end - start))\n    }\n    while(i \n"},"easy/Design/最小栈.html":{"url":"easy/Design/最小栈.html","title":"最小栈","keywords":"","body":"最小栈\n\n思路\n比较简单，直接上代码\n/**\n * initialize your data structure here.\n */\nvar MinStack = function () {\n    this.arr = [];\n};\n\n/** \n * @param {number} x\n * @return {void}\n */\nMinStack.prototype.push = function (x) {\n    this.arr.push(x)\n};\n\n/**\n * @return {void}\n */\nMinStack.prototype.pop = function () {\n    this.arr.pop()\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.top = function () {\n    if (this.arr.length >= 1) {\n        return this.arr[this.arr.length - 1]\n    } else {\n        return null\n    }\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.getMin = function () {\n    let min = this.arr[0]\n    this.arr.forEach(item => {\n        if (item \n"},"easy/Math/FizzBuzz.html":{"url":"easy/Math/FizzBuzz.html","title":"FizzBuzz","keywords":"","body":"FizzBuzz\n\n思路\n1.暴力解决\n循环判断\nvar fizzBuzz = function (n) {\n    var ans = []\n    for (var i = 1; i \n"},"easy/Math/计数质数.html":{"url":"easy/Math/计数质数.html","title":"计数质数","keywords":"","body":"计数质数\n\n思路\n1.暴力破解\n是不是质数写个方法暴力遍历判断了。（素性测试如果是很大的数，暴力遍历不靠谱）\nvar countPrimes = function (n) {\n    var count = 0;\n    for (var i = 2; i \n果然运行超时了\n2. 优化\n参考题解\ni 不需要遍历到 n，而只需要到 sqrt(n) 即可\nvar countPrimes = function (n) {\n    var count = 0;\n    for (var i = 2; i \n3. 高效实现\n"},"easy/Math/3的幂.html":{"url":"easy/Math/3的幂.html","title":"3 的幂","keywords":"","body":"3的幂\n\n题解\n1. 暴力检查\n就是不停地除以3，最后检查是否等于1呗\n开始写错了，忘了1也是3的幂。\nvar isPowerOfThree = function (n) {\n    if (n\n其他方法\n"},"easy/Math/罗马数字转整数.html":{"url":"easy/Math/罗马数字转整数.html","title":"罗马数字转整数","keywords":"","body":"罗马数字转整数\n\n思路\n我想起了在angularjs的parser源码里有个peek方法,就是多看下下一个元素合起来是不是特殊的就可以了。\nvar romanToInt = function (s) {\n    var code = { \"I\": 1, \"V\": 5, \"X\": 10, \"L\": 50, \"C\": 100, \"D\": 500, \"M\": 1000, \"IV\": 4, \"IX\": 9, \"XL\": 40, \"XC\": 90, \"CD\": 400, \"CM\": 900 }\n    var sum = 0;\n    var len = s.length\n    for (var i = 0; i \n"},"easy/Other/位1的个数.html":{"url":"easy/Other/位1的个数.html","title":"位 1 的个数","keywords":"","body":"位1的个数\n\n思路\n"},"easy/Other/汉明距离.html":{"url":"easy/Other/汉明距离.html","title":"汉明距离","keywords":"","body":"汉明距离\n\n思路\n异或，然后算下 1 的个数\nvar hammingDistance = function (x, y) {\n  var s = x ^ y\n  var c = 0\n  for (var i = 0; i > 1\n  }\n  return c\n}\n\n"},"easy/Other/颠倒二进制位.html":{"url":"easy/Other/颠倒二进制位.html","title":"颠倒二进制位","keywords":"","body":"颠倒二进制位\n\nvar reverseBits = function (n) {\n  var str = Number(n).toString(2)\n  str = str.padStart(32, 0)\n  // console.log('str',str)\n  reverseStr = str.split('').reverse().join('')\n  // console.log('reverseStr',reverseStr)\n  return parseInt(reverseStr, 2)\n}\n\nvar reverseBits = function (n) {\n  let rev = 0\n  for (let i = 0; i  0; ++i) {\n    rev |= (n & 1) >>= 1\n  }\n  return rev >>> 0\n}\n\n分智算法，我还没看懂，有时间研究\nvar reverseBits = function (n) {\n  const M1 = 0x55555555 // 01010101010101010101010101010101\n  const M2 = 0x33333333 // 00110011001100110011001100110011\n  const M4 = 0x0f0f0f0f // 00001111000011110000111100001111\n  const M8 = 0x00ff00ff // 00000000111111110000000011111111\n\n  n = ((n >>> 1) & M1) | ((n & M1) >> 2) & M2) | ((n & M2) >> 4) & M4) | ((n & M4) >> 8) & M8) | ((n & M8) >> 16) | (n >> 0\n}\n\n"},"easy/Other/帕斯卡三角形.html":{"url":"easy/Other/帕斯卡三角形.html","title":"帕斯卡三角形","keywords":"","body":"帕斯卡三角形\n\n"},"easy/Other/有效的括号.html":{"url":"easy/Other/有效的括号.html","title":"有效的括号","keywords":"","body":"有效的括号\n\n"},"easy/Other/缺失数字.html":{"url":"easy/Other/缺失数字.html","title":"缺失数字","keywords":"","body":"缺失数字\n\n"},"normal/Array&String/三数之和.html":{"url":"normal/Array&String/三数之和.html","title":"三数之和","keywords":"","body":"三数之和\n\n思路\n完整题解过程：\nhttps://leetcode.wang/leetCode-15-3Sum.html?h=threesum\nhttps://leetcode-cn.com/problems/3sum/solution/hua-jie-suan-fa-15-san-shu-zhi-he-by-guanpengchn/\n\n标签：数组遍历\n首先对数组进行排序，排序后固定一个数 nums[i]，再使用左右指针指向 nums[i]后面的两端，数字分别为 nums[L] 和 nums[R]，计算三个数的和 sum判断是否满足为 0，满足则添加进结果集\n如果 nums[i]大于 0，则三数之和必然无法等于 0，结束循环\n如果 nums[i] == nums[i−1]，则说明该数字重复，会导致结果重复，所以应该跳过\n当 sum == 0 时，nums[L]== nums[L+1] 则会导致结果重复，应该跳过，L++\n当 sum == 0 时，nums[R] == nums[R−1] 则会导致结果重复，应该跳过，R--\n时间复杂度：O(n^2)，n 为数组长度\n\n/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar threeSum = function(nums) {\n    let ans = [];\n    const len = nums.length;\n    if(nums == null || len  a - b); // 排序\n    for (let i = 0; i  0) break; // 如果当前数字大于0，则三数之和一定大于0，所以结束循环\n        if(i > 0 && nums[i] == nums[i-1]) continue; // 去重\n        let L = i+1;\n        let R = len-1;\n        while(L  0) R--;\n        }\n    }        \n    return ans;\n};\n\n"},"normal/Array&String/矩阵置零.html":{"url":"normal/Array&String/矩阵置零.html","title":"矩阵置零","keywords":"","body":"矩阵置零\n\n思路\n首先暴力破解试试\n1. 暴力破解\nvar setZeroes = function (matrix) {\n    var m = matrix.length\n    var n = matrix[0].length;\n    var iRecords = [];\n    var jRecords = []\n    for (var i = 0; i \n"},"normal/Array&String/字母异位词分组.html":{"url":"normal/Array&String/字母异位词分组.html","title":"字母异位词分组","keywords":"","body":"字母异位词分组\n\n思路\n那先写个方法验证字母异位词。然后无非写方法遍历分组。主要就是加个变量判断是否已经分组了，没有就新建一个组\nvar groupAnagrams = function (strs) {\n    var ans = [[strs[0]]]; //先放一个元素\n    var len = strs.length;\n    var hasGrouped = false\n    for (var i = 1; i  {  //每一个组\n            if (isAnagrams(arrItem[0], item)) {  //只需要取第一个元素判断下\n                arrItem.push(item);\n                hasGrouped = true;\n            }\n        })\n        if (!hasGrouped) {  //如果都没有的话\n            var newArr = [item];\n            ans.push(newArr)\n        }\n\n    }\n\n    return ans;\n};\n\nvar isAnagrams = function (s1, s2) {\n    var s1Tem = s1.split(\"\").sort().join(\"\")\n    var s2Tem = s2.split(\"\").sort().join(\"\")\n    return s1Tem == s2Tem\n}\n\n好了，一提交 超出时间限制。￣□￣｜｜\n看了下题解，其实原理差不多，不过用了个Map。map底层原理不是完整遍历，使用了链表，不是O(n^2)\nO(nklogk) ,k是strs中字符串的最大长度。O(n)是外层循环，然后在O(klogk)时间内对每个字符串排序。\n/**\n * @param {string[]} strs\n * @return {string[][]}\n */\nvar groupAnagrams = function(strs) {\n    let hash = new Map()\n\n    for(let i = 0; i \n还有其他比较巧的方法，详见题解\n"},"normal/Array&String/无重复字符的最长子串.html":{"url":"normal/Array&String/无重复字符的最长子串.html","title":"无重复字符的最长子串","keywords":"","body":"无重复字符的最长子串\n\n思路\n1. 暴力破解\nvar lengthOfLongestSubstring = function (s) {\n    var len = s.length;\n    var max = 0;\n    for (var start = 0; start \n一提交，又超时了，好像暴力算法在中级里面总是不通过。\n2. 滑动窗口\n官方题解\nvar lengthOfLongestSubstring = function(s) {\n    // 哈希集合，记录每个字符是否出现过\n    const occ = new Set();\n    const n = s.length;\n    // 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\n    let rk = -1, ans = 0;\n    for (let i = 0; i \n"},"normal/Array&String/最长回文子串.html":{"url":"normal/Array&String/最长回文子串.html","title":"最长回文子串","keywords":"","body":"最长回文子串\n\n思路\n官方题解里有个大佬整理的特别好,所以直接摘录：https://leetcode-cn.com/problems/longest-palindromic-substring/solution/zhong-xin-kuo-san-dong-tai-gui-hua-by-liweiwei1419/\n方法一 暴力匹配\n\n根据回文子串的定义，枚举所有长度大于等于 2 的子串，依次判断它们是否是回文；\n在具体实现时，可以只针对大于“当前得到的最长回文子串长度”的子串进行“回文验证”；\n在记录最长回文子串的时候，可以只记录“当前子串的起始位置”和“子串长度”，不必做截取。这一步我们放在后面的方法中实现。\n\n说明：暴力解法时间复杂度高，但是思路清晰、编写简单。由于编写正确性的可能性很大，可以使用暴力匹配算法检验我们编写的其它算法是否正确。优化的解法在很多时候，是基于“暴力解法”，以空间换时间得到的，因此思考清楚暴力解法，分析其缺点，很多时候能为我们打开思路。\nvar longestPalindrome = function(s) {\n        var len = s.length;\n        if (len  maxLen && validPalindromic(charArray, i, j)) {\n                    maxLen = j - i + 1;\n                    begin = i;\n                }\n            }\n        }\n        return s.substring(begin, begin + maxLen);\n    }\n\n    /**\n     * 验证子串 s[left..right] 是否为回文串\n     */\n    var validPalindromic = function(charArray,left,right) {\n        while (left \n方法二 动态规划\n\n\n思考状态（重点）\n\n状态的定义，先尝试「题目问什么，就把什么设置为状态」；\n然后思考「状态如何转移」，如果「状态转移方程」不容易得到，尝试修改定义，目的依然是为了方便得到「状态转移方程」。\n状态转移方程」是原始问题的不同规模的子问题的联系。即大问题的最优解如何由小问题的最优解得到。\n\n\n\n\n思考状态转移方程（核心、难点）\n\n状态转移方程是非常重要的，是动态规划的核心，也是难点；\n\n常见的推导技巧是：分类讨论。即：对状态空间进行分类；\n\n归纳「状态转移方程」是一个很灵活的事情，通常是具体问题具体分析；\n\n除了掌握经典的动态规划问题以外，还需要多做题；\n\n如果是针对面试，请自行把握难度。掌握常见问题的动态规划解法，理解动态规划解决问题，是从一个小规模问题出发，逐步得到大问题的解，并记录中间过程；\n\n「动态规划」方法依然是「空间换时间」思想的体现，常见的解决问题的过程很像在「填表」。\n\n\n\n思考初始化\n 初始化是非常重要的，一步错，步步错。初始化状态一定要设置对，才可能得到正确的结果。\n\n角度 1：直接从状态的语义出发；\n\n角度 2：如果状态的语义不好思考，就考虑「状态转移方程」的边界需要什么样初始化的条件；\n\n角度 3：从「状态转移方程」方程的下标看是否需要多设置一行、一列表示「哨兵」（sentinel），这样可以避免一些特殊情况的讨论。\n\n\n\n思考输出\n 有些时候是最后一个状态，有些时候可能会综合之前所有计算过的状态。\n\n思考优化空间（也可以叫做表格复用）\n\n「优化空间」会使得代码难于理解，且是的「状态」丢失原来的语义，初学的时候可以不一步到位。先把代码写正确是更重要；\n「优化空间」在有一种情况下是很有必要的，那就是状态空间非常庞大的时候（处理海量数据），此时空间不够用，就必须「优化空间」；\n非常经典的「优化空间」的典型问题是「0-1 背包」问题和「完全背包」问题。\n\n\n\n本题具体分析详见原文链接\nvar longestPalindrome = function (s) {\n    // 特判\n    var len = s.length;\n    if (len  maxLen) {\n                maxLen = j - i + 1;\n                begin = i;\n            }\n        }\n    }\n    return s.substring(begin, begin + maxLen);\n}\n\n"},"normal/Array&String/递增的三元子序列.html":{"url":"normal/Array&String/递增的三元子序列.html","title":"递增的三元子序列","keywords":"","body":"递增的三元子序列\n\n思路\n本题的思路非常的巧妙！\n首先，新建两个变量 small 和 mid ，分别用来保存题目要我们求的长度为 3 的递增子序列的最小值和中间值。\n接着，我们遍历数组，每遇到一个数字，我们将它和 small 和 mid 相比，若小于等于 small，则替换 small；否则，若小于等于 mid，则替换 mid；否则，若大于 mid，则说明我们找到了长度为 3 的递增数组！\n上面的求解过程中有个问题：当已经找到了长度为 2 的递增序列，这时又来了一个比 small 还小的数字，为什么可以直接替换 small 呢，这样 small 和 mid 在原数组中并不是按照索引递增的关系呀？\nTrick 就在这里了！假如当前的 small 和 mid 为 [3, 5]，这时又来了个 1。假如我们不将 small 替换为 1，那么，当下一个数字是 2，后面再接上一个 3 的时候，我们就没有办法发现这个 [1,2,3] 的递增数组了！也就是说，我们替换最小值，是为了后续能够更好地更新中间值！\n另外，即使我们更新了 small ，这个 small 在 mid 后面，没有严格遵守递增顺序，但它隐含着的真相是，有一个比 small 大比 mid 小的前·最小值出现在 mid 之前。因此，当后续出现比 mid 大的值的时候，我们一样可以通过当前 small 和 mid 推断的确存在着长度为 3 的递增序列。 所以，这样的替换并不会干扰我们后续的计算！\nvar increasingTriplet = function (nums) {\n    var len = nums.length;\n    if (len  mid) {\n            return true;\n        }\n    }\n\n    return false;\n\n};\n\n2. DP解法\n和LIS一样，只要计算了LIS长度为3就可以了\n题解\n/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar increasingTriplet = function(nums) {\n    let longest = [], count;\n    for(let i = 0; i  nums[j] && count = 3) {\n            return true;\n        }\n    }\n    return false;\n};\n\n"},"normal/LinkedList/两数相加.html":{"url":"normal/LinkedList/两数相加.html","title":"两数相加","keywords":"","body":"两数相加\n\n思路\n\n标签：链表\n将两个链表看成是相同长度的进行遍历，如果一个链表较短则在前面补 \n0，比如 987 + 23 = 987 + 023 = 1010\n每一位计算的同时需要考虑上一位的进位问题，而当前位计算结束后同样需要更新进位值\n如果两个链表全部遍历完毕后，进位值为 \n1，则在新链表最前方添加节点1\n小技巧：对于链表问题，返回结果为头结点时，通常需要先初始化一个预先指针 pre，该指针的下一个节点指向真正的头结点head。使用预先指针的目的在于链表初始化时无可用节点值，而且链表构造过程需要指针移动，进而会导致头指针丢失，无法返回结果。\n\n /**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n    let node = new ListNode('head');\n    let temp = node;//哑结点\n    let add = 0;//是否进一\n    let sum = 0;//新链表当前未取余的值 = 链表1值 + 链表2值 + add;\n\n    //遍历，直到最长的都为空\n    while(l1 || l2){\n        sum = (l1 ? l1.val : 0) + (l2 ? l2.val : 0) + add;\n        temp.next = new ListNode(sum % 10);//取余则为新链表的值\n        temp = temp.next;\n        add = sum >= 10 ? 1 : 0;\n        l1 && (l1 = l1.next);\n        l2 && (l2 = l2.next);\n    }\n    add && (temp.next = new ListNode(add));\n    return node.next;\n};\n\n"},"normal/LinkedList/奇偶链表.html":{"url":"normal/LinkedList/奇偶链表.html","title":"奇偶链表","keywords":"","body":"奇偶链表\n\n思路\n这个解法非常符合直觉思路也很简单。但是要写一个精确且没有 bug 的代码还是需要进行一番思索的。\n一个 LinkedList 需要一个头指针和一个尾指针来支持双端操作。我们用变量 head 和 odd 保存奇链表的头和尾指针。\nevenHead 和 even 保存偶链表的头和尾指针。算法会遍历原链表一次并把奇节点放到奇链表里去、偶节点放到偶链表里去。\n遍历整个链表我们至少需要一个指针作为迭代器。这里 odd 指针和 even 指针不仅仅是尾指针，也可以扮演原链表迭代器的角色。\n\n   var oddEvenList = function(head) {\n        if (head == null) return null;\n        var odd = head, even = head.next, evenHead = even;\n        while (even != null && even.next != null) {\n            odd.next = even.next;\n            odd = odd.next;\n            even.next = odd.next;\n            even = even.next;\n        }\n        odd.next = evenHead;\n        return head;\n    }\n\n"},"normal/LinkedList/相交链表.html":{"url":"normal/LinkedList/相交链表.html","title":"相交链表","keywords":"","body":"相交链表\n\n思路\n题解\nvar getIntersectionNode = function(headA, headB) {\n    let [ab, ba] = [headA, headB];\n\n    while (true) {\n        if (ab === ba) return ab;\n\n        [ab, ba] = [ab ? ab.next : headB, ba ? ba.next : headA];\n    }\n};\n\n"},"normal/Tree&Graph/中序遍历二叉树.html":{"url":"normal/Tree&Graph/中序遍历二叉树.html","title":"中序遍历二叉树","keywords":"","body":"中序遍历二叉树\n\n思路\n\n先序：是二叉树遍历中的一种，即先访问根结点，然后遍历左子树，后遍历右子树。遍历左、右子树时，先访问根结点，后遍历左子树，后遍历右子树，如果二叉树为空则返回。\n\n中序：是二叉树遍历中的一种，即先遍历左子树，后访问根结点，然后遍历右子树。若二叉树为空则结束返回。\n\n后序：是二叉树遍历中的一种，即先遍历左子树，后遍历右子树，然后访问根结点，遍历左、右子树时，仍先遍历左子树，后遍历右子树，最后遍历根结点。\n\n\nvar inorderTraversal = function(root) {\n    var res=[];\n    inorder(root,res);\n    return res;\n};\n//按照左 根 右顺序遍历\nfunction inorder(root,res){\n    if(!root) return ;\n    inorder(root.left,res);\n    res.push(root.val);\n    inorder(root.right,res);\n}\n\n迭代版\nvar inorderTraversal=function(root){\n        var  res=[];\n        //栈  \n        var s=[];\n        var p = root;\n\n        while (p || s.length>0) {\n            //直至左节点为空，即没有左节点为止\n            while (p) {\n                s.push(p);\n                p = p.left;\n            }\n            //出栈，存放根节点\n            p = s.pop();\n            res.push(p.val);\n            p = p.right;\n        }\n        return res;\n}\n\n"},"normal/Tree&Graph/二叉树的锯齿形层次遍历.html":{"url":"normal/Tree&Graph/二叉树的锯齿形层次遍历.html","title":"二叉树的锯齿形层次遍历","keywords":"","body":"二叉树的锯齿形层次遍历\n\n思路\nvar zigzagLevelOrder = function (root) {\n    let res = [];\n    helper(root, res, 0);\n    return res;\n};\n\nvar helper = function (root, res, level) {\n    if (!root) return;\n    if (!res[level]) res[level] = [];\n    level % 2 ? res[level].unshift(root.val) : res[level].push(root.val);\n    helper(root.left, res, level + 1);\n    helper(root.right, res, level + 1);\n}\n\n"},"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html":{"url":"normal/Tree&Graph/从前序与中序遍历序列构造二叉树.html","title":"从前序与中序遍历序列构造二叉树","keywords":"","body":"从前序与中序遍历序列构造二叉树\n\n思路\n中级的头有点疼了，题解\nvar buildTree = function (preorder, inorder) {\n  if (inorder.length === 0) return null\n  let root = new TreeNode(preorder[0]) \n  let mid = inorder.indexOf(preorder[0]) \n  root.left = buildTree(preorder.slice(1, mid + 1), inorder.slice(0, mid)) \n  root.right = buildTree(preorder.slice(mid + 1), inorder.slice(mid + 1))\n  return root\n};\n\n\n字符串截取 slice 性能消耗比较大，没必要把 preorder 和 inorder 数组真的切割出来\n用两个指针表示即可。写一个 helper 函数，接收2对指针\n\nvar buildTree = (preorder, inorder) => {\n  return helper(preorder, 0, preorder.length - 1, inorder, 0, inorder.length - 1)\n}\n\nfunction helper(preorder, p_start, p_end, inorder, i_start, i_end) {\n  if (p_start > p_end) return null // preorder为空\n  let rootVal = preorder[p_start] // 根节点的值\n  let root = new TreeNode(rootVal) // 根节点\n  let mid = inorder.indexOf(rootVal) // 根节点在inorder的位置\n  let leftNum = mid - i_start // 左子树的节点数\n\n  root.left = helper(preorder, p_start + 1, p_start + leftNum, inorder, i_start, mid - 1)\n  root.right = helper(preorder, p_start + leftNum + 1, p_end, inorder, mid + 1, i_end)\n  return root\n}\n\n\n每次递归都要在 inorder 数组中寻找根节点的位置，耗费性能\n提前把 inorder 数组的项和索引存储在 HashMap 。查询哈希表比较节省性能\n\nvar buildTree = (preorder, inorder) => {\n  let map = new Map()\n  for (let i = 0; i  p_end) return null // preorder为空\n  let rootVal = preorder[p_start] // 根节点的值\n  let root = new TreeNode(rootVal) // 根节点\n  let mid = map.get(rootVal) // 根节点在inorder的位置\n  let leftNum = mid - i_start // 左子树的节点数\n\n  root.left = helper(preorder, p_start + 1, p_start + leftNum, inorder, i_start, mid - 1, map)\n  root.right = helper(preorder, p_start + leftNum + 1, p_end, inorder, mid + 1, i_end, map)\n  return root\n}\n\n附加\n另外一个巧妙的方法\n\n变量 pre 保存当前要构造的树的 root\n变量 in 保存 inorder 数组中可以成为 root 的数字们的开头那个\n对于当前要构造的树，有一个停止点 stop ，inorder 数组中第 in 项到第 stop 项是要构造的树的节点值们\n每次递归调用，都会确定出一个停止点，它告诉了子调用在哪里停止，把自己的根节点值作为左子树调用的停止点，自己的（父调用给下来的）停止点作为右子树的停止点\n\nvar buildTree = function(preorder, inorder) {\n    pre = i = 0\n    build = function(stop) {\n        if (inorder[i] != stop) {\n            var root = new TreeNode(preorder[pre++])\n            root.left = build(root.val)\n            i++\n            root.right = build(stop)\n            return root\n        }\n        return null\n    }\n    return build()\n};\n\n"},"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html":{"url":"normal/Tree&Graph/填充每个节点的下一个右侧节点指针.html","title":"填充每个节点的下一个右侧节点指针","keywords":"","body":"填充每个节点的下一个右侧节点指针\n\n思路\n"},"normal/Tree&Graph/二叉搜索树中第K小的元素.html":{"url":"normal/Tree&Graph/二叉搜索树中第K小的元素.html","title":"二叉搜索树中第 K 小的元素","keywords":"","body":"二叉搜索树中第K小的元素\n\n思路\n"},"normal/Tree&Graph/numIslands.html":{"url":"normal/Tree&Graph/numIslands.html","title":"岛屿数量","keywords":"","body":"岛屿数量\n\n思路\n"},"normal/backTracking/矩阵中的路径.html":{"url":"normal/backTracking/矩阵中的路径.html","title":"矩阵中的路径","keywords":"","body":"矩阵中的路径\n思路\n回溯其实就是纯暴力枚举，把所有情况列举下，如果列举到一半发现已经不符合要求了及时剪枝，并且把之前做出的选择撤销，比如本题如果列举的一条路径不符合要求，把之前访问过的位置全部改回原来的值。\n步骤如下：\n\n首先，要在矩阵中找字符串中的第一个字符，找到后进入递归\n对于已访问的位置，修改其值为'/'，访问完毕后要将值改回来，这是回溯的核心\n查找当前字符的周围字符，如果周围字符没有被访问过且与字符串的下一个字符相等，再次进入递归\n当索引 index 已经等于字符串长度时，说明已经找到了一条路径，返回 True\n只要找到一条路径就返回 true：if dfs 返回 True： 返回 True\n\nvar exist = function (board, word) {\n  var dx = [-1, 1, 0, 0]\n  var dy = [0, 0, -1, 1]\n  let m = board.length,\n    n = board[0].length\n  let charArr = word.split('')\n  for (let i = 0; i = 0 && nx = 0 && ny \n"},"normal/DP/LIS.html":{"url":"normal/DP/LIS.html","title":"最长上升子序列","keywords":"","body":"最长上升子字符串\nfunction lengthOfLIS(nums) {\n    var n = nums.length;\n    if (n == 0) {\n        return 0;\n    }\n    var dp = [];\n    var max = 1;\n    for (var i = 0; i \n"},"normal/DP/LCP.html":{"url":"normal/DP/LCP.html","title":"最长公共子序列","keywords":"","body":"最长公共子序列\n思路\n因为我们需要在两个字符串中扫描，所以是一个二维的动态规划问题\n\n首先我们定义 dp[m][n] 表示：S1[0...m] 和 S2[0...n] 的最长公共子序列的长度\n当 m 和 n 的值不同时，dp[m][n] 所表示的两个字符串的长度不同，S1[0...m] 和 S2[0...n] 的最长公共子序列的长度的值也就不同，dp[m - 1][n - 1] 即为题目所求结果\n当我们对比 text1[m] 和 text2[n] 的时候，存在两种情况：\n当 text1[m] === text2[n]时，说明 text1[m] 或者 text2[n] 对应的字符是最长公共子序列的一部分，所以有 dp[m][n] = 1 + dp[m-1][n-1]\n当 text1[m] !== text2[n]时，此时我们要看两个字符串分别单独往回撤一个字符串的对比情况，获取两者的最大值即可，所以有 dp[m][n] = Math.max(dp[m - 1][n], dp[m][n - 1], dp[m-1][n-1])\n上面两种情况即为状态转移方程\n初始值，即 base case 为：⾏索引为 0 或者列索引为 0 的时候，此时值为 0，即 dp[0][0...n] 和 dp[0...m][0] 的值都为 0\n\n/**\n * @param {string} text1\n * @param {string} text2\n * @return {number}\n * dp(m,n)表示：S1[0...m] 和 S2[0...n] 的最长公共子序列的长度\n * S1[m] == S[n]：dp(m,n) = 1 + dp(m - 1,n - 1)\n * dp(m,n) = max(dp(m - 1,n), dp(m,n - 1))\n */\nvar longestCommonSubsequence = function(text1, text2) {\n  const m = text1.length;\n  const n = text2.length;\n\n  // 初始化二维 dp 数组\n  const dp = new Array(m)\n  for (let i = 0; i \n"},"hard/string/最小覆盖子串.html":{"url":"hard/string/最小覆盖子串.html","title":"最小覆盖子串","keywords":"","body":"最小覆盖子串\n滑动窗口\nvar minWindow = function (s, t) {\n  let need = new Map()\n  let window = new Map()\n  for (let i = 0; i \n"},"hard/DP/戳气球.html":{"url":"hard/DP/戳气球.html","title":"戳气球","keywords":"","body":"戳气球\n思路\n\n回溯法\n\n会超过时间限制\nvar maxCoins = function (nums) {\n  let res = Number.MIN_VALUE\n  backtrack(nums, 0)\n  return res\n  // 回溯法，状态树很大\n  function backtrack(nums, score) {\n    if (nums.length == 0) {\n      res = Math.max(res, score)\n      return\n    }\n    for (let i = 0, n = nums.length; i = n ? 1 : nums[i + 1])\n      let tempNums = [].concat(nums)\n      // 做选择 在 nums 中删除元素 nums[i]\n      nums.splice(i, 1)\n      // 递归回溯\n      backtrack(nums, score + point)\n      // 撤销选择\n      nums = [...tempNums]\n    }\n  }\n}\n\n\n动态规划\n\nvar maxCoins = function (nums) {\n  let n = nums.length\n  // 添加两侧的虚拟气球\n  let points = [1, ...nums, 1]\n  let dp = Array.from(Array(n + 2), () => Array(n + 2).fill(0))\n  // 最后一行开始遍历,从下往上\n  for (let i = n; i >= 0; i--) {\n    // 从左往右\n    for (let j = i + 1; j \n作者：fe-lucifer\n链接：https://leetcode-cn.com/problems/burst-balloons/solution/dong-tai-gui-hua-js312-chuo-qi-qiu-by-fe-lucifer/\n来源：力扣（LeetCode）\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n"},"hard/DP/最短编辑距离.html":{"url":"hard/DP/最短编辑距离.html","title":"最短编辑距离","keywords":"","body":"最短编辑距离\n思路\n官方题解\nfunction minDistance(word1, word2) {\n  var n = word1.length\n  var m = word2.length\n\n  // 有一个字符串为空串\n  if (n * m == 0) {\n    return n + m\n  }\n\n  // DP 数组\n  var D = []\n  for (let i = 0; i \n"},"byteDance/string/字符串的排列.html":{"url":"byteDance/string/字符串的排列.html","title":"字符串的排列","keywords":"","body":"字符串排列\n\n思路\nhttps://leetcode-cn.com/problems/permutation-in-string/solution/zi-fu-chuan-de-pai-lie-by-leetcode-solut-7k7u/\n滑动窗口\nvar checkInclusion = function (s1, s2) {\n  const n = s1.length,\n    m = s2.length\n  if (n > m) {\n    return false\n  }\n  const cnt1 = new Array(26).fill(0)\n  const cnt2 = new Array(26).fill(0)\n  for (let i = 0; i \n后续还有优化，具体看上面链接\n"},"byteDance/string/字符串相乘.html":{"url":"byteDance/string/字符串相乘.html","title":"字符串相乘","keywords":"","body":"字符串相乘\n\n思路\n没思路，直接上答案\nconst multiply = (num1, num2) => {\n  const len1 = num1.length\n  const len2 = num2.length\n  const pos = new Array(len1 + len2).fill(0)\n\n  for (let i = len1 - 1; i >= 0; i--) {\n    const n1 = +num1[i]\n    for (let j = len2 - 1; j >= 0; j--) {\n      const n2 = +num2[j]\n      const multi = n1 * n2\n      const sum = pos[i + j + 1] + multi\n\n      pos[i + j + 1] = sum % 10\n      pos[i + j] += (sum / 10) | 0\n    }\n  }\n  while (pos[0] == 0) {\n    pos.shift()\n  }\n  return pos.length ? pos.join('') : '0'\n}\n\n这么写也可以\nconst multiply = (num1, num2) => {\n  const len1 = num1.length\n  const len2 = num2.length\n  const pos = new Array(len1 + len2).fill(0)\n\n  for (let i = len1 - 1; i >= 0; i--) {\n    const n1 = +num1[i]\n    for (let j = len2 - 1; j >= 0; j--) {\n      const n2 = +num2[j]\n      const multi = n1 * n2\n      const sum = pos[i + j + 1] + multi\n\n      pos[i + j + 1] = sum % 10\n      pos[i + j] += (sum / 10) | 0\n    }\n  }\n  let resStr = pos.join('')\n  while (resStr[0] == '0') {\n    resStr = resStr.substring(1)\n  }\n  return resStr.length ? resStr : '0'\n}\n\n"},"byteDance/string/翻转字符串里的单词.html":{"url":"byteDance/string/翻转字符串里的单词.html","title":"翻转字符串里的单词","keywords":"","body":"翻转字符串里的单词\n思路\n比较简单，终于自己写对了\n/**\n * @param {string} s\n * @return {string}\n */\nfunction reverseWords(s) {\n  let str = s.trim()\n  let strArr = str.split(' ').filter((element) => {\n    return element != ''\n  })\n  return strArr.reverse().join(' ')\n}\n\n后续再看看题解里的大神怎么解的\n"},"byteDance/string/简化路径.html":{"url":"byteDance/string/简化路径.html","title":"简化路径","keywords":"","body":"简化路径\n思路\n/**\n * @param {string} path\n * @return {string}\n */\nvar simplifyPath = function (path) {\n  const dir = path.split('/'),\n    stack = []\n  for (const i of dir) {\n    if (i === '.' || i === '') continue\n    if (i === '..') {\n      stack.length > 0 ? stack.pop() : null\n      continue\n    }\n    stack.push(i)\n  }\n  return '/' + stack.join('/')\n}\n\n"},"byteDance/string/复原IP地址.html":{"url":"byteDance/string/复原IP地址.html","title":"复原 IP 地址","keywords":"","body":"复原 IP 地址\n思路\nhttps://leetcode-cn.com/problems/restore-ip-addresses/solution/fu-yuan-ipdi-zhi-by-leetcode-solution/\n回溯算法,看的题解\nvar restoreIpAddresses = function (s) {\n  const SEG_COUNT = 4\n  const segments = new Array(SEG_COUNT)\n  const ans = []\n\n  const dfs = (s, segId, segStart) => {\n    // 如果找到了 4 段 IP 地址并且遍历完了字符串，那么就是一种答案\n    if (segId === SEG_COUNT) {\n      if (segStart === s.length) {\n        ans.push(segments.join('.'))\n      }\n      return\n    }\n\n    // 如果还没有找到 4 段 IP 地址就已经遍历完了字符串，那么提前回溯\n    if (segStart === s.length) {\n      return\n    }\n\n    // 由于不能有前导零，如果当前数字为 0，那么这一段 IP 地址只能为 0\n    if (s.charAt(segStart) === '0') {\n      segments[segId] = 0\n      dfs(s, segId + 1, segStart + 1)\n    }\n\n    // 一般情况，枚举每一种可能性并递归\n    let addr = 0\n    for (let segEnd = segStart; segEnd  0 && addr \n"},"byteDance/array&sort/岛屿的最大面积.html":{"url":"byteDance/array&sort/岛屿的最大面积.html","title":"岛屿的最大面积","keywords":"","body":"岛屿的最大面积\nDFS\n这道题比较简单，好好理解下 DFS\nclass Solution {\n    public int maxAreaOfIsland(int[][] grid) {\n        int ans = 0;\n        for (int i = 0; i \n"},"byteDance/array&sort/搜索旋转排序数组.html":{"url":"byteDance/array&sort/搜索旋转排序数组.html","title":"搜索旋转排序数组","keywords":"","body":"搜索旋转排序数组\nfunction search(nums, target) {\n  var n = nums.length\n  if (n == 0) {\n    return -1\n  }\n  if (n == 1) {\n    return nums[0] == target ? 0 : -1\n  }\n  var l = 0,\n    r = n - 1\n  while (l \nvar search = function (nums, target) {\n  // 时间复杂度：O(logn)\n  // 空间复杂度：O(1)\n  // [6,7,8,1,2,3,4,5]\n  let start = 0\n  let end = nums.length - 1\n\n  while (start > 1)\n    if (nums[mid] === target) return mid\n\n    // [start, mid]有序\n\n    // ️⚠️注意这里的等号\n    if (nums[mid] >= nums[start]) {\n      //target 在 [start, mid] 之间\n\n      // 其实target不可能等于nums[mid]， 但是为了对称，我还是加上了等号\n      if (target >= nums[start] && target = nums[mid] && target \n"},"byteDance/array&sort/最长连续递增序列.html":{"url":"byteDance/array&sort/最长连续递增序列.html","title":"最长连续递增序列","keywords":"","body":"最长连续递增序列\n这道题有个姊妹篇，LIS。关键的状态转移方程是： dp[i] = Math.max(dp[i], dp[j] + 1)\nfunction lengthOfLIS(nums) {\n  var n = nums.length\n  if (n == 0) {\n    return 0\n  }\n  var dp = []\n  var max = 1\n  for (var i = 0; i \n那这里是要连续的，那就改下就好了,不需要定义 j 去查找了\ndp[i] = Math.max(dp[i], dp[i-1] + 1)\nfunction findLengthOfLCIS(nums) {\n  var n = nums.length\n  if (n == 0) {\n    return 0\n  }\n  var dp = []\n  var max = 1\n  for (var i = 0; i \n"},"byteDance/array&sort/数组中的第K个最大元素.html":{"url":"byteDance/array&sort/数组中的第K个最大元素.html","title":"数组中的第 K 个最大元素","keywords":"","body":"数组中的第 K 个最大元素\n思路，快排的同时进行优化\n\n找到了 k 就返回\n否则丢弃一边\nrandomPartition\n\nclass Solution {\n    Random random = new Random();\n\n    public int findKthLargest(int[] nums, int k) {\n        return quickSelect(nums, 0, nums.length - 1, nums.length - k);\n    }\n\n    public int quickSelect(int[] a, int l, int r, int index) {\n        int q = randomPartition(a, l, r);\n        if (q == index) {    //1.关键就在这里，找到了k\n            return a[q];\n        } else {\n            return q \n堆排序。好好研究下\nclass Solution {\n    public int findKthLargest(int[] nums, int k) {\n        int heapSize = nums.length;\n        buildMaxHeap(nums, heapSize);\n        for (int i = nums.length - 1; i >= nums.length - k + 1; --i) {\n            swap(nums, 0, i);\n            --heapSize;\n            maxHeapify(nums, 0, heapSize);\n        }\n        return nums[0];\n    }\n\n    public void buildMaxHeap(int[] a, int heapSize) {\n        for (int i = heapSize / 2; i >= 0; --i) {\n            maxHeapify(a, i, heapSize);\n        }\n    }\n\n    public void maxHeapify(int[] a, int i, int heapSize) {\n        int l = i * 2 + 1, r = i * 2 + 2, largest = i;\n        if (l  a[largest]) {\n            largest = l;\n        }\n        if (r  a[largest]) {\n            largest = r;\n        }\n        if (largest != i) {\n            swap(a, i, largest);\n            maxHeapify(a, largest, heapSize);\n        }\n    }\n\n    public void swap(int[] a, int i, int j) {\n        int temp = a[i];\n        a[i] = a[j];\n        a[j] = temp;\n    }\n}\n\n"},"byteDance/array&sort/最长连续序列.html":{"url":"byteDance/array&sort/最长连续序列.html","title":"最长连续序列","keywords":"","body":"最长连续序列\n思路\n比较简单了\n先排序，快排是 logN\n整体时间复杂度是 O(n)\nvar longestConsecutive = function (nums) {\n  if (nums.length == 0) return 0\n  nums = nums.sort((a, b) => a - b)\n  var dp = [],\n    ans = 1\n  dp[0] = 1\n  for (var i = 0; i \nvar longestConsecutive = function (nums: number[]): number {\n  let num_set = new Set()\n  for (const num of nums) {\n    num_set.add(num)\n  }\n\n  let longestStreak = 0\n\n  for (const num of num_set) {\n    if (!num_set.has(num - 1)) {\n      let currentNum = num\n      let currentStreak = 1\n\n      while (num_set.has(currentNum + 1)) {\n        currentNum += 1\n        currentStreak += 1\n      }\n\n      longestStreak = Math.max(longestStreak, currentStreak)\n    }\n  }\n\n  return longestStreak\n}\n\n"},"tecent/problems/题集.html":{"url":"tecent/problems/题集.html","title":"题集","keywords":"","body":"题集\n最小路径和\n\n思路\n核心思路：\n\nDP 方程\n当前项最小路径和 = 当前项值 + 上项或左项中的最小值\ngrid[i][j] += Math.min( grid[i - 1][j], grid[i][j - 1] )\n\n边界处理\ngrid 的第一行与第一列 分别没有上项与左项 故单独处理计算起项最小路径和\n计算第一行\n\n\nfor (let j = 1; j \n计算第一列\nfor (let i = 1; i \n/**\n * @param {number[][]} grid\n * @return {number}\n */\nvar minPathSum = function (grid) {\n  let row = grid.length,\n    col = grid[0].length\n\n  // calc boundary\n  for (let i = 1; i \n大数相加\nlet a = '9007199254740991'\nlet b = '1234567899999999999'\n\nfunction add(a, b) {\n  //取两个数字的最大长度\n  let maxLength = Math.max(a.length, b.length)\n  //用0去补齐长度\n  a = a.padStart(maxLength, 0) //\"0009007199254740991\"\n  b = b.padStart(maxLength, 0) //\"1234567899999999999\"\n  //定义加法过程中需要用到的变量\n  let t = 0\n  let f = 0 //\"进位\"\n  let sum = ''\n  for (let i = maxLength - 1; i >= 0; i--) {\n    t = parseInt(a[i]) + parseInt(b[i]) + f\n    f = Math.floor(t / 10)\n    sum = (t % 10) + sum\n  }\n  if (f == 1) {\n    sum = '1' + sum\n  }\n  return sum\n}\n\n买股票最佳时机\n只能交易一次的\n\n暴力解决\n\nvar maxProfit = function (prices) {\n  var maxprofit = 0\n  for (var i = 0; i  maxprofit) maxprofit = profit\n    }\n  }\n  return maxprofit\n}\n\n只关心 i 前面元素里最小的 minprice 是多少，然后迭代当前 price[i] - minprice 得到最大值\nlet maxProfit = function (prices) {\n  let max = 0,\n    minprice = prices[0]\n  for (let i = 1; i \n可交易多次的\nvar maxProfit = function (prices) {\n  let money = 0\n  let buy = prices[0]\n  for (let price of prices) {\n    if (price > buy) {\n      money += price - buy\n    }\n    buy = price\n  }\n  return money\n}\n\n数组题\n[1,1,3,3,2,2,4] 找出重复的数字\nhttps://johnzhu12.github.io/easy/Array/只出现一次的数字.html\n[0,0,0,1,1,1,2,2,3,3,4] 找出不重复的数字有多少个，并把数组前 N 项改成不重复的数字\nvar findSingle = function (arr) {\n  var len = arr.length,\n    sum = 0\n  if (!arr || len == 0) return 0\n  var sum = 0\n  var numMap = {}\n  for (var i = 0; i \n数组分成和等值的两个数组\n数组可否分成和相等的三个数组\n/**\n * @param {number[]} arr\n * @return {boolean}\n */\nvar canThreePartsEqualSum = function (arr) {\n  let sum = arr.reduce((a, b) => a + b)\n  let num = 3\n  let temp = 0\n  for (let a of arr) {\n    temp += a\n    if (temp === sum / 3) num--, (temp = 0)\n  }\n  return num \n那两个就是把 num 改成 2\n八皇后问题\nclass Queen {\n  constructor(num) {\n    this.num = num\n    this.arr = []\n    this.result = []\n    this.initList()\n    this.buildList(this.arr, 0)\n  }\n\n  initList() {\n    let num = this.num\n    for (let i = 0; i = 0 && j = 0 && j >= 0; i--, j--) {\n      if (list[i][j] === 1) return false\n    }\n    return true\n  }\n}\nconst queen = new Queen(8)\nconsole.log(queen.result)\n\n-优化\n其实解法跟之前一样，上面用了二维矩阵来记录位置，因为已经确定同一行不可能存在 2 个皇后实际上只用一维数组就表示：list[row] = col;减少空间消耗\nisSafe 判断和之前不同\nisSafe(row) {\n  for (let i = 0; i \n完整代码\nclass Queen {\n  constructor(num) {\n    this.num = num\n    this.arr = []\n    this.result = []\n    this.initList()\n    this.buildList(0)\n  }\n\n  initList() {\n    let num = this.num\n    for (let i = 0; i \n二分法递归\nvar search = function (arr, low, high, key) {\n  if (high  arr[index]) {\n    return search(arr, index + 1, high, key)\n  } else if (key \n生成随机数组\nfunction genArray(n) {\n  let a = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22] //生成的随机数的集合\n  let res = []\n  for (let i = 0; i \n改下：\nfunction genArray(n) {\n  let arr = []\n  for (var i = 1; i \n输入 n 和 m，找出 1-n 中所有相加等于 m 的可能\nfunction findSumEq(n, m) {\n  if (n == 0) return\n  let arr = []\n  for (var i = 1; i \n射击气球\nhttps://leetcode-cn.com/problems/burst-balloons/solution/dong-tai-gui-hua-js312-chuo-qi-qiu-by-fe-lucifer/\n\n回溯法模板\n\nvar maxCoins = function (nums) {\n  let n = nums.length\n  // 添加两侧的虚拟气球\n  let points = [1, ...nums, 1]\n  let dp = Array.from(Array(n + 2), () => Array(n + 2).fill(0))\n  // 最后一行开始遍历,从下往上\n  for (let i = n; i >= 0; i--) {\n    // 从左往右\n    for (let j = i + 1; j \n暴力递归\n"},"alibaba/interview/interview.html":{"url":"alibaba/interview/interview.html","title":"面试题","keywords":"","body":"阿里面试一面题目\n\n123456 => 123,456\n//\nreplace(/\\d{3}/g,',')\n\n看了下答案\nstr.replace(/\\B(?=(?:\\d{3})+\\b)/g, ',')\n\n\n例如：str = '1234',输出结果为'1,234'\n\\B 匹配不是单词开头或者结束的位置\n(?=exp)匹配 exp 前面的位置\n(?:exp)匹配 exp，不捕获匹配的文本，也不给此分组分配组号\n\\b 代表单词分界位置\n\n\n数组的笛卡尔积\n\n[[0,1],[2,3,4],[5,6]] => [[0,2,5],[0,2,6],[1,2,5]...]\nreduce:\nfunction decare(nums) {\n  let res = nums.reduce((last, el) => {\n    const arr = []\n    // last：上次运算结果\n    // el：数组中的当前元素\n    last.forEach((e1) => {\n      el.forEach((e2) => {\n        arr.push(e1 + '_' + e2)\n      })\n    })\n    return arr\n  })\n  res = res.map((item) => item.split('_'))\n  return res\n}\n\n回溯法,不要想复杂了，不需要置为*等手段，并不会走回头路\nfunction decare(nums) {\n  let len = nums.length\n  let res = []\n  let track = []\n  function backtrace(nums, row) {\n    if (row == len && track.length == len) {\n      res.push([...track])\n      return\n    }\n    let n = nums[row].length //当前列的长度\n    for (var i = 0; i \n\naaabbcccddccaaaaaaandw a => 7 c =>5\n\nfunction findMaxLen(str, target) {\n  let len = str.length\n  let index = 0\n  let count = 0\n  let res = 0\n  let hintIndex = 0\n  while (index \n"},"程序员面试金典/数组与字符串/字符是否唯一.html":{"url":"程序员面试金典/数组与字符串/字符是否唯一.html","title":"字符是否唯一","keywords":"","body":"判断字符是否唯一\n思路\n\n用 map 过一遍，如果出现 2 以上的就不是\n不使用数据结构，js 对象不算吧(⊙︿⊙)\n\n/**\n * @param {string} astr\n * @return {boolean}\n */\nvar isUnique = function (astr) {\n  let n = astr.length\n  if (n == 0) return true\n  let map = {}\n  for (let i = 0; i \n\n位运算\n\n这是限定字符都是 a 以上的写法，如果是 acii 字符集，是 128 个 bit 来比较\nhttps://leetcode-cn.com/problems/is-unique-lcci/solution/javascriptli-yong-wei-yun-suan-by-lhz960904/\n/**\n * @param {string} astr\n * @return {boolean}\n */\nvar isUnique = function (astr) {\n  let mark = 0\n  for (let char of astr) {\n    // 需要左移的位数\n    const c = char.charCodeAt() - 97\n    // mark 与 左移结果进行与运算，如果不是0，说明其中有一位都是1，说明重复\n    if ((mark & (1 \n贴个评论\n如果我是面试官，我会希望看到什么？\n\n可能有点偏题，毕竟这里主要就是做题的地方。。\n\n如果我是面试官，会考虑主要考察什么，就我的工作经验看，大多数主要是招聘工程师的，面试者如果什么问题都没有，直接写个二重循环搞定，会首先给个50分，如果能写点判断字符串是否为null的，60分。\n\n直接上手什么bitset，什么位运算的，我会先问他，题目中有没有交代字符串的字符一定是26个英文字母？如果是unicode环境，你是不是要准备2^16/8个字节的空间？在实际项目中，风险可控，结果可期更重要，绝大多数时候不在乎那点时间和资源。\n\n所以我期望面试者不要急于解答，我希望他先问我问题：\n\n1. 字符串的字符范围，如果我告诉他，26个小写英文字母，那可能一开头直接判断如果字符长度>26, 直接返回False，做到这一点的，80分\n\n2. 如果我告诉他ascii字符集，然后他的代码里有边界检查，并且针对不同的范围有不同的侧重点，比如说ascii字符集，那也就是128个可能性，16个字节的位运算比较好\n\n3. 如果我告诉他是unicode，没有字符范围，老老实实排序再判断是比较符合我对工程师的要求的，因为算法性能稳定，没有额外资源要求，一眼看出没什么不可预见的风险，100分。\n就是说，有些东西，没想到或者一时没想到根本不是问题，日常工作中稍微提示一下即可，但是缜密的思维对于程序员来说更重要\n\n"},"程序员面试金典/数组与字符串/判定是否互为字符重排.html":{"url":"程序员面试金典/数组与字符串/判定是否互为字符重排.html","title":"判定是否互为字符重排","keywords":"","body":"判定是否互为字符重排\n思路\n\n两个排序后判断\n首先排序的复杂度 nlgn\n总复杂度 nlgn\n\n/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\nvar CheckPermutation = function (s1, s2) {\n  if (s1.length != s2.length) return false\n  return s1.split('').sort().join() == s2.split('').sort().join()\n}\n\n\n用 map\nmap 统计下，然后遍历一遍，看是否都相等\n\nvar CheckPermutation = function (s1, s2) {\n  if (s1.length != s2.length) return false\n  var map1 = {},\n    map2 = {}\n\n  for (var i = 0; i \n"},"程序员面试金典/数组与字符串/URL化.html":{"url":"程序员面试金典/数组与字符串/URL化.html","title":"URL 化","keywords":"","body":"URL 化\n思路\n/**\n * @param {string} S\n * @param {number} length\n * @return {string}\n */\nvar replaceSpaces = function (S, length) {\n  return encodeURI(S.substring(0, length))\n}\n\nvar replaceSpaces = function (S, length) {\n  return S.substr(0, length).split(' ').join('%20')\n}\n\nvar replaceSpaces = function (S, length) {\n  return S.substr(0, length).replace(/\\s/g, '%20')\n}\n\n"},"程序员面试金典/数组与字符串/回文排列.html":{"url":"程序员面试金典/数组与字符串/回文排列.html","title":"回文排列","keywords":"","body":"回文排列\n思路\n看注释，就是 map 保存，看是否都是偶数对，除了中间一个元素\n/**\n * @param {string} s\n * @return {boolean}\n */\nvar canPermutePalindrome = function (s) {\n  let n = s.length\n  if (n == 0) return false\n  var map = {}\n  for (var i = 0; i \n看到题解里的，一直在增加删除对应的 key，本质一样\n/**\n * @param {string} s\n * @return {boolean}\n */\nvar canPermutePalindrome = function (s) {\n  let obj = {}\n  for (let i = 0; i \n位运算\nclass Solution:\n    def canPermutePalindrome(self, s: str) -> bool:\n        result = 0\n        for c in s:\n            result ^= 1\nfunction canPermutePalindrome(s) {\n  var result = 0\n  for (let c of s) {\n    result ^= 1 \n最骚的是(result & (result - 1)) == 0，看了半天。上面的好理解鞋\n\n1. 左移字符对应的 acii 码位数，相当于 map 保存当前的字符 bit 对应位 1。\n2. 然后异或就是偶数的话和上面一样消为 0 最后 result 就留下单独出现字符对应位数保存字节。\n   比如最后单独出现一个 A,那就是右数第 66 位上是 1(从 0 开始)，其他都是 0。\n   如果有其他单独位出现的，就会不止一个 1 出现，accii 码总共 128，也就是 16 个字节\n3. 那理解最后一句就是，当 128 位里只有只出现一个 1 的情况下(result & (result - 1))才等于 0\n   比如当第 66 位是 1，那`result - 1`就会是 66 位变成 0，往右的 65 位变成 1。&预算也就是 0 了。\n   其他情况下(有多个 1)最高位`result`和`result-1`都会是 1(不需要减最高位，后面位的任何一个 1 就够减 1 了)，最后&结果肯定不为 0 啦\n\n"},"程序员面试金典/数组与字符串/一次编辑.html":{"url":"程序员面试金典/数组与字符串/一次编辑.html","title":"一次编辑","keywords":"","body":"一次编辑\n思路\n\n注释里有我的全部思路，这题提交错了好几次，做的很糟\n\nvar oneEditAway = function (first, second) {\n  let n1 = first.length\n  let n2 = second.length\n  if (Math.abs(n1 - n2) > 1) return false\n  if (first == second) return true\n  if (n1 == n2) {\n    //这种情况只能有一个字符不一样，并且注意要顺序一致\n    let count = 0\n    for (let i = 0; i \n题解里看到的:\nhttps://leetcode-cn.com/problems/one-away-lcci/solution/shu-ju-jie-gou-he-suan-fa-duo-chong-shi-kdo7j/\n\n给一次试错的机会，如果一次匹配失败我们还要继续匹配，如果再次失败就返回 false。整个匹配下来如果只失败一次或者没有失败，返回 true。\n\n    public boolean oneEditAway(String first, String second) {\n        int length1 = first.length();\n        int length2 = second.length();\n        //因为只有一次编辑的机会，如果两个字符串长度相差大于1，\n        //直接返回false\n        if (Math.abs(length1 - length2) > 1)\n            return false;\n        //给他一次不匹配的机会\n        boolean noMatch = true;\n        for (int i = 0, j = 0; i  length2)\n                    j--;\n                else\n                    i--;\n            }\n        }\n        return true;\n    }\n\n\n这个应该最好理解，如果匹配失败，我们只需要比较后面的字符串相等即可，来看下代码\n\n    public boolean oneEditAway(String first, String second) {\n        int length1 = first.length();\n        int length2 = second.length();\n        //因为只有一次编辑的机会，如果两个字符串长度相差大于1，\n        //直接返回false\n        if (Math.abs(length1 - length2) > 1)\n            return false;\n        for (int i = 0, j = 0; i  length2)\n                return first.substring(i).equals(second.substring(i - 1));\n            return first.substring(i - 1).equals(second.substring(i));\n        }\n        return true;\n    }\n\n\n动态规划\n\n这题可以参照编辑距离写的题解，第 72 题要求的是编辑距离，我们这里也要使用第 72 题的答案，直接判断最后的编辑距离是否小于等于 1 即可，具体分析就不在写了，我们来看下代码\npublic static boolean oneEditAway(String word1, String word2) {\n        int length1 = word1.length();\n        int length2 = word2.length();\n        int dp[][] = new int[length1 + 1][length2 + 1];\n        for (int i = 0; i \n"},"程序员面试金典/数组与字符串/字符串压缩.html":{"url":"程序员面试金典/数组与字符串/字符串压缩.html","title":"字符串压缩","keywords":"","body":"字符串压缩\n思路\n感觉比较简单这题，一开始想用 map 统计，然后发现是要按顺序的，不能间隔开的也在一起。具体看题目里的注释\n，关键注意最后还要加上一次。\nvar compressString = function (S) {\n  var n = S.length\n  if (n == 0) return ''\n  var index = 1\n  var s2 = '',\n    count = 1\n  while (index \n题解里有个双指针的,本质上和上面一样，就是用了 i 变量来保存上一个相同字符的开始位置\n/**\n * @param {string} S\n * @return {string}\n */\nvar compressString = function (S) {\n  if (S.length == 0) return ''\n  let ans = ''\n  let i = 0,\n    j = 0 // 精妙...\n  while (j \n"},"程序员面试金典/数组与字符串/旋转矩阵.html":{"url":"程序员面试金典/数组与字符串/旋转矩阵.html","title":"旋转矩阵","keywords":"","body":"旋转矩阵\n思路\n这题我貌似之前做过，反正旋转矩阵先转置下，转置就是 swap(maxtrix[i][j],maxtrix[j][i])。注意的地方就是 j 要等于 i+1。\n因为都从 0 开始的话，i=0,j=1,然后 j=0,i=1。swap 就在做无用功了\nvar rotate = function (matrix) {\n  var m = matrix.length\n  var n = matrix[0].length\n  for (var i = 0; i  arr.reverse())\n  return matrix\n}\n\n"},"程序员面试金典/数组与字符串/零矩阵.html":{"url":"程序员面试金典/数组与字符串/零矩阵.html","title":"零矩阵","keywords":"","body":"零矩阵\n思路\n这题我好像也做过，这几题都是在原先简单那个 tag 里.\n首先找到有 0 的行和列，然后再遍历一遍，把相应的行和列置为 0\nvar setZeroes = function (matrix) {\n  var m = matrix.length\n  var n = matrix[0].length\n  var map = {\n    row: {},\n    col: {}\n  }\n  for (var i = 0; i \n好吧，效率奇差，但是好歹写了一个答案。哈哈哈哈。主要是第二遍不需要遍历所有的行和列，只需要找到 map 里的行和列，对应的置 0\n改写下\n//行清零\nfor (let row in map.row) {\n  row = Number(row)\n  for (var j = 0; j \n题解里有个答案其实本质一样，但是写的好多了,用了 set，并且置 0 那里就是没有全遍历\n/**\n * @param {number[][]} matrix\n * @return {void} Do not return anything, modify matrix in-place instead.\n */\nvar setZeroes = function (matrix) {\n  let rows = new Set(),\n    cols = new Set()\n  for (let row = 0; row \n"},"程序员面试金典/数组与字符串/字符串轮转.html":{"url":"程序员面试金典/数组与字符串/字符串轮转.html","title":"字符串轮转","keywords":"","body":"字符串轮转\n提示：\n字符串长度在[0, 100000]范围内。\n说明:\n你能只调用一次检查子串的方法吗？\n思路\n不一定要一个个旋转，可以以一个 index 遍历字符，然后分割两个子串，然后反向拼接下\nvar isFlipedString = function (s1, s2) {\n  var m = s1.length\n  var n = s2.length\n  if (s1 == s2) return true //包括了两个空字符串情况\n  if (m != n) return false //包括了其中一个为空字符串情况\n  //只有长度相等时，才能继续\n  var index = 0\n  while (index \n看题解，我震惊了\n先判断长度是否相同，不相同返回 false，其次拼接两个 s2，则如果是由 s1 旋转而成，则拼接后的 s 一定包含 s1.\nvar isFlipedString = function (s1, s2) {\n  if (s1.length != s2.length) return false\n  var s = s2 + s2\n  return s.indexOf(s1) >= 0\n}\n\n"},"程序员面试金典/链表/移除重复节点.html":{"url":"程序员面试金典/链表/移除重复节点.html","title":"移除重复节点","keywords":"","body":"移除重复节点\n思路\n\n首先想到用个缓存 set\n\n链表确实有点绕，不太熟悉，提交错了好几次\n关键是边界要记得 几个标注//注意！ 的地方\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar removeDuplicateNodes = function (head) {\n  if (!head || !head.next) return head //注意！\n  var set = new Set()\n  var cur = head.next,\n    prev = head\n  set.add(prev.val)\n  while (cur.next) {\n    if (!set.has(cur.val)) {\n      //没有的话\n      set.add(cur.val)\n    } else {\n      prev.next = cur.next //把当前节点删掉\n      cur = cur.next //注意\n      continue\n    }\n    cur = cur.next //往后走\n    prev = prev.next //往后走\n  }\n  if (set.has(cur.val)) prev.next = null //注意！\n\n  return head\n}\n\n2.不用缓存\n看了官方题解，两重循环\n// [1, 2, 3, 3, 2, 1]\nclass Solution {\n    public ListNode removeDuplicateNodes(ListNode head) {\n        ListNode ob = head;\n        while (ob != null) {\n            ListNode oc = ob;\n            while (oc.next != null) {\n                if (oc.next.val == ob.val) {\n                    oc.next = oc.next.next;\n                } else {\n                    oc = oc.next;\n                }\n            }\n            ob = ob.next;\n        }\n        return head;\n    }\n}\n\n时间复杂度：O(n^2)\n"},"程序员面试金典/链表/返回倒数第k个节点.html":{"url":"程序员面试金典/链表/返回倒数第k个节点.html","title":"返回倒数第 k 个节点","keywords":"","body":"返回倒数第 k 个节点\n思路\n\n这题比较简单，首先双指针，第一个先走 K 步，然后第二个从头部一起走，当第一个走到结尾时，第二个就在倒数第 K 个位置\n\nvar kthToLast = function (head, k) {\n  var first = head,\n    second = head\n  while (k-- > 0) {\n    first = first.next //往后走k步\n  }\n  while (first.next) {\n    first = first.next //往后走\n    second = second.next\n  }\n  return second.val\n}\n\n\n当然还有另一种比较低效率的方式，两遍遍历，知道整个链表长度也可以\n\nvar kthToLast = function (head, k) {\n  var pointer = head,\n    count = 1\n\n  //计算下总长度\n  while (pointer.next) {\n    pointer = pointer.next\n    count++\n  }\n  pointer = head //重新置为head\n  for (var i = 0; i \n"},"程序员面试金典/链表/分割链表.html":{"url":"程序员面试金典/链表/分割链表.html","title":"分割链表","keywords":"","body":"分割链表\n思路\nvar partition = function (head, x) {\n  let small = new ListNode(0)\n  const smallHead = small\n  let large = new ListNode(0)\n  const largeHead = large\n  while (head !== null) {\n    if (head.val \n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @param {number} x\n * @return {ListNode}\n */\nvar partition = function (head, x) {\n  if (!head) return null\n\n  let less = {},\n    more = {},\n    p = less,\n    q = more,\n    cur = head\n\n  while (cur) {\n    if (cur.val \n链接：https://leetcode-cn.com/problems/partition-list-lcci/solution/fen-ge-lian-biao-by-leetcode-solution-iohj/\n"},"程序员面试金典/链表/链表求和.html":{"url":"程序员面试金典/链表/链表求和.html","title":"链表求和","keywords":"","body":"链表求和\n思路\n这就是大数相加链表版\nvar addTwoNumbers = function (l1, l2) {\n  var f = 0 //进位\n  var sum = 0\n  var res = new ListNode(0)\n  var dumyHead = res\n  //都走到最后一个节点\n  while (l1 || l2) {\n    var l1Val = l1 ? l1.val : 0\n    var l2Val = l2 ? l2.val : 0\n    sum = l1Val + l2Val + f\n    f = Math.floor(sum / 10)\n    res.next = new ListNode(sum % 10)\n\n    //往后走\n    if (l1) l1 = l1.next\n    if (l2) l2 = l2.next\n    res = res.next //null\n  }\n\n  if (f) res.next = new ListNode(f)\n  return dumyHead.next\n}\n\n如果正向存放，那就要翻转下\nconst reverse = function (node) {\n  let n = null\n  while (node) {\n    let temp = node.next\n    node.next = n\n    n = node\n    node = temp\n  }\n  return n\n}\nlet p1 = reverse(l1)\nlet p2 = reverse(l2)\n\n"},"程序员面试金典/链表/回文链表.html":{"url":"程序员面试金典/链表/回文链表.html","title":"回文链表","keywords":"","body":"回文链表\n进阶：\n你能否用 O(n) 时间复杂度和 O(1) 空间复杂度解决此题？\n思路\n\n最粗暴的方式就是保存到字符串或数组里，看是不是回文字符串\n\nvar isPalindrome = function (head) {\n  var p = head\n  if (!p || !p.next) return true //一个节点是回文\n  var arr = []\n  while (p) {\n    arr.push(p.val)\n    p = p.next\n  }\n  return isPalindromeStr(arr)\n}\nfunction isPalindromeStr(arr) {\n  let s1 = arr.join('')\n  let s2 = arr.reverse().join('')\n  console.log(s1, s2)\n  return s1 == s2\n}\n\n判断数组是否是回文，也可以这样判断\nfor (let i = 0, j = arr.length - 1; i \n\n避免使用 O(n) 额外空间的方法就是改变输入。\n\nhttps://leetcode-cn.com/problems/palindrome-linked-list-lcci/solution/hui-wen-lian-biao-by-leetcode-solution-6cp3/\n翻转后半部分，注意奇数偶数节点翻转后半部分不影响(翻转前半部分就要注意)\n1->2->1 => 1->2\nconst reverseList = (head) => {\n  let prev = null\n  let curr = head\n  while (curr !== null) {\n    let nextTemp = curr.next\n    curr.next = prev\n    prev = curr\n    curr = nextTemp\n  }\n  return prev\n}\n\nconst endOfFirstHalf = (head) => {\n  let fast = head\n  let slow = head\n  while (fast.next !== null && fast.next.next !== null) {\n    fast = fast.next.next\n    slow = slow.next\n  }\n  return slow\n}\n\nvar isPalindrome = function (head) {\n  if (head == null) return true\n\n  // 找到前半部分链表的尾节点并反转后半部分链表\n  const firstHalfEnd = endOfFirstHalf(head)\n  const secondHalfStart = reverseList(firstHalfEnd.next)\n\n  // 判断是否回文\n  let p1 = head\n  let p2 = secondHalfStart\n  let result = true\n  while (result && p2 != null) {\n    if (p1.val != p2.val) result = false\n    p1 = p1.next\n    p2 = p2.next\n  }\n\n  // 还原链表并返回结果\n  firstHalfEnd.next = reverseList(secondHalfStart)\n  return result\n}\n\n\n使用递归，反向遍历链表！\n空间复杂度还是 O(n),因为有递归栈\n\nlet frontPointer\n\nconst recursivelyCheck = (currentNode) => {\n  if (currentNode !== null) {\n    //递归节点\n    if (!recursivelyCheck(currentNode.next)) {\n      return false\n    }\n    if (currentNode.val !== frontPointer.val) {\n      return false\n    }\n    frontPointer = frontPointer.next\n  }\n  return true\n}\n\nvar isPalindrome = function (head) {\n  frontPointer = head\n  return recursivelyCheck(head)\n}\n\n"},"程序员面试金典/链表/链表相交.html":{"url":"程序员面试金典/链表/链表相交.html","title":"链表相交","keywords":"","body":"链表相交\n思路\n两条链表不一定一样长，所以都走 len(headA)+len(headB)的距离来确定是否相交\n注意链表的性质\nvar getIntersectionNode = function (headA, headB) {\n  var p1 = headA,\n    p2 = headB\n  while (p1 != p2) {\n    p1 = p1 ? p1.next : headB\n    p2 = p2 ? p2.next : headA\n  }\n  return p1\n}\n\n\n先计算长度，再在后续长度一样地方开始遍历\n\n    let lenA = 0, lenB = 0;\n    let node1 = headA, node2 = headB;\n    while (node1) {\n        lenA ++;\n        node1 = node1.next;\n    }\n    while (node2) {\n        lenB ++;\n        node2 = node2.next;\n    }\n\n    // 根据两个链表的长度，得出长度差n,让长的链表的指针先走n步\n    // 然后两个指针一起移动，判断两者是否相等（指向同一个内存地址）\n    let p1 = headA, p2 = headB;\n    while (lenB > lenA) {\n        p2 = p2.next;\n        lenB --;\n    }\n    while (lenB \n"},"程序员面试金典/链表/环路检测.html":{"url":"程序员面试金典/链表/环路检测.html","title":"环路检测","keywords":"","body":"环路检测\n思路\n\n快慢指针可以检测环，但是无法给出环的开头节点，我开始想到的就是在链表里加个属性，visited。当第一次出现 visited 是 true，就表示找到了环的开始节点\n\nvar detectCycle = function (head) {\n  var p = head\n  var index = 0\n  while (p) {\n    if (!p.visited) {\n      p.visited = true\n    } else {\n      //已经访问过\n      return p\n    }\n    index++\n    p = p.next\n  }\n  return p\n}\n\n这种改变了链表，不太合适，也可以使用一个 set 来保存访问过的节点。原理一样，但空间也是 O(n)\nvar detectCycle = function (head) {\n  const visited = new Set()\n  while (head !== null) {\n    if (visited.has(head)) {\n      return head\n    }\n    visited.add(head)\n    head = head.next\n  }\n  return null\n}\n\n\n原来快慢指针再加一个 ptr 是可以的。看题解吧，这个证明很妙\nhttps://leetcode-cn.com/problems/linked-list-cycle-lcci/solution/huan-lu-jian-ce-by-leetcode-solution-s2la/\n\nvar detectCycle = function (head) {\n  if (head === null) {\n    return null\n  }\n  let slow = head,\n    fast = head\n  while (fast !== null) {\n    slow = slow.next\n    if (fast.next !== null) {\n      fast = fast.next.next\n    } else {\n      return null\n    }\n    if (fast === slow) {\n      let ptr = head\n      while (ptr !== slow) {\n        ptr = ptr.next\n        slow = slow.next\n      }\n      return ptr\n    }\n  }\n  return null\n}\n\n"},"程序员面试金典/栈与队列/三合一.html":{"url":"程序员面试金典/栈与队列/三合一.html","title":"三合一","keywords":"","body":"三合一\n思路\n关键是题目根本读不懂它到底要干嘛\n不想写这种题，其实不难，但费时间理解题意。\n/**\n * @param {number} stackSize\n */\nvar TripleInOne = function (stackSize) {\n  this.stack = []\n  this.size = stackSize\n}\n\n/**\n * @param {number} stackNum\n * @param {number} value\n * @return {void}\n */\nTripleInOne.prototype.push = function (stackNum, value) {\n  if (!this.stack[stackNum]) {\n    this.stack[stackNum] = []\n  }\n  if (this.stack[stackNum].length \n"},"程序员面试金典/栈与队列/栈的最小值.html":{"url":"程序员面试金典/栈与队列/栈的最小值.html","title":"栈的最小值","keywords":"","body":"栈的最小值\n思路\n辅助栈\n/**\n * initialize your data structure here.\n */\nvar MinStack = function () {\n  this.stack = []\n  this.min_stack = [Infinity]\n}\n\n/**\n * @param {number} x\n * @return {void}\n */\nMinStack.prototype.push = function (x) {\n  this.stack.push(x)\n  //这个地方很灵性，理解下，比如总共6个元素，第4个元素开始它一直最小的，比如-3，那从第4次，后续6个min_stack都一直push进-3，这样后面一直getMin几次都是-3最小，除非一直pop，直到只剩下4个元素。这也是为什么pop那里min_stack也要pop\n  this.min_stack.push(Math.min(this.min_stack[this.min_stack.length - 1], x))\n}\n\n/**\n * @return {void}\n */\nMinStack.prototype.pop = function () {\n  this.stack.pop()\n  this.min_stack.pop()\n}\n\n/**\n * @return {number}\n */\nMinStack.prototype.top = function () {\n  return this.stack[this.stack.length - 1]\n}\n\n/**\n * @return {number}\n */\nMinStack.prototype.getMin = function () {\n  return this.min_stack[this.min_stack.length - 1]\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * var obj = new MinStack()\n * obj.push(x)\n * obj.pop()\n * var param_3 = obj.top()\n * var param_4 = obj.getMin()\n */\n\n"},"程序员面试金典/栈与队列/堆盘子.html":{"url":"程序员面试金典/栈与队列/堆盘子.html","title":"堆盘子","keywords":"","body":"堆盘子\n思路\n这题主要就是各种边界情况要考虑，没啥难的\n\n比如 cap 是 0\nindex 不合理，返回-1\n关键是 pop 和 popAt 都要注意空的数组要去除\n\n/**\n * @param {number} cap\n */\nvar StackOfPlates = function (cap) {\n  this.stack = []\n  this.cap = cap\n}\n\n/**\n * @param {number} val\n * @return {void}\n */\nStackOfPlates.prototype.push = function (val) {\n  if (this.stack[this.stack.length - 1] && this.stack[this.stack.length - 1].length \n"},"程序员面试金典/栈与队列/栈排序.html":{"url":"程序员面试金典/栈与队列/栈排序.html","title":"栈排序","keywords":"","body":"栈排序\n思路\nvar SortedStack = function () {\n  this.data = []\n  this.help = []\n}\n\n/**\n * @param {number} val\n * @return {void}\n */\nSortedStack.prototype.push = function (val) {\n  if (this.data.length > 0 && val > this.data[this.data.length - 1]) {\n    while (this.data.length > 0 && val > this.data[this.data.length - 1]) {\n      let temp = this.data.pop()\n      this.help.push(temp)\n    }\n    this.data.push(val)\n    while (this.help.length > 0) {\n      let temp = this.help.pop()\n      this.data.push(temp)\n    }\n  } else {\n    this.data.push(val)\n  }\n}\n\n/**\n * @return {void}\n */\nSortedStack.prototype.pop = function () {\n  if (this.data.length > 0) this.data.pop()\n}\n\n/**\n * @return {number}\n */\nSortedStack.prototype.peek = function () {\n  if (this.data.length > 0) {\n    return this.data[this.data.length - 1]\n  } else {\n    return -1\n  }\n}\n\n/**\n * @return {boolean}\n */\nSortedStack.prototype.isEmpty = function () {\n  return this.data.length > 0\n}\n\n/**\n * Your SortedStack object will be instantiated and called as such:\n * var obj = new SortedStack()\n * obj.push(val)\n * obj.pop()\n * var param_3 = obj.peek()\n * var param_4 = obj.isEmpty()\n */\n\nclass SortedStack {\nprivate:\n    stack data;\n    stack help;\npublic:\n    SortedStack() {\n\n    }\n\n    void push(int val) {\n        if (!data.empty() && val > data.top()) {\n            while (!data.empty() && val > data.top()) {\n                int temp = data.top();\n                data.pop();\n                help.push(temp);\n            }\n            data.push(val);\n            while (!help.empty()) {\n                int temp = help.top();\n                help.pop();\n                data.push(temp);\n            }\n        } else {\n            data.push(val);\n        }\n    }\n\n    void pop() {\n        if (!data.empty()) {\n            data.pop();\n        }\n    }\n\n    int peek() {\n        if (!data.empty()) {\n            return data.top();\n        } else {\n            return -1;\n        }\n    }\n\n    bool isEmpty() {\n        return data.empty();\n    }\n};\n\n"},"程序员面试金典/栈与队列/动物收容所.html":{"url":"程序员面试金典/栈与队列/动物收容所.html","title":"动物收容所","keywords":"","body":"动物收容所\n思路\nvar AnimalShelf = function () {\n  this.queue = []\n}\n\n/**\n * @param {number[]} animal\n * @return {void}\n */\nAnimalShelf.prototype.enqueue = function (animal) {\n  this.queue.push(animal)\n}\n\n/**\n * @return {number[]}\n */\nAnimalShelf.prototype.dequeueAny = function () {\n  if (this.queue.length > 0) {\n    return this.queue.shift()\n  } else {\n    return [-1, -1]\n  }\n}\n\n/**\n * @return {number[]}\n */\nAnimalShelf.prototype.dequeueDog = function () {\n  let i = 0\n  let len = this.queue.length\n  while (i \n"},"程序员面试金典/树与图/节点间通路.html":{"url":"程序员面试金典/树与图/节点间通路.html","title":"节点间通路","keywords":"","body":"节点间通路\n思路\n这题开始题目没看懂,图的知识要加强，具体看题解\n跟回溯一致，DFS\ngraph[i][1] == target && helper(graph, start, graph[i][0])\n理解这一句就懂了，比如我要找 1=>2,那当前找到的是 0=>2，target 一致，那就去找 1=>0，找到就说明可以连上\n还有这个 visited[i]=true 的设置，为了防止死循环？\nvar findWhetherExistsPath = function (n, graph, start, target) {\n  var visited = []\n  function helper(graph, start, target) {\n    // 深度优先搜索\n    for (var i = 0; i \n题解\n// 访问状态数组\nprivate boolean[] visited = null;\npublic boolean findWhetherExistsPath(int n, int[][] graph, int start, int target) {\n    // 创建访问状态数组\n    this.visited = new boolean[graph.length];\n    // DFS\n    return helper(graph, start, target);\n}\n\nprivate boolean helper(int[][] graph, int start, int target) {\n    // 深度优先搜索\n    for (int i = 0; i \n"},"程序员面试金典/树与图/最小高度树.html":{"url":"程序员面试金典/树与图/最小高度树.html","title":"最小高度树","keywords":"","body":"最小高度树\n思路\n有序数组,一直找中间的就行了，递归\nvar sortedArrayToBST = function (nums) {\n  let len = nums.length\n  if (len == 0) return null\n  let index = Math.floor(len / 2)\n  let root = new TreeNode(nums[index])\n  root.left = sortedArrayToBST(nums.slice(0, index))\n  root.right = sortedArrayToBST(nums.slice(index + 1))\n  return root\n}\n\n"},"程序员面试金典/树与图/特定深度节点链表.html":{"url":"程序员面试金典/树与图/特定深度节点链表.html","title":"特定节点深度链表","keywords":"","body":"特定深度节点链表\n\n思路\n层续遍历,然后转成链表\nvar listOfDepth = function (tree) {\n  let levels = []\n  if (!tree) return levels\n\n  let helper = (node, level) => {\n    if (levels.length == level) levels.push([])\n\n    levels[level].push(node.val)\n\n    if (node.left) helper(node.left, level + 1)\n    if (node.right) helper(node.right, level + 1)\n  }\n\n  helper(tree, 0)\n\n  //这里是层序遍历之后的代码\n  levels = levels.map((arr) => {\n    let len = arr.length\n    let i = 0\n    let head = new ListNode(0)\n    let p = head\n    while (i \n"},"程序员面试金典/树与图/检查平衡性.html":{"url":"程序员面试金典/树与图/检查平衡性.html","title":"检查平衡性","keywords":"","body":"检查平衡性\n思路\nvar isBalanced = function (root) {\n  // 标记是否平衡\n  let balanceStatus = true\n\n  const dfs = (node) => {\n    // 如果已经平衡，后续就直接退出\n    if (!balanceStatus) return\n    if (!node) return 0\n    // 左右子树的高度返回值\n    let left = dfs(node.left),\n      right = dfs(node.right)\n    if (Math.abs(left - right) > 1) balanceStatus = false\n    // 返回自身高度，供父节点使用\n    return Math.max(left, right) + 1\n  }\n\n  dfs(root)\n  return balanceStatus\n}\n\n"},"程序员面试金典/树与图/合法二叉搜索树.html":{"url":"程序员面试金典/树与图/合法二叉搜索树.html","title":"合法二叉搜索树","keywords":"","body":"合法二叉搜索树\n思路\nvar isValidBST = function (root) {\n  let max = Infinity,\n    min = -Infinity\n  function judge(node, max, min) {\n    if (node == null) return true\n    if (node.val  min) {\n      return judge(node.left, node.val, min) && judge(node.right, max, node.val)\n    }\n    return false\n  }\n  return judge(root, max, min)\n}\n\n"},"程序员面试金典/树与图/后继者.html":{"url":"程序员面试金典/树与图/后继者.html","title":"后继者","keywords":"","body":"后继者\n\n思路\n先中序遍历，然后看数组有没有后续\n注意是节点，而不是值 val\nvar inorderSuccessor = function (root, p) {\n  var arr = inorderTraversal(root)\n  var index = 0\n  while (index \n"},"程序员面试金典/树与图/首个共同祖先.html":{"url":"程序员面试金典/树与图/首个共同祖先.html","title":"首个共同祖先","keywords":"","body":"首个共同祖先\n\n思路\n深度优先遍历\n题解\nvar lowestCommonAncestor = function (root, p, q) {\n  let ans\n  const dfs = (root, p, q) => {\n    if (root === null) return false\n    const lson = dfs(root.left, p, q)\n    const rson = dfs(root.right, p, q)\n    if ((lson && rson) || ((root.val === p.val || root.val === q.val) && (lson || rson))) {\n      ans = root\n    }\n    return lson || rson || root.val === p.val || root.val === q.val\n  }\n  dfs(root, p, q)\n  return ans\n}\n\n// 作者：LeetCode-Solution\n// 链接：https://leetcode-cn.com/problems/first-common-ancestor-lcci/solution/shou-ge-gong-tong-zu-xian-by-leetcode-so-c2sl/\n// 来源：力扣（LeetCode）\n// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n"},"程序员面试金典/树与图/二叉搜索树序列.html":{"url":"程序员面试金典/树与图/二叉搜索树序列.html","title":"二叉搜索树序列","keywords":"","body":"二叉搜索树序列\n题解\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[][]}\n */\nvar BSTSequences = function (root) {\n  let res = []\n  if (root == null) return [[]]\n  let quenue = []\n\n  let dfs = (root, res, quenue, temp) => {\n    if (root == null) return\n    if (root.left) quenue.push(root.left)\n    if (root.right) quenue.push(root.right)\n    if (quenue.length == 0) {\n      res.push([...temp])\n      return\n    }\n    let { length } = quenue\n    while (length--) {\n      let cur = quenue.shift()\n      dfs(cur, res, quenue.slice(), [...temp, cur.val])\n      quenue.push(cur)\n    }\n  }\n\n  dfs(root, res, quenue, [root.val])\n  return res\n}\n\n// 作者：sc8816\n// 链接：https://leetcode-cn.com/problems/bst-sequences-lcci/solution/dfs-by-sc8816/\n// 来源：力扣（LeetCode）\n// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n"},"程序员面试金典/树与图/检查子树.html":{"url":"程序员面试金典/树与图/检查子树.html","title":"检查子树","keywords":"","body":"检查子树\n思路\n\n递归，很好理解\n\npublic boolean checkSubTree(TreeNode t1, TreeNode t2) {\n        if (t2 == null) return true;\n        if (t1 == null) return false;\n        return isTreeEql(t1, t2) || checkSubTree(t1.left, t2) || checkSubTree(t1.right, t2);\n    }\nprivate boolean isTreeEql(TreeNode t1, TreeNode t2) {\n        if (t1 == t2) return true;\n        if (t1 == null || t2 == null) return false;\n        return t1.val == t2.val && isTreeEql(t1.left, t2.left) && isTreeEql(t1.right, t2.right);\n    }\n\n// 作者：vigilant-hermannoht\n// 链接：https://leetcode-cn.com/problems/check-subtree-lcci/solution/di-gui-he-kmpjie-jue-liang-chong-fang-sh-exip/\n// 来源：力扣（LeetCode）\n// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\nvar checkSubTree = function (t1, t2) {\n  if (t2 == null) return true\n  if (t1 == null) return false\n  return isTreeEql(t1, t2) || checkSubTree(t1.left, t2) || checkSubTree(t1.right, t2)\n}\nfunction isTreeEql(t1, t2) {\n  if (t1 == t2) return true\n  if (t1 == null || t2 == null) return false\n  return t1.val == t2.val && isTreeEql(t1.left, t2.left) && isTreeEql(t1.right, t2.right)\n}\n\n\nKMP 还没学会\n\n"},"程序员面试金典/树与图/求和路径.html":{"url":"程序员面试金典/树与图/求和路径.html","title":"求和路径","keywords":"","body":"求和路径\n\n思路\n我感觉就是回溯，试\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @param {number} sum\n * @return {number}\n */\nvar pathSum = function (root, sum) {}\n\n"},"程序员面试金典/树与图/二叉树的所有路径.html":{"url":"程序员面试金典/树与图/二叉树的所有路径.html","title":"二叉树的所有路径","keywords":"","body":"二叉树的所有路径\n思路\n\ndfs\n\nvar binaryTreePaths = function (root) {\n  var res = []\n  function dfs(root, path) {\n    path += root.val.toString()\n    if (root.left || root.right) {\n      path += '->'\n      if (root.left) dfs(root.left, path)\n      if (root.right) dfs(root.right, path)\n    } else {\n      //叶子节点\n      res.push(path)\n    }\n  }\n  dfs(root, '')\n  return res\n}\n\n\nbfs\n\nvar binaryTreePaths = function (root) {\n  const paths = []\n  if (root === null) {\n    return paths\n  }\n  const node_queue = [root]\n  const path_queue = [root.val.toString()]\n\n  while (node_queue.length) {\n    const node = node_queue.shift()\n    const path = path_queue.shift()\n\n    if (node.left === null && node.right === null) {\n      paths.push(path)\n    } else {\n      if (node.left !== null) {\n        node_queue.push(node.left)\n        path_queue.push(path + '->' + node.left.val.toString())\n      }\n\n      if (node.right !== null) {\n        node_queue.push(node.right)\n        path_queue.push(path + '->' + node.right.val.toString())\n      }\n    }\n  }\n  return paths\n}\n\n// 作者：LeetCode-Solution\n// 链接：https://leetcode-cn.com/problems/binary-tree-paths/solution/er-cha-shu-de-suo-you-lu-jing-by-leetcode-solution/\n// 来源：力扣（LeetCode）\n// 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\n"},"程序员面试金典/树与图/路径总和2.html":{"url":"程序员面试金典/树与图/路径总和2.html","title":"路径总和 II","keywords":"","body":"路径总和 II\n思路\nvar pathSum = function (root, targetSum) {\n  var res = []\n\n  function dfs(root, stack, sum) {\n    if (root) {\n      stack.push(root.val)\n      sum += root.val\n      if (root.left || root.right) {\n        if (root.left) dfs(root.left, stack, sum)\n        if (root.right) dfs(root.right, stack, sum)\n      } else {\n        //叶子节点\n        if (sum == targetSum) {\n          res.push(stack.slice())\n        }\n      }\n      stack.pop()\n    }\n  }\n  dfs(root, [], 0)\n\n  return res\n}\n\n"},"程序员面试金典/树与图/路径总和3.html":{"url":"程序员面试金典/树与图/路径总和3.html","title":"路径总和 III","keywords":"","body":"路径总和 III\n思路\n前缀和，这个知识点,dfs 回溯理解下\nhttps://leetcode-cn.com/problems/path-sum-iii/solution/tong-su-yi-dong-de-qian-zhui-he-jie-fa-b-t8hl/\nvar pathSum = function (root, targetSum) {\n  let map = new Map()\n  let ans = 0\n  dfs(root, 0)\n  return ans\n  /**\n   *\n   * @param {*} root\n   * @param {*} presum 前缀和\n   * @returns\n   */\n  function dfs(root, presum) {\n    if (!root) {\n      return 0\n    }\n    map.set(presum, (map.get(presum) || 0) + 1)\n    let target = presum + root.val\n    //   console.log(target-targetSum)\n    ans += map.get(target - targetSum) || 0\n    //   console.log(map)\n    // 继续找\n    dfs(root.left, target)\n    dfs(root.right, target)\n    // 回溯 撤销\n    map.set(presum, map.get(presum) - 1)\n  }\n}\n\n"},"程序员面试金典/树与图/从叶结点开始的最小字符串.html":{"url":"程序员面试金典/树与图/从叶结点开始的最小字符串.html","title":"从叶结点开始的最小字符串","keywords":"","body":"从叶结点开始的最小字符串\n思路\n"},"程序员面试金典/位操作/插入.html":{"url":"程序员面试金典/位操作/插入.html","title":"插入","keywords":"","body":"插入\n思路\n先把数 N 的 j 到 i 之间的位置的数字变为 0\nM 左移 i 位\n再用 N 或运算 M\n/**\n * @param {number} N\n * @param {number} M\n * @param {number} i\n * @param {number} j\n * @return {number}\n */\nvar insertBits = function (N, M, i, j) {\n  let mask = ((1 \n"},"程序员面试金典/位操作/二进制数转字符串.html":{"url":"程序员面试金典/位操作/二进制数转字符串.html","title":"二进制数转字符串","keywords":"","body":"二进制数转字符串\n思路\nvar printBin = function (num) {\n  let str = '0.'\n  while (str.length = 1) {\n      str += 1\n      num -= 1\n    } else {\n      str += 0\n    }\n  }\n  if (num === 0) {\n    return str\n  }\n  return 'ERROR'\n}\n\n"},"程序员面试金典/位操作/翻转数位.html":{"url":"程序员面试金典/位操作/翻转数位.html","title":"翻转数位","keywords":"","body":"翻转位数\n/**\n * @param {number} num\n * @return {number}\n */\nvar reverseBits = function (num) {\n  var ans = 1,\n    cnt = 0,\n    pre = 0\n  while (num) {\n    if (num & 1) {\n      //如果最后一位是1\n      cnt++\n    } else {\n      ans = Math.max(ans, cnt + pre + 1)\n      pre = cnt //pre保存0右侧有多少位1\n      cnt = 0 //cnt在下一轮循环时找当前0位的左侧有多少个1\n    }\n    num >>= 1\n  }\n  ans = Math.max(ans, cnt + pre + 1) //类似11100110这种情况末尾需再比较一次；\n  return ans\n}\n\n"},"程序员面试金典/位操作/配对交换.html":{"url":"程序员面试金典/位操作/配对交换.html","title":"配对交换","keywords":"","body":"配对交换\n思路\n0xaaaaaaaa 就是 32 位的 0b10101010...\n与的话就是提取偶数位\n0x55555555 就是 32 位的 0b01010101...\n与的话就是提取奇数位\n最后偶数位右移一位，奇数位左移一位，相加得结果\nvar exchangeBits = function (num) {\n  var hex_even = 0xaaaaaaaa\n  var hex_odd = 0x55555555\n  var odd = num & hex_odd\n  var even = num & hex_even\n  var ans = (even >> 1) + (odd \n"},"程序员面试金典/位操作/下一个数.html":{"url":"程序员面试金典/位操作/下一个数.html","title":"下一个数","keywords":"","body":"下一个数\n"},"程序员面试金典/位操作/整数转换.html":{"url":"程序员面试金典/位操作/整数转换.html","title":"整数转换","keywords":"","body":"整数转换\n思路\n一开始写错了，关键这步，兼容负数\nif (res >> 0\nvar convertInteger = function (A, B) {\n  // 异或，然后计算1的个数\n  var res = A ^ B\n  var resStr = res.toString(2)\n  var ans = 0\n  for (var i = 0; i \n"},"程序员面试金典/位操作/绘制直线.html":{"url":"程序员面试金典/位操作/绘制直线.html","title":"绘制直线","keywords":"","body":"绘制直线\n思路\n没思路，直接贴题解\n\n按位或\n再优化：连续赋值\n\nclass Solution {\npublic:\n    vector drawLine(int length, int w, int x1, int x2, int y) {\n        vectorG(length,0);\n        for(int i=x1;i>5]|=1\n"},"程序员面试金典/递归与动态规划/递归乘法.html":{"url":"程序员面试金典/递归与动态规划/递归乘法.html","title":"递归乘法","keywords":"","body":"递归乘法\n\n思路\n\n递归加法\n\nA 和 B 中找到小的那个，往下递归相加\n/**\n * @param {number} A\n * @param {number} B\n * @return {number}\n */\nvar multiply = function (A, B) {\n  if (A > B) {\n    if (B \n\n位运算\n\n按位移动计算，>表示右移，等同于除以 2；\n递归：一直将参数 a 右移，直到 a\n如果参数 a 为奇数，右移损失精度，补加左移参数 b\n/**\n * @param {number} A\n * @param {number} B\n * @return {number}\n */\nvar multiply = function (a, b) {\n  if (a === 1) {\n    return b\n  } else if (a === 2) {\n    return b > 1) > 1, b > 1, b \n"},"程序员面试金典/递归与动态规划/汉诺塔问题.html":{"url":"程序员面试金典/递归与动态规划/汉诺塔问题.html","title":"汉诺塔问题","keywords":"","body":"汉诺塔问题\n思路\n/**\n * @param {number[]} A\n * @param {number[]} B\n * @param {number[]} C\n * @return {void} Do not return anything, modify C in-place instead.\n */\nvar hanota = function (A, B, C) {\n  let n = A.length\n  let move = function (m, a, b, c) {\n    if (m === 1) {\n      // 当只有一个时直接加到c中\n      c.push(a.pop())\n    } else {\n      move(m - 1, a, c, b) // 将 a 上的 n - 1 个 通过 c 移到 b\n      c.push(a.pop()) // 把 a 中剩下的一个直接放到 c\n      move(m - 1, b, a, c) // 在把 b 上的 n - 1 个 通过 a 放到 c\n    }\n  }\n  move(n, A, B, C)\n}\n\n"},"程序员面试金典/递归与动态规划/迷路的机器人.html":{"url":"程序员面试金典/递归与动态规划/迷路的机器人.html","title":"迷路的机器人","keywords":"","body":"迷路的机器人\n思路\n第一反应就是回溯\nvar pathWithObstacles = function (obstacleGrid) {\n  var res = []\n  dfs(obstacleGrid, 0, 0, [])\n  return res.length ? res[0] : []\n  function dfs(obstacleGrid, i, j, track) {\n    // base case\n    if (i == obstacleGrid.length || j == obstacleGrid[0].length) {\n      return\n    }\n    if (obstacleGrid[i][j] == 0) {\n      track.push([i, j])\n      obstacleGrid[i][j] = 2\n\n      if (i === obstacleGrid.length - 1 && j === obstacleGrid[0].length - 1) {\n        res.push([...track])\n        // 撤销\n        track.pop()\n        return\n      }\n      // 向右\n      dfs(obstacleGrid, i, j + 1, track)\n      // 向下\n      dfs(obstacleGrid, i + 1, j, track)\n      // 撤销\n      track.pop()\n    }\n  }\n}\n\n"},"程序员面试金典/递归与动态规划/幂集.html":{"url":"程序员面试金典/递归与动态规划/幂集.html","title":"幂集","keywords":"","body":"幂集\n思路\n回溯\nvar subsets = function (nums) {\n  const res = []\n\n  const dfs = (path, index) => {\n    res.push([...path])\n    for (let i = index; i \n"},"程序员面试金典/递归与动态规划/魔术索引.html":{"url":"程序员面试金典/递归与动态规划/魔术索引.html","title":"魔术索引","keywords":"","body":"魔术索引\n思路\n\n默认方式\n\nvar findMagicIndex = function (nums) {\n  var len = nums.length\n  for (var i = 0; i \n因为有序，应该能优化\n\n二分法\n\n如果不存在重复元素，可以使用二分法\n\n\n\n官方题解\n"},"程序员面试金典/递归与动态规划/三步问题.html":{"url":"程序员面试金典/递归与动态规划/三步问题.html","title":"三步问题","keywords":"","body":"三步问题\n思路\n妈蛋，我说这么简单的题目我怎么会错，题目说了要取模，眼瞎了\n动态规划，最简单的写法\n/**\n * @param {number} n\n * @return {number}\n */\nvar waysToStep = function (n) {\n  var results = [1, 2, 4]\n\n  for (var i = 3; i \n"},"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html":{"url":"程序员面试金典/递归与动态规划/无重复字符串的排列组合.html","title":"无重复字符串的排列组合","keywords":"","body":"无重复字符串的排列组合\n思路\n全排列，回溯\nvar permutation = function (S) {\n  const res = []\n  backtrack('')\n\n  return res\n\n  function backtrack(str) {\n    // 符合字符串长度则收集\n    if (str.length === S.length) {\n      res.push(str)\n      return\n    }\n\n    for (let i = 0; i \n"},"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html":{"url":"程序员面试金典/递归与动态规划/有重复字符串的排列组合.html","title":"有重复字符串的排列组合","keywords":"","body":"有重复字符串的排列组合\n思路\n\n基本的回溯，然后 set 去重\n\nvar permutation = function (S) {\n  let res = new Set()\n  backtrack('', S)\n  res = Array.from(res)\n  return res\n\n  function backtrack(str, S) {\n    // 符合字符串长度则收集\n    if (str.length === S.length) {\n      res.add(str)\n      return\n    }\n\n    for (let i = 0; i  str.length - 1) return str\n  return str.substr(0, index) + chr + str.substr(index + 1)\n}\n\n\n回头再看看题解里的大佬思路\n\n"},"程序员面试金典/递归与动态规划/括号.html":{"url":"程序员面试金典/递归与动态规划/括号.html","title":"括号","keywords":"","body":"括号\n思路\nvar generateParenthesis = function (n) {\n  const res = []\n\n  const dfs = (lRemain, rRemain, str) => {\n    // 左右括号所剩的数量，str是当前构建的字符串\n    if (str.length == 2 * n) {\n      // 字符串构建完成\n      res.push(str) // 加入解集\n      return // 结束当前递归分支\n    }\n    if (lRemain > 0) {\n      // 只要左括号有剩，就可以选它，然后继续做选择（递归）\n      dfs(lRemain - 1, rRemain, str + '(')\n    }\n    if (lRemain \n"},"程序员面试金典/递归与动态规划/颜色填充.html":{"url":"程序员面试金典/递归与动态规划/颜色填充.html","title":"颜色填充]","keywords":"","body":"颜色填充\n思路\nvar floodFill = function (image, sr, sc, newColor) {\n  function helper(image, i, j, oldColor, newColor) {\n    if (i = image.length || j = image[0].length || image[i][j] != oldColor || image[i][j] == newColor) return\n    image[i][j] = newColor\n    helper(image, i + 1, j, oldColor, newColor)\n    helper(image, i - 1, j, oldColor, newColor)\n    helper(image, i, j + 1, oldColor, newColor)\n    helper(image, i, j - 1, oldColor, newColor)\n  }\n  helper(image, sr, sc, image[sr][sc], newColor)\n  return image\n}\n\n"},"程序员面试金典/递归与动态规划/硬币.html":{"url":"程序员面试金典/递归与动态规划/硬币.html","title":"硬币","keywords":"","body":"硬币\n思路\n1.动态规划\n\n\n\n"},"程序员面试金典/递归与动态规划/八皇后.html":{"url":"程序员面试金典/递归与动态规划/八皇后.html","title":"八皇后","keywords":"","body":"八皇后\nvar solveNQueens = function (n) {\n  this.num = n\n  this.arr = []\n  this.result = []\n  initList()\n  buildList(this.arr, 0)\n  for (var i = 0; i  item.join(''))\n  }\n  return this.result\n\n  function initList() {\n    let num = this.num\n    for (let i = 0; i = 0 && j = 0 && j >= 0; i--, j--) {\n      if (list[i][j] === 'Q') return false\n    }\n    return true\n  }\n}\n\n"},"basicalgo/sort/sort.html":{"url":"basicalgo/sort/sort.html","title":"十大排序","keywords":"","body":"排序算法整理\n算法分类\n十种常见排序算法可以分为两大类：\n\n比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此也称为非线性时间比较类排序。\n非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。\n\n\n算法复杂度\n\n1、冒泡排序（Bubble Sort）\n冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 \n1.1 算法描述\n\n比较相邻的元素。如果第一个比第二个大，就交换它们两个；\n对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；\n针对所有的元素重复以上的步骤，除了最后一个；\n重复步骤1~3，直到排序完成。\n\n1.1 动图演示\n\n1.3 代码\nfunction bubbleSort(arr) {\n    var len = arr.length;\n    for (var i = 0; i  arr[j+1]) {        // 相邻元素两两对比\n                var temp = arr[j+1];        // 元素交换\n                arr[j+1] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\n2、选择排序（Selection Sort）\n选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。 \n2.1 算法描述\nn个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：\n\n初始状态：无序区为R[1..n]，有序区为空；\n第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；\nn-1趟结束，数组有序化了。\n\n2.2 动图演示\n\n2.3 代码\nfunction selectionSort(arr) {\n    var len = arr.length;\n    var minIndex, temp;\n    for (var i = 0; i \n2.4 算法分析\n表现最稳定的排序算法之一，因为无论什么数据进去都是O(n2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。理论上讲，选择排序可能也是平时排序一般人想到的最多的排序方法了吧。\n3、插入排序（Insertion Sort）\n插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。\n3.1 算法描述\n一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：\n\n从第一个元素开始，该元素可以认为已经被排序；\n取出下一个元素，在已经排序的元素序列中从后向前扫描；\n如果该元素（已排序）大于新元素，将该元素移到下一位置；\n重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；\n将新元素插入到该位置后；\n重复步骤2~5。\n\n3.2 动图演示\n\n3.3 代码实现\nfunction insertionSort(arr) {\n    var len = arr.length;\n    var preIndex, current;\n    for (var i = 1; i = 0 && arr[preIndex] > current) {\n            arr[preIndex + 1] = arr[preIndex];\n            preIndex--;\n        }\n        arr[preIndex + 1] = current;\n    }\n    return arr;\n}\n\n3.4 算法分析\n插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。\n4、希尔排序（Shell Sort）\n1959年Shell发明，第一个突破O(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。\n4.1 算法描述\n先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：\n\n选择一个增量序列t1，t2，…，tk，其中ti>tj，tk=1；\n按增量序列个数k，对序列进行k 趟排序；\n每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。\n\n4.2 动图演示\n\n4.3 代码实现\nfunction shellSort(arr) {\n    var len = arr.length;\n    for (var gap = Math.floor(len / 2); gap > 0; gap = Math.floor(gap / 2)) {\n        // 注意：这里和动图演示的不一样，动图是分组执行，实际操作是多个分组交替执行\n        for (var i = gap; i = 0 && current \n4.4 算法分析\n希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者Robert Sedgewick提出的。　\n5、归并排序（Merge Sort）\n归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。 \n5.1 算法描述\n\n把长度为n的输入序列分成两个长度为n/2的子序列；\n对这两个子序列分别采用归并排序；\n将两个排序好的子序列合并成一个最终的排序序列。\n\n5.2 动图演示\n\n5.3 代码实现\nfunction mergeSort(arr) {\n    var len = arr.length;\n    if (len 0 && right.length>0) {\n        if (left[0] \n5.4 算法分析\n归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是O(nlogn）的时间复杂度。代价是需要额外的内存空间。\n6、快速排序（Quick Sort）\n快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。\n6.1 算法描述\n快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：\n\n从数列中挑出一个元素，称为 “基准”（pivot）；\n重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；\n递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。\n\n6.2 动图演示\n\n6.3 代码实现\nfunction quickSort(arr, left, right) {\n    var len = arr.length,\n        partitionIndex,\n        left = typeof left != 'number' ? 0 : left,\n        right = typeof right != 'number' ? len - 1 : right;\n\n    if (left \n7、堆排序（Heap Sort）\n堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。\n7.1 算法描述\n\n将初始待排序关键字序列(R1,R2….Rn)构建成大顶堆，此堆为初始的无序区；\n将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,……Rn-1)和新的有序区(Rn),且满足R[1,2…n-1]\n由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,……Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2….Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。\n\n7.2 动图演示\n\n7.3 代码实现\nvar len;    // 因为声明的多个函数都需要数据长度，所以把len设置成为全局变量\n\nfunction buildMaxHeap(arr) {   // 建立大顶堆\n    len = arr.length;\n    for (var i = Math.floor(len/2); i >= 0; i--) {\n        heapify(arr, i);\n    }\n}\n\nfunction heapify(arr, i) {     // 堆调整\n    var left = 2 * i + 1,\n        right = 2 * i + 2,\n        largest = i;\n\n    if (left  arr[largest]) {\n        largest = left;\n    }\n\n    if (right  arr[largest]) {\n        largest = right;\n    }\n\n    if (largest != i) {\n        swap(arr, i, largest);\n        heapify(arr, largest);\n    }\n}\n\nfunction swap(arr, i, j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nfunction heapSort(arr) {\n    buildMaxHeap(arr);\n\n    for (var i = arr.length - 1; i > 0; i--) {\n        swap(arr, 0, i);\n        len--;\n        heapify(arr, 0);\n    }\n    return arr;\n}\n\n8、计数排序（Counting Sort）\n计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。 作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。\n8.1 算法描述\n\n找出待排序的数组中最大和最小的元素；\n统计数组中每个值为i的元素出现的次数，存入数组C的第i项；\n对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）；\n反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。\n\n8.2 动图演示\n\n8.3 代码实现\nfunction countingSort(arr, maxValue) {\n    var bucket = new Array(maxValue + 1),\n        sortedIndex = 0;\n        arrLen = arr.length,\n        bucketLen = maxValue + 1;\n\n    for (var i = 0; i  0) {\n            arr[sortedIndex++] = j;\n            bucket[j]--;\n        }\n    }\n\n    return arr;\n}\n\n8.4 算法分析\n计数排序是一个稳定的排序算法。当输入的元素是 n 个 0到 k 之间的整数时，时间复杂度是O(n+k)，空间复杂度也是O(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。\n9、桶排序（Bucket Sort）\n桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序 (Bucket sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。\n9.1 算法描述\n\n设置一个定量的数组当作空桶；\n遍历输入数据，并且把数据一个一个放到对应的桶里去；\n对每个不是空的桶进行排序；\n从不是空的桶里把排好序的数据拼接起来。\n\n9.2 图片演示\n\n9.3 代码实现\nfunction bucketSort(arr, bucketSize) {\n    if (arr.length === 0) {\n      return arr;\n    }\n\n    var i;\n    var minValue = arr[0];\n    var maxValue = arr[0];\n    for (i = 1; i  maxValue) {\n          maxValue = arr[i];                // 输入数据的最大值\n      }\n    }\n\n    // 桶的初始化\n    var DEFAULT_BUCKET_SIZE = 5;            // 设置桶的默认数量为5\n    bucketSize = bucketSize || DEFAULT_BUCKET_SIZE;\n    var bucketCount = Math.floor((maxValue - minValue) / bucketSize) + 1;  \n    var buckets = new Array(bucketCount);\n    for (i = 0; i \n9.4 算法分析\n桶排序最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。 \n10、基数排序（Radix Sort）\n基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。\n10.1 算法描述\n\n取得数组中的最大数，并取得位数；\narr为原始数组，从最低位开始取每个位组成radix数组；\n对radix进行计数排序（利用计数排序适用于小范围数的特点）；\n\n10.2 动图演示\n \n10.3 代码实现\nvar counter = [];\nfunction radixSort(arr, maxDigit) {\n    var mod = 10;\n    var dev = 1;\n    for (var i = 0; i \n10.4 算法分析\n基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要O(n)的时间复杂度，而且分配之后得到新的关键字序列又需要O(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是O(d*2n) ，当然d要远远小于n，因此基本上还是线性级别的。\n基数排序的空间复杂度为O(n+k)，其中k为桶的数量。一般来说n>>k，因此额外空间需要大概n个左右。\n转自博客园 原文链接：https://www.cnblogs.com/onepixel/p/7674659.html\n"},"basicalgo/datastruct/map.html":{"url":"basicalgo/datastruct/map.html","title":"ES6Map 数据结构底层原理模拟","keywords":"","body":"ES6Map数据结构底层原理模拟\nES6 的Map数据结构 用邻接链表的底层原理来简单模拟实现，不是用遍历去查找 这样体现不出查找快速的特点。就是给我们的数据分好类 然后再从同类中查找，这里我们用hash值来分类。\n    //定义一个自己的myMap，执行初始化函数，在其原型链上写\n    function myMap(){\n        this.init();\n    };\n\n    //这里定义了存放的桶的个数，\n    myMap.prototype.len = 8;\n    //用来存放我们的kv\n    myMap.prototype.bucket = [];\n    //初始化函数 让每个桶里的初始next等于null\n    myMap.prototype.init = function (key){\n        for(let i = 0; i  3) ? key.length : 3;\n            for(let i = strLen - 3; i \n"}}}